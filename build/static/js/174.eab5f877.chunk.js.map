{"version":3,"sources":["../node_modules/@material-ui/lab/esm/TimelineOppositeContent/TimelineOppositeContent.js","routes/views/MaterialTimelines/CenterAlign/index.js"],"names":["TimelineOppositeContent","React","props","ref","classes","className","other","_objectWithoutProperties","_React$useContext$ali","TimelineContext","align","_React$useContext2$cl","TimelineItemContext","contextClasses","_extends","clsx","root","oppositeContent","concat","capitalize","muiName","withStyles","padding","marginRight","textAlign","flex","alignRight","name","breadcrumbs","label","link","isActive","CenterAlignTimeline","timeline","coremat","heading","map","item","index","key","src","avatar","style","display","component","mb","mt","time","color","length","marginBottom","fontSize","title","description"],"mappings":"2HAAA,oEAyBIA,EAAuCC,cAAiB,SAAiCC,EAAOC,GAClG,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAQC,YAAyBL,EAAO,CAAC,UAAW,cAGpDM,EADoBP,aAAiBQ,KACKC,MAC1CA,OAAkC,IAA1BF,EAAmC,OAASA,EAGpDG,EADqBV,aAAiBW,KACKR,QAC3CS,OAA2C,IAA1BF,EAAmC,GAAKA,EAE7D,OAAoBV,gBAAoB,MAAOa,YAAS,CACtDT,UAAWU,kBAAKX,EAAQY,KAAMH,EAAeI,gBAAiBb,EAAQ,QAAQc,OAAOC,YAAWT,KAAUL,GAC1GF,IAAKA,GACJG,OAwBLN,EAAwBoB,QAAU,0BACnBC,iBAzDK,WAClB,MAAO,CAELL,KAAM,CACJM,QAAS,WACTC,YAAa,OACbC,UAAW,QACXC,KAAM,GAIRC,WAAY,CACVF,UAAW,WA6CiB,CAChCG,KAAM,8BADON,CAEZrB,I,kCCpEH,4IAcM4B,EAAc,CAClB,CAAEC,MAAO,OAAQC,KAAM,KACvB,CAAED,MAAO,qBAAsBC,KAAM,sBACrC,CAAED,MAAO,wBAAyBE,UAAU,IAoC/BC,UAjCa,WAC1B,IAAQC,EAAaC,IAAbD,SAER,OACE,kBAAC,IAAD,CAAeE,QAAQ,wBAAwBP,YAAaA,GAC1D,kBAAC,IAAD,CAAUlB,MAAM,aACbuB,EAASG,KAAI,SAACC,EAAMC,GAAP,OACZ,kBAAC,IAAD,CAAcC,IAAKD,GACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWE,IAAKH,EAAKI,OAAQC,MAAO,CAAEC,QAAS,kBAC/C,kBAAC,IAAD,CAAKC,UAAU,IAAIC,GAAI,EAAGC,GAAI,GAC3BT,EAAKU,OAGV,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAaC,MAAOV,EAAQ,IAAM,EAAI,UAAY,cACjDL,EAASgB,OAASX,EAAQ,GAAK,kBAAC,IAAD,OAElC,kBAAC,IAAD,CAAiBI,MAAO,CAAEQ,aAAc,KACtC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKN,UAAU,KAAKO,SAAU,GAAIL,GAAI,EAAGD,GAAI,GAC1CR,EAAKe,OAER,2BAAIf,EAAKgB","file":"static/js/174.eab5f877.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { capitalize } from '@material-ui/core/utils';\nimport { withStyles } from '@material-ui/core/styles';\nimport TimelineContext from '../Timeline/TimelineContext';\nimport TimelineItemContext from '../TimelineItem/TimelineItemContext';\nexport var styles = function styles() {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      padding: '6px 16px',\n      marginRight: 'auto',\n      textAlign: 'right',\n      flex: 1\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'left'\n    }\n  };\n};\nvar TimelineOppositeContent = /*#__PURE__*/React.forwardRef(function TimelineOppositeContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var _React$useContext = React.useContext(TimelineContext),\n      _React$useContext$ali = _React$useContext.align,\n      align = _React$useContext$ali === void 0 ? 'left' : _React$useContext$ali;\n\n  var _React$useContext2 = React.useContext(TimelineItemContext),\n      _React$useContext2$cl = _React$useContext2.classes,\n      contextClasses = _React$useContext2$cl === void 0 ? {} : _React$useContext2$cl;\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, contextClasses.oppositeContent, classes[\"align\".concat(capitalize(align))], className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TimelineOppositeContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nTimelineOppositeContent.muiName = 'TimelineOppositeContent';\nexport default withStyles(styles, {\n  name: 'MuiTimelineOppositeContent'\n})(TimelineOppositeContent);","import React from 'react';\r\nimport PageContainer from '../../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport Box from '@material-ui/core/Box';\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\nimport { coremat } from '../../../../@fake-db';\r\nimport { TimelineOppositeContent } from '@material-ui/lab';\r\nimport CmtAvatar from '../../../../@coremat/CmtAvatar';\r\nimport { JumboCard } from '../../../../@jumbo/components/Common';\r\n\r\nconst breadcrumbs = [\r\n  { label: 'Home', link: '/' },\r\n  { label: 'Material Timelines', link: '/material-timeline' },\r\n  { label: 'Center Align Timeline', isActive: true },\r\n];\r\n\r\nconst CenterAlignTimeline = () => {\r\n  const { timeline } = coremat;\r\n\r\n  return (\r\n    <PageContainer heading=\"Center Align Timeline\" breadcrumbs={breadcrumbs}>\r\n      <Timeline align=\"alternate\">\r\n        {timeline.map((item, index) => (\r\n          <TimelineItem key={index}>\r\n            <TimelineOppositeContent>\r\n              <CmtAvatar src={item.avatar} style={{ display: 'inline-block' }} />\r\n              <Box component=\"p\" mb={0} mt={2}>\r\n                {item.time}\r\n              </Box>\r\n            </TimelineOppositeContent>\r\n            <TimelineSeparator>\r\n              <TimelineDot color={index % 2 === 0 ? 'primary' : 'secondary'} />\r\n              {timeline.length > index + 1 && <TimelineConnector />}\r\n            </TimelineSeparator>\r\n            <TimelineContent style={{ marginBottom: 20 }}>\r\n              <JumboCard>\r\n                <Box component=\"h2\" fontSize={20} mt={0} mb={3}>\r\n                  {item.title}\r\n                </Box>\r\n                <p>{item.description}</p>\r\n              </JumboCard>\r\n            </TimelineContent>\r\n          </TimelineItem>\r\n        ))}\r\n      </Timeline>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default CenterAlignTimeline;\r\n"],"sourceRoot":""}