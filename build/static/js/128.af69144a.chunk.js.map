{"version":3,"sources":["@jumbo/components/PageComponents/layouts/PageContainer.js","@jumbo/components/PageComponents/PageHeader.js","@jumbo/components/PageComponents/PageBreadcrumbs/index.js","@jumbo/components/PageComponents/layouts/CorematComponentDemo.js","@jumbo/components/PageComponents/layouts/MuiComponentDemo.js","@jumbo/components/PageComponents/layouts/ComponentsDemo.js","webpack:///./src/@fake-db/mui-components/popover sync nonrecursive ./node_modules/raw-loader/dist/cjs.js \\.(txt|js|md|tsx)$?0ca6","@fake-db/mui-components/popover/AnchorPlayground.txt","@fake-db/mui-components/popover/MouseOverPopover.txt","@fake-db/mui-components/popover/PopoverPopupState.txt","@fake-db/mui-components/popover/SimplePopover.txt","routes/Components/MuiComponents/Popover/demo/AnchorPlayground.js","routes/Components/MuiComponents/Popover/demo/MouseOverPopover.js","routes/Components/MuiComponents/Popover/demo/PopoverPopupState.js","routes/Components/MuiComponents/Popover/demo/SimplePopover.js","routes/Components/MuiComponents/Popover/index.js"],"names":["useStyles","makeStyles","pageFull","width","PageContainer","heading","breadcrumbs","children","className","restProps","classes","in","direction","mountOnEnter","unmountOnExit","clsx","breadcrumbComponent","items","theme","pageHeaderRoot","display","flexDirection","breakpoints","up","alignItems","titleRoot","down","marginBottom","PageHeader","rest","Box","mb","xs","md","lg","Typography","component","variant","ml","sm","textSm","fontSize","linkBlock","color","PageBreadcrumbs","Breadcrumbs","aria-label","map","item","index","isActive","key","label","to","link","CorematComponentDemo","SourceCodeComponent","SettingsComponent","GridContainer","Grid","CmtCard","MuiComponentDemo","pageTitle","menus","ComponentsDemo","root","flexWrap","contentArea","paddingRight","typography","pxToRem","contentSidebar","height","position","top","overflowY","flexShrink","xsDown","menu","dense","button","href","primary","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","inlineStyles","anchorVertical","center","bottom","anchorHorizontal","left","right","withStyles","buttonWrapper","spacing","anchor","backgroundColor","green","borderRadius","radioAnchor","checked","margin","props","anchorRef","React","useRef","useState","open","anchorOriginVertical","anchorOriginHorizontal","transformOriginVertical","transformOriginHorizontal","positionTop","positionLeft","anchorReference","state","setState","handleChange","event","target","name","value","handleNumberInputChange","parseInt","mode","jsx","radioAnchorClasses","justifyContent","Button","ref","onClick","style","Popover","anchorEl","current","anchorPosition","onClose","anchorOrigin","vertical","horizontal","transformOrigin","FormControl","FormLabel","RadioGroup","row","onChange","FormControlLabel","control","Radio","formControl","InputLabel","htmlFor","Input","type","language","popover","pointerEvents","paper","padding","MouseOverPopover","setAnchorEl","handlePopoverClose","Boolean","aria-owns","undefined","aria-haspopup","onMouseEnter","currentTarget","onMouseLeave","disableRestoreFocus","PopoverPopupState","popupId","popupState","bindTrigger","bindPopover","p","SimplePopover","aria-describedby","section","sectionHeading","requireRaw","require","demos","filename","CodeViewerCard","default"],"mappings":"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","file":"static/js/128.af69144a.chunk.js","sourcesContent":["import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { PageBreadcrumbs, PageHeader } from '../index';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  pageFull: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst PageContainer = ({ heading, breadcrumbs, children, className, restProps }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Slide in={true} direction=\"up\" mountOnEnter unmountOnExit>\r\n      <Box className={clsx(classes.pageFull, className)} {...restProps}>\r\n        {(heading || breadcrumbs) && (\r\n          <PageHeader heading={heading} breadcrumbComponent={breadcrumbs && <PageBreadcrumbs items={breadcrumbs} />} />\r\n        )}\r\n        {children}\r\n      </Box>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default PageContainer;\r\n","import React from 'react';\r\nimport { Box, makeStyles, Typography } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageHeaderRoot: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.up('sm')]: {\r\n      alignItems: 'center',\r\n      flexDirection: 'row',\r\n    },\r\n  },\r\n  titleRoot: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginBottom: 10,\r\n    },\r\n  },\r\n}));\r\n\r\nconst PageHeader = ({ heading, breadcrumbComponent, children, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={clsx(classes.pageHeaderRoot, 'page-header')} mb={{ xs: 5, md: 6, lg: 8 }} {...rest}>\r\n      <Typography component=\"div\" variant=\"h1\" className={clsx(classes.titleRoot, 'title')}>\r\n        {heading}\r\n      </Typography>\r\n      <Box ml={{ sm: 'auto' }}>{breadcrumbComponent}</Box>\r\n\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import React from 'react';\r\nimport { Breadcrumbs, makeStyles } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { NavLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  textSm: {\r\n    fontSize: 12,\r\n  },\r\n  linkBlock: {\r\n    display: 'block',\r\n    color: 'inherit',\r\n  },\r\n}));\r\n\r\nconst PageBreadcrumbs = ({ items, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Breadcrumbs className=\"bread-crumbs\" aria-label=\"breadcrumb {...rest}\">\r\n      {items.map((item, index) =>\r\n        item.isActive ? (\r\n          <Typography key={index} className={classes.textSm} color=\"textPrimary\">\r\n            {item.label}\r\n          </Typography>\r\n        ) : (\r\n          <NavLink key={index} className={clsx(classes.textSm, classes.linkBlock)} color=\"inherit\" to={item.link || '/'}>\r\n            {item.label}\r\n          </NavLink>\r\n        ),\r\n      )}\r\n    </Breadcrumbs>\r\n  );\r\n};\r\n\r\nexport default PageBreadcrumbs;\r\n","import React from 'react';\r\nimport { Box, Grid } from '@material-ui/core';\r\nimport CmtCard from '../../../../@coremat/CmtCard';\r\nimport { PageHeader } from '../index';\r\nimport GridContainer from '../../GridContainer';\r\nimport PageContainer from './PageContainer';\r\n\r\nconst CorematComponentDemo = ({ SourceCodeComponent, SettingsComponent, children }) => {\r\n  return (\r\n    <PageContainer>\r\n      <GridContainer>\r\n        <Grid item xs={12} md={7}>\r\n          <PageHeader heading=\"Preview\" />\r\n          <Box mb={8}>{children}</Box>\r\n          <CmtCard>{SourceCodeComponent}</CmtCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={5}>\r\n          {SettingsComponent}\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default CorematComponentDemo;\r\n","import React from 'react';\r\nimport ComponentsDemo from './ComponentsDemo';\r\n\r\nconst MuiComponentDemo = ({ pageTitle, menus, children }) => {\r\n  const breadcrumbs = [\r\n    { label: 'Home', link: '/' },\r\n    { label: 'Material UI Components', link: '/components/mui' },\r\n    { label: pageTitle, isActive: true },\r\n  ];\r\n  return (\r\n    <ComponentsDemo pageTitle={pageTitle} breadcrumbs={breadcrumbs} menus={menus}>\r\n      {children}\r\n    </ComponentsDemo>\r\n  );\r\n};\r\nexport default MuiComponentDemo;\r\n","import React from 'react';\r\nimport { Box, Hidden, List, ListItem, ListItemText, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PageContainer from './PageContainer';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  contentArea: {\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingRight: theme.typography.pxToRem(30),\r\n      width: `calc(100% - ${theme.typography.pxToRem(175)})`,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingRight: theme.typography.pxToRem(54),\r\n    },\r\n  },\r\n  contentSidebar: {\r\n    width: theme.typography.pxToRem(175),\r\n    height: `calc(100vh - ${theme.typography.pxToRem(102)})`,\r\n    position: 'sticky',\r\n    top: 30,\r\n    overflowY: 'auto',\r\n    flexShrink: 0,\r\n  },\r\n}));\r\n\r\nconst ComponentsDemo = ({ pageTitle, menus, breadcrumbs, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <PageContainer heading={pageTitle} breadcrumbs={breadcrumbs}>\r\n      <Box className={classes.root}>\r\n        <Box className={classes.contentArea}>{children}</Box>\r\n        <Hidden xsDown>\r\n          <Box className={classes.contentSidebar}>\r\n            <Typography component=\"h4\" variant=\"h4\">\r\n              Contents\r\n            </Typography>\r\n            <List>\r\n              {menus.map((menu, index) => (\r\n                <ListItem key={index} dense button component=\"a\" href={`#${menu.link}`}>\r\n                  <ListItemText primary={menu.label} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Box>\r\n        </Hidden>\r\n      </Box>\r\n    </PageContainer>\r\n  );\r\n};\r\nexport default ComponentsDemo;\r\n","var map = {\n\t\"./AnchorPlayground.txt\": 2850,\n\t\"./MouseOverPopover.txt\": 2851,\n\t\"./PopoverPopupState.txt\": 2852,\n\t\"./SimplePopover.txt\": 2853\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2849;","export default \"import React from 'react';\\r\\nimport PropTypes from 'prop-types';\\r\\nimport { withStyles } from '@material-ui/core/styles';\\r\\nimport FormControl from '@material-ui/core/FormControl';\\r\\nimport FormLabel from '@material-ui/core/FormLabel';\\r\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\r\\nimport RadioGroup from '@material-ui/core/RadioGroup';\\r\\nimport Radio from '@material-ui/core/Radio';\\r\\nimport Grid from '@material-ui/core/Grid';\\r\\nimport { green } from '@material-ui/core/colors';\\r\\nimport Typography from '@material-ui/core/Typography';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport Popover from '@material-ui/core/Popover';\\r\\nimport Input from '@material-ui/core/Input';\\r\\nimport InputLabel from '@material-ui/core/InputLabel';\\r\\nimport { Box } from '@material-ui/core';\\r\\nimport { HighlightedCode } from '../../../../../../@jumbo/components/Common';\\r\\n\\r\\nconst styles = theme => ({\\r\\n  buttonWrapper: {\\r\\n    position: 'relative',\\r\\n    marginBottom: theme.spacing(8),\\r\\n  },\\r\\n  anchor: {\\r\\n    backgroundColor: green[500],\\r\\n    width: 10,\\r\\n    height: 10,\\r\\n    borderRadius: '50%',\\r\\n    position: 'absolute',\\r\\n  },\\r\\n  radioAnchor: {\\r\\n    color: green[600],\\r\\n    '&$checked': {\\r\\n      color: green[500],\\r\\n    },\\r\\n  },\\r\\n  checked: {},\\r\\n  typography: {\\r\\n    margin: theme.spacing(4),\\r\\n  },\\r\\n});\\r\\n\\r\\nconst inlineStyles = {\\r\\n  anchorVertical: {\\r\\n    top: {\\r\\n      top: -5,\\r\\n    },\\r\\n    center: {\\r\\n      top: 'calc(50% - 5px)',\\r\\n    },\\r\\n    bottom: {\\r\\n      bottom: -5,\\r\\n    },\\r\\n  },\\r\\n  anchorHorizontal: {\\r\\n    left: {\\r\\n      left: -5,\\r\\n    },\\r\\n    center: {\\r\\n      left: 'calc(50% - 5px)',\\r\\n    },\\r\\n    right: {\\r\\n      right: -5,\\r\\n    },\\r\\n  },\\r\\n};\\r\\n\\r\\nfunction AnchorPlayground(props) {\\r\\n  const { classes } = props;\\r\\n  const anchorRef = React.useRef();\\r\\n\\r\\n  const [state, setState] = React.useState({\\r\\n    open: false,\\r\\n    anchorOriginVertical: 'top',\\r\\n    anchorOriginHorizontal: 'left',\\r\\n    transformOriginVertical: 'top',\\r\\n    transformOriginHorizontal: 'left',\\r\\n    positionTop: 200, // Just so the popover can be spotted more easily\\r\\n    positionLeft: 400, // Same as above\\r\\n    anchorReference: 'anchorEl',\\r\\n  });\\r\\n\\r\\n  const {\\r\\n    open,\\r\\n    anchorOriginVertical,\\r\\n    anchorOriginHorizontal,\\r\\n    transformOriginVertical,\\r\\n    transformOriginHorizontal,\\r\\n    positionTop,\\r\\n    positionLeft,\\r\\n    anchorReference,\\r\\n  } = state;\\r\\n\\r\\n  const handleChange = event => {\\r\\n    setState({\\r\\n      ...state,\\r\\n      [event.target.name]: event.target.value,\\r\\n    });\\r\\n  };\\r\\n\\r\\n  const handleNumberInputChange = key => event => {\\r\\n    setState({\\r\\n      ...state,\\r\\n      [key]: parseInt(event.target.value, 10),\\r\\n    });\\r\\n  };\\r\\n\\r\\n  const handleClickButton = () => {\\r\\n    setState({\\r\\n      ...state,\\r\\n      open: true,\\r\\n    });\\r\\n  };\\r\\n\\r\\n  const handleClose = () => {\\r\\n    setState({\\r\\n      ...state,\\r\\n      open: false,\\r\\n    });\\r\\n  };\\r\\n\\r\\n  let mode = '';\\r\\n\\r\\n  if (anchorReference === 'anchorPosition') {\\r\\n    mode = `\\r\\n  anchorReference=\\\"${anchorReference}\\\"\\r\\n  anchorPosition={{ top: ${positionTop}, left: ${positionLeft} }}`;\\r\\n  }\\r\\n\\r\\n  const jsx = `\\r\\n<Popover ${mode}\\r\\n  anchorOrigin={{\\r\\n    vertical: '${anchorOriginVertical}',\\r\\n    horizontal: '${anchorOriginHorizontal}',\\r\\n  }}\\r\\n  transformOrigin={{\\r\\n    vertical: '${transformOriginVertical}',\\r\\n    horizontal: '${transformOriginHorizontal}',\\r\\n  }}\\r\\n>\\r\\n  The content of the Popover.\\r\\n</Popover>\\r\\n`;\\r\\n\\r\\n  const radioAnchorClasses = {\\r\\n    root: classes.radioAnchor,\\r\\n    checked: classes.checked,\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box>\\r\\n      <Box display=\\\"flex\\\" justifyContent=\\\"center\\\">\\r\\n        <Box className={classes.buttonWrapper}>\\r\\n          <Button ref={anchorRef} variant=\\\"contained\\\" onClick={handleClickButton}>\\r\\n            Open Popover\\r\\n          </Button>\\r\\n          {anchorReference === 'anchorEl' && (\\r\\n            <div\\r\\n              className={classes.anchor}\\r\\n              style={{\\r\\n                ...inlineStyles.anchorVertical[anchorOriginVertical],\\r\\n                ...inlineStyles.anchorHorizontal[anchorOriginHorizontal],\\r\\n              }}\\r\\n            />\\r\\n          )}\\r\\n        </Box>\\r\\n      </Box>\\r\\n      <Popover\\r\\n        open={open}\\r\\n        anchorEl={anchorRef.current}\\r\\n        anchorReference={anchorReference}\\r\\n        anchorPosition={{\\r\\n          top: positionTop,\\r\\n          left: positionLeft,\\r\\n        }}\\r\\n        onClose={handleClose}\\r\\n        anchorOrigin={{\\r\\n          vertical: anchorOriginVertical,\\r\\n          horizontal: anchorOriginHorizontal,\\r\\n        }}\\r\\n        transformOrigin={{\\r\\n          vertical: transformOriginVertical,\\r\\n          horizontal: transformOriginHorizontal,\\r\\n        }}>\\r\\n        <Typography className={classes.typography}>The content of the Popover.</Typography>\\r\\n      </Popover>\\r\\n      <Grid container spacing={2}>\\r\\n        <Grid item xs={12} sm={6}>\\r\\n          <FormControl component=\\\"fieldset\\\">\\r\\n            <FormLabel component=\\\"legend\\\">anchorReference</FormLabel>\\r\\n            <RadioGroup\\r\\n              row\\r\\n              aria-label=\\\"anchor reference\\\"\\r\\n              name=\\\"anchorReference\\\"\\r\\n              value={anchorReference}\\r\\n              onChange={handleChange}>\\r\\n              <FormControlLabel value=\\\"anchorEl\\\" control={<Radio />} label=\\\"anchorEl\\\" />\\r\\n              <FormControlLabel value=\\\"anchorPosition\\\" control={<Radio />} label=\\\"anchorPosition\\\" />\\r\\n            </RadioGroup>\\r\\n          </FormControl>\\r\\n        </Grid>\\r\\n        <Grid item xs={12} sm={6}>\\r\\n          <FormControl className={classes.formControl}>\\r\\n            <InputLabel htmlFor=\\\"position-top\\\">anchorPosition.top</InputLabel>\\r\\n            <Input id=\\\"position-top\\\" type=\\\"number\\\" value={positionTop} onChange={handleNumberInputChange('positionTop')} />\\r\\n          </FormControl>\\r\\n          &nbsp;\\r\\n          <FormControl className={classes.formControl}>\\r\\n            <InputLabel htmlFor=\\\"position-left\\\">anchorPosition.left</InputLabel>\\r\\n            <Input\\r\\n              id=\\\"position-left\\\"\\r\\n              type=\\\"number\\\"\\r\\n              value={positionLeft}\\r\\n              onChange={handleNumberInputChange('positionLeft')}\\r\\n            />\\r\\n          </FormControl>\\r\\n        </Grid>\\r\\n        <Grid item xs={12} sm={6}>\\r\\n          <FormControl component=\\\"fieldset\\\">\\r\\n            <FormLabel component=\\\"legend\\\">anchorOrigin.vertical</FormLabel>\\r\\n            <RadioGroup\\r\\n              aria-label=\\\"anchor origin vertical\\\"\\r\\n              name=\\\"anchorOriginVertical\\\"\\r\\n              value={anchorOriginVertical}\\r\\n              onChange={handleChange}>\\r\\n              <FormControlLabel value=\\\"top\\\" control={<Radio classes={radioAnchorClasses} />} label=\\\"Top\\\" />\\r\\n              <FormControlLabel value=\\\"center\\\" control={<Radio classes={radioAnchorClasses} />} label=\\\"Center\\\" />\\r\\n              <FormControlLabel value=\\\"bottom\\\" control={<Radio classes={radioAnchorClasses} />} label=\\\"Bottom\\\" />\\r\\n            </RadioGroup>\\r\\n          </FormControl>\\r\\n        </Grid>\\r\\n        <Grid item xs={12} sm={6}>\\r\\n          <FormControl component=\\\"fieldset\\\">\\r\\n            <FormLabel component=\\\"legend\\\">transformOrigin.vertical</FormLabel>\\r\\n            <RadioGroup\\r\\n              aria-label=\\\"transform origin vertical\\\"\\r\\n              name=\\\"transformOriginVertical\\\"\\r\\n              value={transformOriginVertical}\\r\\n              onChange={handleChange}>\\r\\n              <FormControlLabel value=\\\"top\\\" control={<Radio />} label=\\\"Top\\\" />\\r\\n              <FormControlLabel value=\\\"center\\\" control={<Radio color=\\\"primary\\\" />} label=\\\"Center\\\" />\\r\\n              <FormControlLabel value=\\\"bottom\\\" control={<Radio color=\\\"primary\\\" />} label=\\\"Bottom\\\" />\\r\\n            </RadioGroup>\\r\\n          </FormControl>\\r\\n        </Grid>\\r\\n        <Grid item xs={12} sm={6}>\\r\\n          <FormControl component=\\\"fieldset\\\">\\r\\n            <FormLabel component=\\\"legend\\\">anchorOrigin.horizontal</FormLabel>\\r\\n            <RadioGroup\\r\\n              row\\r\\n              aria-label=\\\"anchor origin horizontal\\\"\\r\\n              name=\\\"anchorOriginHorizontal\\\"\\r\\n              value={anchorOriginHorizontal}\\r\\n              onChange={handleChange}>\\r\\n              <FormControlLabel value=\\\"left\\\" control={<Radio classes={radioAnchorClasses} />} label=\\\"Left\\\" />\\r\\n              <FormControlLabel value=\\\"center\\\" control={<Radio classes={radioAnchorClasses} />} label=\\\"Center\\\" />\\r\\n              <FormControlLabel value=\\\"right\\\" control={<Radio classes={radioAnchorClasses} />} label=\\\"Right\\\" />\\r\\n            </RadioGroup>\\r\\n          </FormControl>\\r\\n        </Grid>\\r\\n        <Grid item xs={12} sm={6}>\\r\\n          <FormControl component=\\\"fieldset\\\">\\r\\n            <FormLabel component=\\\"legend\\\">transformOrigin.horizontal</FormLabel>\\r\\n            <RadioGroup\\r\\n              row\\r\\n              aria-label=\\\"transform origin horizontal\\\"\\r\\n              name=\\\"transformOriginHorizontal\\\"\\r\\n              value={transformOriginHorizontal}\\r\\n              onChange={handleChange}>\\r\\n              <FormControlLabel value=\\\"left\\\" control={<Radio color=\\\"primary\\\" />} label=\\\"Left\\\" />\\r\\n              <FormControlLabel value=\\\"center\\\" control={<Radio color=\\\"primary\\\" />} label=\\\"Center\\\" />\\r\\n              <FormControlLabel value=\\\"right\\\" control={<Radio color=\\\"primary\\\" />} label=\\\"Right\\\" />\\r\\n            </RadioGroup>\\r\\n          </FormControl>\\r\\n        </Grid>\\r\\n      </Grid>\\r\\n      <HighlightedCode code={jsx} language=\\\"jsx\\\" />\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\\r\\nAnchorPlayground.propTypes = {\\r\\n  classes: PropTypes.object.isRequired,\\r\\n};\\r\\n\\r\\nexport default withStyles(styles)(AnchorPlayground);\\r\\n\";","export default \"import React from 'react';\\r\\nimport Popover from '@material-ui/core/Popover';\\r\\nimport Typography from '@material-ui/core/Typography';\\r\\nimport { makeStyles } from '@material-ui/core/styles';\\r\\nimport { Box } from '@material-ui/core';\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  popover: {\\r\\n    pointerEvents: 'none',\\r\\n  },\\r\\n  paper: {\\r\\n    padding: theme.spacing(2),\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function MouseOverPopover() {\\r\\n  const classes = useStyles();\\r\\n  const [anchorEl, setAnchorEl] = React.useState(null);\\r\\n\\r\\n  const handlePopoverOpen = event => {\\r\\n    setAnchorEl(event.currentTarget);\\r\\n  };\\r\\n\\r\\n  const handlePopoverClose = () => {\\r\\n    setAnchorEl(null);\\r\\n  };\\r\\n\\r\\n  const open = Boolean(anchorEl);\\r\\n\\r\\n  return (\\r\\n    <Box>\\r\\n      <Typography\\r\\n        aria-owns={open ? 'mouse-over-popover' : undefined}\\r\\n        aria-haspopup=\\\"true\\\"\\r\\n        onMouseEnter={handlePopoverOpen}\\r\\n        onMouseLeave={handlePopoverClose}>\\r\\n        Hover with a Popover.\\r\\n      </Typography>\\r\\n      <Popover\\r\\n        id=\\\"mouse-over-popover\\\"\\r\\n        className={classes.popover}\\r\\n        classes={{\\r\\n          paper: classes.paper,\\r\\n        }}\\r\\n        open={open}\\r\\n        anchorEl={anchorEl}\\r\\n        anchorOrigin={{\\r\\n          vertical: 'bottom',\\r\\n          horizontal: 'left',\\r\\n        }}\\r\\n        transformOrigin={{\\r\\n          vertical: 'top',\\r\\n          horizontal: 'left',\\r\\n        }}\\r\\n        onClose={handlePopoverClose}\\r\\n        disableRestoreFocus>\\r\\n        <Typography>I use Popover.</Typography>\\r\\n      </Popover>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport Typography from '@material-ui/core/Typography';\\r\\nimport Box from '@material-ui/core/Box';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport Popover from '@material-ui/core/Popover';\\r\\nimport PopupState, { bindTrigger, bindPopover } from 'material-ui-popup-state';\\r\\n\\r\\nexport default function PopoverPopupState() {\\r\\n  return (\\r\\n    <PopupState variant=\\\"popover\\\" popupId=\\\"demo-popup-popover\\\">\\r\\n      {popupState => (\\r\\n        <Box>\\r\\n          <Button variant=\\\"contained\\\" color=\\\"primary\\\" {...bindTrigger(popupState)}>\\r\\n            Open Popover\\r\\n          </Button>\\r\\n          <Popover\\r\\n            {...bindPopover(popupState)}\\r\\n            anchorOrigin={{\\r\\n              vertical: 'bottom',\\r\\n              horizontal: 'center',\\r\\n            }}\\r\\n            transformOrigin={{\\r\\n              vertical: 'top',\\r\\n              horizontal: 'center',\\r\\n            }}>\\r\\n            <Box p={2}>\\r\\n              <Typography>The content of the Popover.</Typography>\\r\\n            </Box>\\r\\n          </Popover>\\r\\n        </Box>\\r\\n      )}\\r\\n    </PopupState>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport { makeStyles } from '@material-ui/core/styles';\\r\\nimport Popover from '@material-ui/core/Popover';\\r\\nimport Typography from '@material-ui/core/Typography';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport { Box } from '@material-ui/core';\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  typography: {\\r\\n    padding: theme.spacing(4),\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function SimplePopover() {\\r\\n  const classes = useStyles();\\r\\n  const [anchorEl, setAnchorEl] = React.useState(null);\\r\\n\\r\\n  const handleClick = event => {\\r\\n    setAnchorEl(event.currentTarget);\\r\\n  };\\r\\n\\r\\n  const handleClose = () => {\\r\\n    setAnchorEl(null);\\r\\n  };\\r\\n\\r\\n  const open = Boolean(anchorEl);\\r\\n  const id = open ? 'simple-popover' : undefined;\\r\\n\\r\\n  return (\\r\\n    <Box>\\r\\n      <Button aria-describedby={id} variant=\\\"contained\\\" color=\\\"primary\\\" onClick={handleClick}>\\r\\n        Open Popover\\r\\n      </Button>\\r\\n      <Popover\\r\\n        id={id}\\r\\n        open={open}\\r\\n        anchorEl={anchorEl}\\r\\n        onClose={handleClose}\\r\\n        anchorOrigin={{\\r\\n          vertical: 'bottom',\\r\\n          horizontal: 'center',\\r\\n        }}\\r\\n        transformOrigin={{\\r\\n          vertical: 'top',\\r\\n          horizontal: 'center',\\r\\n        }}>\\r\\n        <Typography className={classes.typography}>The content of the Popover.</Typography>\\r\\n      </Popover>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { green } from '@material-ui/core/colors';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { Box } from '@material-ui/core';\r\nimport { HighlightedCode } from '../../../../../@jumbo/components/Common';\r\nimport GridContainer from '../../../../../@jumbo/components/GridContainer';\r\n\r\nconst styles = theme => ({\r\n  buttonWrapper: {\r\n    position: 'relative',\r\n    marginBottom: theme.spacing(8),\r\n  },\r\n  anchor: {\r\n    backgroundColor: green[500],\r\n    width: 10,\r\n    height: 10,\r\n    borderRadius: '50%',\r\n    position: 'absolute',\r\n  },\r\n  radioAnchor: {\r\n    color: green[600],\r\n    '&$checked': {\r\n      color: green[500],\r\n    },\r\n  },\r\n  checked: {},\r\n  typography: {\r\n    margin: theme.spacing(4),\r\n  },\r\n});\r\n\r\nconst inlineStyles = {\r\n  anchorVertical: {\r\n    top: {\r\n      top: -5,\r\n    },\r\n    center: {\r\n      top: 'calc(50% - 5px)',\r\n    },\r\n    bottom: {\r\n      bottom: -5,\r\n    },\r\n  },\r\n  anchorHorizontal: {\r\n    left: {\r\n      left: -5,\r\n    },\r\n    center: {\r\n      left: 'calc(50% - 5px)',\r\n    },\r\n    right: {\r\n      right: -5,\r\n    },\r\n  },\r\n};\r\n\r\nfunction AnchorPlayground(props) {\r\n  const { classes } = props;\r\n  const anchorRef = React.useRef();\r\n\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    anchorOriginVertical: 'top',\r\n    anchorOriginHorizontal: 'left',\r\n    transformOriginVertical: 'top',\r\n    transformOriginHorizontal: 'left',\r\n    positionTop: 200, // Just so the popover can be spotted more easily\r\n    positionLeft: 400, // Same as above\r\n    anchorReference: 'anchorEl',\r\n  });\r\n\r\n  const {\r\n    open,\r\n    anchorOriginVertical,\r\n    anchorOriginHorizontal,\r\n    transformOriginVertical,\r\n    transformOriginHorizontal,\r\n    positionTop,\r\n    positionLeft,\r\n    anchorReference,\r\n  } = state;\r\n\r\n  const handleChange = event => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleNumberInputChange = key => event => {\r\n    setState({\r\n      ...state,\r\n      [key]: parseInt(event.target.value, 10),\r\n    });\r\n  };\r\n\r\n  const handleClickButton = () => {\r\n    setState({\r\n      ...state,\r\n      open: true,\r\n    });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setState({\r\n      ...state,\r\n      open: false,\r\n    });\r\n  };\r\n\r\n  let mode = '';\r\n\r\n  if (anchorReference === 'anchorPosition') {\r\n    mode = `\r\n  anchorReference=\"${anchorReference}\"\r\n  anchorPosition={{ top: ${positionTop}, left: ${positionLeft} }}`;\r\n  }\r\n\r\n  const jsx = `\r\n<Popover ${mode}\r\n  anchorOrigin={{\r\n    vertical: '${anchorOriginVertical}',\r\n    horizontal: '${anchorOriginHorizontal}',\r\n  }}\r\n  transformOrigin={{\r\n    vertical: '${transformOriginVertical}',\r\n    horizontal: '${transformOriginHorizontal}',\r\n  }}\r\n>\r\n  The content of the Popover.\r\n</Popover>\r\n`;\r\n\r\n  const radioAnchorClasses = {\r\n    root: classes.radioAnchor,\r\n    checked: classes.checked,\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Box display=\"flex\" justifyContent=\"center\">\r\n        <Box className={classes.buttonWrapper}>\r\n          <Button ref={anchorRef} variant=\"contained\" onClick={handleClickButton}>\r\n            Open Popover\r\n          </Button>\r\n          {anchorReference === 'anchorEl' && (\r\n            <div\r\n              className={classes.anchor}\r\n              style={{\r\n                ...inlineStyles.anchorVertical[anchorOriginVertical],\r\n                ...inlineStyles.anchorHorizontal[anchorOriginHorizontal],\r\n              }}\r\n            />\r\n          )}\r\n        </Box>\r\n      </Box>\r\n      <Popover\r\n        open={open}\r\n        anchorEl={anchorRef.current}\r\n        anchorReference={anchorReference}\r\n        anchorPosition={{\r\n          top: positionTop,\r\n          left: positionLeft,\r\n        }}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: anchorOriginVertical,\r\n          horizontal: anchorOriginHorizontal,\r\n        }}\r\n        transformOrigin={{\r\n          vertical: transformOriginVertical,\r\n          horizontal: transformOriginHorizontal,\r\n        }}>\r\n        <Typography className={classes.typography}>The content of the Popover.</Typography>\r\n      </Popover>\r\n      <GridContainer spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl component=\"fieldset\">\r\n            <FormLabel component=\"legend\">anchorReference</FormLabel>\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"anchor reference\"\r\n              name=\"anchorReference\"\r\n              value={anchorReference}\r\n              onChange={handleChange}>\r\n              <FormControlLabel value=\"anchorEl\" control={<Radio />} label=\"anchorEl\" />\r\n              <FormControlLabel value=\"anchorPosition\" control={<Radio />} label=\"anchorPosition\" />\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel htmlFor=\"position-top\">anchorPosition.top</InputLabel>\r\n            <Input id=\"position-top\" type=\"number\" value={positionTop} onChange={handleNumberInputChange('positionTop')} />\r\n          </FormControl>\r\n          &nbsp;\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel htmlFor=\"position-left\">anchorPosition.left</InputLabel>\r\n            <Input\r\n              id=\"position-left\"\r\n              type=\"number\"\r\n              value={positionLeft}\r\n              onChange={handleNumberInputChange('positionLeft')}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl component=\"fieldset\">\r\n            <FormLabel component=\"legend\">anchorOrigin.vertical</FormLabel>\r\n            <RadioGroup\r\n              aria-label=\"anchor origin vertical\"\r\n              name=\"anchorOriginVertical\"\r\n              value={anchorOriginVertical}\r\n              onChange={handleChange}>\r\n              <FormControlLabel value=\"top\" control={<Radio classes={radioAnchorClasses} />} label=\"Top\" />\r\n              <FormControlLabel value=\"center\" control={<Radio classes={radioAnchorClasses} />} label=\"Center\" />\r\n              <FormControlLabel value=\"bottom\" control={<Radio classes={radioAnchorClasses} />} label=\"Bottom\" />\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl component=\"fieldset\">\r\n            <FormLabel component=\"legend\">transformOrigin.vertical</FormLabel>\r\n            <RadioGroup\r\n              aria-label=\"transform origin vertical\"\r\n              name=\"transformOriginVertical\"\r\n              value={transformOriginVertical}\r\n              onChange={handleChange}>\r\n              <FormControlLabel value=\"top\" control={<Radio />} label=\"Top\" />\r\n              <FormControlLabel value=\"center\" control={<Radio color=\"primary\" />} label=\"Center\" />\r\n              <FormControlLabel value=\"bottom\" control={<Radio color=\"primary\" />} label=\"Bottom\" />\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl component=\"fieldset\">\r\n            <FormLabel component=\"legend\">anchorOrigin.horizontal</FormLabel>\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"anchor origin horizontal\"\r\n              name=\"anchorOriginHorizontal\"\r\n              value={anchorOriginHorizontal}\r\n              onChange={handleChange}>\r\n              <FormControlLabel value=\"left\" control={<Radio classes={radioAnchorClasses} />} label=\"Left\" />\r\n              <FormControlLabel value=\"center\" control={<Radio classes={radioAnchorClasses} />} label=\"Center\" />\r\n              <FormControlLabel value=\"right\" control={<Radio classes={radioAnchorClasses} />} label=\"Right\" />\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl component=\"fieldset\">\r\n            <FormLabel component=\"legend\">transformOrigin.horizontal</FormLabel>\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"transform origin horizontal\"\r\n              name=\"transformOriginHorizontal\"\r\n              value={transformOriginHorizontal}\r\n              onChange={handleChange}>\r\n              <FormControlLabel value=\"left\" control={<Radio color=\"primary\" />} label=\"Left\" />\r\n              <FormControlLabel value=\"center\" control={<Radio color=\"primary\" />} label=\"Center\" />\r\n              <FormControlLabel value=\"right\" control={<Radio color=\"primary\" />} label=\"Right\" />\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </Grid>\r\n      </GridContainer>\r\n      <HighlightedCode code={jsx} language=\"jsx\" />\r\n    </Box>\r\n  );\r\n}\r\n\r\nAnchorPlayground.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(AnchorPlayground);\r\n","import React from 'react';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  popover: {\r\n    pointerEvents: 'none',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function MouseOverPopover() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handlePopoverOpen = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handlePopoverClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n\r\n  return (\r\n    <Box>\r\n      <Typography\r\n        aria-owns={open ? 'mouse-over-popover' : undefined}\r\n        aria-haspopup=\"true\"\r\n        onMouseEnter={handlePopoverOpen}\r\n        onMouseLeave={handlePopoverClose}>\r\n        Hover with a Popover.\r\n      </Typography>\r\n      <Popover\r\n        id=\"mouse-over-popover\"\r\n        className={classes.popover}\r\n        classes={{\r\n          paper: classes.paper,\r\n        }}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'left',\r\n        }}\r\n        onClose={handlePopoverClose}\r\n        disableRestoreFocus>\r\n        <Typography>I use Popover.</Typography>\r\n      </Popover>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport PopupState, { bindTrigger, bindPopover } from 'material-ui-popup-state';\r\n\r\nexport default function PopoverPopupState() {\r\n  return (\r\n    <PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\r\n      {popupState => (\r\n        <Box>\r\n          <Button variant=\"contained\" color=\"primary\" {...bindTrigger(popupState)}>\r\n            Open Popover\r\n          </Button>\r\n          <Popover\r\n            {...bindPopover(popupState)}\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'center',\r\n            }}>\r\n            <Box p={2}>\r\n              <Typography>The content of the Popover.</Typography>\r\n            </Box>\r\n          </Popover>\r\n        </Box>\r\n      )}\r\n    </PopupState>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  typography: {\r\n    padding: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nexport default function SimplePopover() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  return (\r\n    <Box>\r\n      <Button aria-describedby={id} variant=\"contained\" color=\"primary\" onClick={handleClick}>\r\n        Open Popover\r\n      </Button>\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}>\r\n        <Typography className={classes.typography}>The content of the Popover.</Typography>\r\n      </Popover>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { MuiComponentDemo } from '../../../../@jumbo/components/PageComponents';\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CodeViewerCard from '../../../../@jumbo/components/Common/CodeViewerCard';\r\nimport AnchorPlayground from './demo/AnchorPlayground';\r\nimport MouseOverPopover from './demo/MouseOverPopover';\r\nimport PopoverPopupState from './demo/PopoverPopupState';\r\nimport SimplePopover from './demo/SimplePopover';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  section: {\r\n    '&:not(:last-child)': {\r\n      marginBottom: theme.typography.pxToRem(32),\r\n    },\r\n  },\r\n  sectionHeading: {\r\n    marginBottom: theme.typography.pxToRem(16),\r\n  },\r\n}));\r\n\r\nconst requireRaw = require.context('!raw-loader!../../../../@fake-db/mui-components/popover', false, /\\.(txt|js|md|tsx)$/);\r\n\r\nconst demos = [\r\n  {\r\n    label: 'Simple Popover',\r\n    link: 'simple-popover',\r\n    component: <SimplePopover />,\r\n    filename: './SimplePopover.txt',\r\n  },\r\n  {\r\n    label: 'Anchor Playground',\r\n    link: 'anchor-playground',\r\n    component: <AnchorPlayground />,\r\n    filename: './AnchorPlayground.txt',\r\n  },\r\n  {\r\n    label: 'Mouse over interaction',\r\n    link: 'mouse-over-interaction',\r\n    component: <MouseOverPopover />,\r\n    filename: './MouseOverPopover.txt',\r\n  },\r\n  {\r\n    label: 'PopupState helper',\r\n    link: 'popup-state-helper',\r\n    component: <PopoverPopupState />,\r\n    filename: './PopoverPopupState.txt',\r\n  },\r\n];\r\n\r\nexport default function Popover() {\r\n  const classes = useStyles();\r\n  return (\r\n    <MuiComponentDemo pageTitle=\"Popover\" menus={demos}>\r\n      {demos.map((menu, index) => (\r\n        <Box key={index} id={menu.link} className={classes.section}>\r\n          <Typography component=\"h3\" variant=\"inherit\" className={classes.sectionHeading}>\r\n            {menu.label}\r\n          </Typography>\r\n          <CodeViewerCard code={requireRaw(menu.filename).default} language=\"jsx\">\r\n            {menu.component}\r\n          </CodeViewerCard>\r\n        </Box>\r\n      ))}\r\n    </MuiComponentDemo>\r\n  );\r\n}\r\n"],"sourceRoot":""}