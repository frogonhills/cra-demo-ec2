{"version":3,"sources":["@jumbo/components/PageComponents/layouts/PageContainer.js","@jumbo/components/PageComponents/PageHeader.js","@jumbo/components/PageComponents/PageBreadcrumbs/index.js","@jumbo/components/PageComponents/layouts/CorematComponentDemo.js","@jumbo/components/PageComponents/layouts/MuiComponentDemo.js","@jumbo/components/PageComponents/layouts/ComponentsDemo.js","../node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js","@coremat/CmtGroupList/CmtGroupListItem.js","@coremat/CmtGroupList/index.js","routes/Components/CorematComponents/GroupListDemo/DemoSettings.js","routes/Components/CorematComponents/GroupListDemo/GroupListView.js","routes/Components/CorematComponents/GroupListDemo/GroupListlContextProvider.js","routes/Components/CorematComponents/GroupListDemo/DemoSourceCode.js","routes/Components/CorematComponents/GroupListDemo/index.js"],"names":["useStyles","makeStyles","pageFull","width","PageContainer","heading","breadcrumbs","children","className","restProps","classes","in","direction","mountOnEnter","unmountOnExit","clsx","breadcrumbComponent","items","theme","pageHeaderRoot","display","flexDirection","breakpoints","up","alignItems","titleRoot","down","marginBottom","PageHeader","rest","Box","mb","xs","md","lg","Typography","component","variant","ml","sm","textSm","fontSize","linkBlock","color","PageBreadcrumbs","Breadcrumbs","aria-label","map","item","index","isActive","key","label","to","link","CorematComponentDemo","SourceCodeComponent","SettingsComponent","GridContainer","Grid","CmtCard","MuiComponentDemo","pageTitle","menus","ComponentsDemo","root","flexWrap","contentArea","paddingRight","typography","pxToRem","contentSidebar","height","position","top","overflowY","flexShrink","xsDown","menu","dense","button","href","primary","createSvgIcon","React","d","withStyles","marginLeft","spacing","marginRight","backgroundColor","palette","grey","borderRadius","cursor","boxShadow","shadows","emphasize","icon","name","props","other","_objectWithoutProperties","ButtonBase","_extends","focusRipple","MoreHorizIcon","ref","_props$component","Component","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","separator","_React$useState","expanded","setExpanded","allItems","toArray","filter","child","li","concat","ol","reduce","acc","current","length","push","insertSeparators","_toConsumableArray","slice","BreadcrumbCollapsed","onClick","event","focusable","currentTarget","parentNode","querySelector","focus","renderItemsBeforeAndAfter","padding","margin","listStyle","userSelect","collapseHeader","background","paper","border","alpha","common","black","marginTop","expand","transform","transition","transitions","create","duration","shortest","expandOpen","CmtGroupItem","isGrid","itemPadding","column","renderItem","data","renderRow","CmtList","CmtGroupListItem","isExpandable","group","renderHeader","useState","handleExpandClick","Fragment","IconButton","edge","aria-expanded","Collapse","timeout","id","CmtGroupList","groupIdentifier","groups","setGroups","groupItems","setGroupItems","useEffect","groupList","groupListItems","dataItem","groupDetail","some","defaultProps","prototype","PropTypes","bool","number","array","func","DemoSettings","useContext","CorematContext","setGrid","setExpandable","title","AppSwitch","checked","onChange","target","itemRoot","descText","text","secondary","GroupListView","projects","coremat","style","maxHeight","CmtMediaObject","avatar","profile_pic","titleProps","content","description","contentProps","Button","groupName","projectName","toLowerCase","GroupListlContextProvider","Provider","value","DemoSourceCode","sourceCode","CmtGroupListDemo"],"mappings":"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","file":"static/js/158.8650d7c3.chunk.js","sourcesContent":["import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { PageBreadcrumbs, PageHeader } from '../index';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  pageFull: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst PageContainer = ({ heading, breadcrumbs, children, className, restProps }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Slide in={true} direction=\"up\" mountOnEnter unmountOnExit>\r\n      <Box className={clsx(classes.pageFull, className)} {...restProps}>\r\n        {(heading || breadcrumbs) && (\r\n          <PageHeader heading={heading} breadcrumbComponent={breadcrumbs && <PageBreadcrumbs items={breadcrumbs} />} />\r\n        )}\r\n        {children}\r\n      </Box>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default PageContainer;\r\n","import React from 'react';\r\nimport { Box, makeStyles, Typography } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageHeaderRoot: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.up('sm')]: {\r\n      alignItems: 'center',\r\n      flexDirection: 'row',\r\n    },\r\n  },\r\n  titleRoot: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginBottom: 10,\r\n    },\r\n  },\r\n}));\r\n\r\nconst PageHeader = ({ heading, breadcrumbComponent, children, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={clsx(classes.pageHeaderRoot, 'page-header')} mb={{ xs: 5, md: 6, lg: 8 }} {...rest}>\r\n      <Typography component=\"div\" variant=\"h1\" className={clsx(classes.titleRoot, 'title')}>\r\n        {heading}\r\n      </Typography>\r\n      <Box ml={{ sm: 'auto' }}>{breadcrumbComponent}</Box>\r\n\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import React from 'react';\r\nimport { Breadcrumbs, makeStyles } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { NavLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  textSm: {\r\n    fontSize: 12,\r\n  },\r\n  linkBlock: {\r\n    display: 'block',\r\n    color: 'inherit',\r\n  },\r\n}));\r\n\r\nconst PageBreadcrumbs = ({ items, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Breadcrumbs className=\"bread-crumbs\" aria-label=\"breadcrumb {...rest}\">\r\n      {items.map((item, index) =>\r\n        item.isActive ? (\r\n          <Typography key={index} className={classes.textSm} color=\"textPrimary\">\r\n            {item.label}\r\n          </Typography>\r\n        ) : (\r\n          <NavLink key={index} className={clsx(classes.textSm, classes.linkBlock)} color=\"inherit\" to={item.link || '/'}>\r\n            {item.label}\r\n          </NavLink>\r\n        ),\r\n      )}\r\n    </Breadcrumbs>\r\n  );\r\n};\r\n\r\nexport default PageBreadcrumbs;\r\n","import React from 'react';\r\nimport { Box, Grid } from '@material-ui/core';\r\nimport CmtCard from '../../../../@coremat/CmtCard';\r\nimport { PageHeader } from '../index';\r\nimport GridContainer from '../../GridContainer';\r\nimport PageContainer from './PageContainer';\r\n\r\nconst CorematComponentDemo = ({ SourceCodeComponent, SettingsComponent, children }) => {\r\n  return (\r\n    <PageContainer>\r\n      <GridContainer>\r\n        <Grid item xs={12} md={7}>\r\n          <PageHeader heading=\"Preview\" />\r\n          <Box mb={8}>{children}</Box>\r\n          <CmtCard>{SourceCodeComponent}</CmtCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={5}>\r\n          {SettingsComponent}\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default CorematComponentDemo;\r\n","import React from 'react';\r\nimport ComponentsDemo from './ComponentsDemo';\r\n\r\nconst MuiComponentDemo = ({ pageTitle, menus, children }) => {\r\n  const breadcrumbs = [\r\n    { label: 'Home', link: '/' },\r\n    { label: 'Material UI Components', link: '/components/mui' },\r\n    { label: pageTitle, isActive: true },\r\n  ];\r\n  return (\r\n    <ComponentsDemo pageTitle={pageTitle} breadcrumbs={breadcrumbs} menus={menus}>\r\n      {children}\r\n    </ComponentsDemo>\r\n  );\r\n};\r\nexport default MuiComponentDemo;\r\n","import React from 'react';\r\nimport { Box, Hidden, List, ListItem, ListItemText, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PageContainer from './PageContainer';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  contentArea: {\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingRight: theme.typography.pxToRem(30),\r\n      width: `calc(100% - ${theme.typography.pxToRem(175)})`,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingRight: theme.typography.pxToRem(54),\r\n    },\r\n  },\r\n  contentSidebar: {\r\n    width: theme.typography.pxToRem(175),\r\n    height: `calc(100vh - ${theme.typography.pxToRem(102)})`,\r\n    position: 'sticky',\r\n    top: 30,\r\n    overflowY: 'auto',\r\n    flexShrink: 0,\r\n  },\r\n}));\r\n\r\nconst ComponentsDemo = ({ pageTitle, menus, breadcrumbs, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <PageContainer heading={pageTitle} breadcrumbs={breadcrumbs}>\r\n      <Box className={classes.root}>\r\n        <Box className={classes.contentArea}>{children}</Box>\r\n        <Hidden xsDown>\r\n          <Box className={classes.contentSidebar}>\r\n            <Typography component=\"h4\" variant=\"h4\">\r\n              Contents\r\n            </Typography>\r\n            <List>\r\n              {menus.map((menu, index) => (\r\n                <ListItem key={index} dense button component=\"a\" href={`#${menu.link}`}>\r\n                  <ListItemText primary={menu.label} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Box>\r\n        </Hidden>\r\n      </Box>\r\n    </PageContainer>\r\n  );\r\n};\r\nexport default ComponentsDemo;\r\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand(event) {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n\n      var focusable = event.currentTarget.parentNode.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);","import React, { useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { IconButton, Collapse } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport CmtList from '../CmtList';\r\nimport CmtGridList from '../CmtGridView';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  collapseHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: `1px solid ${alpha(theme.palette.common.black, 0.12)}`,\r\n    borderRadius: 4,\r\n    padding: '8px 24px',\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n}));\r\n\r\nconst CmtGroupItem = ({ isGrid, items, itemPadding, column, renderItem }) => {\r\n  if (isGrid) {\r\n    return <CmtGridList data={items} itemPadding={itemPadding} column={column} renderRow={renderItem} />;\r\n  }\r\n\r\n  return <CmtList data={items} renderRow={renderItem} />;\r\n};\r\n\r\nconst CmtGroupListItem = ({ isGrid, itemPadding, column, isExpandable, group, items, renderHeader, renderItem }) => {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  if (isExpandable) {\r\n    return (\r\n      <React.Fragment>\r\n        <div className={clsx(classes.collapseHeader, 'CmtGroupListItem-collapseHeader')} onClick={handleExpandClick}>\r\n          <div>{renderHeader(group)}</div>\r\n          <IconButton\r\n            className={clsx(classes.expand, {\r\n              [classes.expandOpen]: expanded,\r\n            })}\r\n            edge=\"end\"\r\n            onClick={handleExpandClick}\r\n            aria-expanded={expanded}\r\n            aria-label=\"show more\">\r\n            <ExpandMoreIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n          <CmtGroupItem\r\n            isGrid={isGrid}\r\n            items={items[group.id]}\r\n            itemPadding={itemPadding}\r\n            column={column}\r\n            renderItem={renderItem}\r\n          />\r\n        </Collapse>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      {renderHeader(group)}\r\n      <CmtGroupItem\r\n        isGrid={isGrid}\r\n        items={items[group.id]}\r\n        itemPadding={itemPadding}\r\n        column={column}\r\n        renderItem={renderItem}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CmtGroupListItem;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport CmtGroupListItem from './CmtGroupListItem';\r\nimport CmtList from '../CmtList';\r\n\r\nconst CmtGroupList = ({ isExpandable, isGrid, itemPadding, column, data, renderHeader, renderItem, groupIdentifier }) => {\r\n  const [groups, setGroups] = useState([]);\r\n  const [groupItems, setGroupItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let groupList = [];\r\n    let groupListItems = data.reduce((groupItems, dataItem) => {\r\n      let groupDetail = null;\r\n      groupDetail = groupIdentifier(dataItem);\r\n      if (groupDetail && groupDetail.id) {\r\n        if (!groupList.some(item => item.id === groupDetail.id)) {\r\n          groupList.push(groupDetail);\r\n        }\r\n        if (!groupItems[groupDetail.id]) {\r\n          groupItems[groupDetail.id] = [];\r\n        }\r\n        groupItems[groupDetail.id].push(dataItem);\r\n      }\r\n      return groupItems;\r\n    }, {});\r\n\r\n    setGroups(groupList);\r\n    setGroupItems(groupListItems);\r\n  }, [data, groupIdentifier]);\r\n\r\n  const renderRow = group => (\r\n    <CmtGroupListItem\r\n      key={group.id}\r\n      isExpandable={isExpandable}\r\n      isGrid={isGrid}\r\n      itemPadding={itemPadding}\r\n      column={column}\r\n      group={group}\r\n      items={groupItems}\r\n      renderHeader={renderHeader}\r\n      renderItem={renderItem}\r\n    />\r\n  );\r\n\r\n  return <React.Fragment>{groups.length > 0 && <CmtList data={groups} renderRow={renderRow} />}</React.Fragment>;\r\n};\r\n\r\nexport default CmtGroupList;\r\nCmtGroupList.defaultProps = { isExpandable: false, isGrid: false, data: [] };\r\nCmtGroupList.prototype = {\r\n  isExpandable: PropTypes.bool,\r\n  isGrid: PropTypes.bool,\r\n  itemPadding: PropTypes.number,\r\n  column: PropTypes.number,\r\n  data: PropTypes.array,\r\n  renderHeader: PropTypes.func,\r\n  renderItem: PropTypes.func,\r\n  groupIdentifier: PropTypes.func,\r\n};\r\n","import React, { useContext } from 'react';\r\nimport CorematContext from '../../../../@jumbo/components/contextProvider/CorematContext';\r\nimport { SectionLegend, SettingsComponent } from '../../../../@jumbo/components/CorematDemosComponents';\r\nimport AppSwitch from '../../../../@jumbo/components/Common/formElements/AppSwitch';\r\n\r\nconst DemoSettings = () => {\r\n  const { isGrid, setGrid, isExpandable, setExpandable } = useContext(CorematContext);\r\n\r\n  return (\r\n    <SettingsComponent title=\"Cmt Group List\">\r\n      <SectionLegend title=\"Basic Settings\">\r\n        <AppSwitch\r\n          name=\"expandable-view\"\r\n          label=\"Show Expandable View\"\r\n          checked={isExpandable}\r\n          onChange={event => setExpandable(event.target.checked)}\r\n        />\r\n      </SectionLegend>\r\n\r\n      <SectionLegend>\r\n        <AppSwitch\r\n          name=\"grid-view\"\r\n          label=\"Show As Grid List\"\r\n          checked={isGrid}\r\n          onChange={event => setGrid(event.target.checked)}\r\n        />\r\n      </SectionLegend>\r\n    </SettingsComponent>\r\n  );\r\n};\r\n\r\nexport default DemoSettings;\r\n","import React, { useContext } from 'react';\r\nimport CorematContext from '../../../../@jumbo/components/contextProvider/CorematContext';\r\nimport { coremat } from '../../../../@fake-db/coremat-components';\r\nimport CmtMediaObject from '../../../../@coremat/CmtMediaObject';\r\nimport CmtGroupList from '../../../../@coremat/CmtGroupList';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport Box from '@material-ui/core/Box';\r\nimport { Button, makeStyles, Typography } from '@material-ui/core';\r\nimport { JumboCard } from '../../../../@jumbo/components/Common';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  itemRoot: {\r\n    padding: 1,\r\n    '& .Cmt-avatar': {\r\n      height: 56,\r\n      width: 56,\r\n    },\r\n    '& .Cmt-media-header': {\r\n      marginBottom: 8,\r\n    },\r\n    '& .Cmt-media-image': {\r\n      marginRight: 12,\r\n      marginTop: 0,\r\n    },\r\n  },\r\n  titleRoot: {\r\n    fontSize: 16,\r\n  },\r\n  descText: {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst GroupListView = () => {\r\n  const classes = useStyles();\r\n  const { isExpandable, isGrid } = useContext(CorematContext);\r\n  const { projects } = coremat;\r\n\r\n  const groupIdentifier = dataItem => {\r\n    return {\r\n      id: dataItem.projectName.toLowerCase(),\r\n      groupName: dataItem.projectName,\r\n    };\r\n  };\r\n\r\n  const renderItem = (item, index) => {\r\n    return (\r\n      <Box mb={isGrid ? 0 : 2} key={index} className={classes.itemRoot}>\r\n        <JumboCard>\r\n          <CmtMediaObject\r\n            avatar={item.profile_pic}\r\n            title={item.title}\r\n            titleProps={{ className: classes.titleRoot }}\r\n            content={item.description}\r\n            contentProps={{ variant: 'body2', className: classes.descText }}>\r\n            <Button variant=\"contained\" color=\"primary\">\r\n              Buy Now\r\n            </Button>\r\n          </CmtMediaObject>\r\n        </JumboCard>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const renderHeader = group => {\r\n    return (\r\n      <Typography\r\n        component=\"div\"\r\n        variant=\"body1\"\r\n        style={{\r\n          marginBottom: isExpandable ? 0 : 10,\r\n          marginTop: isExpandable ? 0 : 10,\r\n        }}>\r\n        {group.groupName}\r\n      </Typography>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <PerfectScrollbar style={{ maxHeight: 350 }}>\r\n      <CmtGroupList\r\n        data={projects}\r\n        renderItem={renderItem}\r\n        renderHeader={renderHeader}\r\n        groupIdentifier={groupIdentifier}\r\n        isExpandable={isExpandable}\r\n        isGrid={isGrid}\r\n        itemPadding={10}\r\n        column={2}\r\n      />\r\n    </PerfectScrollbar>\r\n  );\r\n};\r\n\r\nexport default GroupListView;\r\n","import React, { useState } from 'react';\r\nimport CorematContext from '../../../../@jumbo/components/contextProvider/CorematContext';\r\n\r\nconst GroupListlContextProvider = ({ children }) => {\r\n  const [isGrid, setGrid] = useState(false);\r\n  const [isExpandable, setExpandable] = useState(false);\r\n\r\n  return (\r\n    <CorematContext.Provider\r\n      value={{\r\n        isGrid,\r\n        setGrid,\r\n        isExpandable,\r\n        setExpandable,\r\n      }}>\r\n      {children}\r\n    </CorematContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GroupListlContextProvider;\r\n","import React, { useContext } from 'react';\r\nimport CorematContext from '../../../../@jumbo/components/contextProvider/CorematContext';\r\nimport { SourceCodeComponent } from '../../../../@jumbo/components/CorematDemosComponents';\r\n\r\nconst DemoSourceCode = () => {\r\n  const { isExpandable, isGrid } = useContext(CorematContext);\r\n\r\n  const getGridAttributes = () => {\r\n    if (isGrid) {\r\n      return `\r\n  itemPadding={10}\r\n  column={2}`;\r\n    }\r\n\r\n    return '';\r\n  };\r\n\r\n  const getSourceCode = () => {\r\n    return (\r\n      `\r\nconst theme = useTheme();\r\n\r\n<CmtGroupList\r\n  data={projects}\r\n  renderItem={renderItem}\r\n  renderHeader={renderHeader}\r\n  groupIdentifier={groupIdentifier}\r\n  isExpandable={${isExpandable}}\r\n  isGrid={${isGrid}} ` +\r\n      getGridAttributes() +\r\n      `\r\n/>\r\n\r\nconst groupIdentifier = dataItem => {\r\n  return { id: dataItem.projectName.toLowerCase(), groupName: dataItem.projectName };\r\n};\r\n\r\nconst renderItem = (item, index) => {\r\n  return (\r\n    <Box mb={${isGrid ? 0 : 2}} key={index} className={classes.itemRoot}>\r\n      <JumboCard>\r\n        <CmtMediaObject\r\n          avatar={item.profile_pic}\r\n          title={item.title}\r\n          titleProps={{ className: classes.titleRoot }}\r\n          content={item.description}\r\n          contentProps={{ variant: 'body2', className: classes.descText }}>\r\n          <Button variant=\"contained\" color=\"primary\">\r\n            Buy Now\r\n          </Button>\r\n        </CmtMediaObject>\r\n      </JumboCard>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst renderHeader = group => {\r\n  return (\r\n    <Typography\r\n        component=\"div\"\r\n        variant=\"body1\"\r\n        style={{ \r\n          marginBottom: ${isExpandable ? 0 : 10}, \r\n          marginTop: ${isExpandable ? 0 : 10} \r\n        }}>\r\n        {group.groupName}\r\n      </Typography>\r\n  );\r\n};\r\n`\r\n    );\r\n  };\r\n\r\n  return <SourceCodeComponent sourceCode={getSourceCode()} />;\r\n};\r\n\r\nexport default DemoSourceCode;\r\n","import React from 'react';\r\nimport { CorematComponentDemo } from '../../../../@jumbo/components/PageComponents';\r\nimport DemoSettings from './DemoSettings';\r\nimport GroupListView from './GroupListView';\r\nimport GroupListlContextProvider from './GroupListlContextProvider';\r\nimport DemoSourceCode from './DemoSourceCode';\r\n\r\nconst CmtGroupListDemo = () => {\r\n  return (\r\n    <GroupListlContextProvider>\r\n      <CorematComponentDemo SourceCodeComponent={<DemoSourceCode />} SettingsComponent={<DemoSettings />}>\r\n        <GroupListView />\r\n      </CorematComponentDemo>\r\n    </GroupListlContextProvider>\r\n  );\r\n};\r\n\r\nexport default CmtGroupListDemo;\r\n"],"sourceRoot":""}