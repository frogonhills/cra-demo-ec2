{"version":3,"sources":["@jumbo/components/PageComponents/layouts/PageContainer.js","@jumbo/components/PageComponents/PageHeader.js","@jumbo/components/PageComponents/PageBreadcrumbs/index.js","@jumbo/components/PageComponents/layouts/CorematComponentDemo.js","@jumbo/components/PageComponents/layouts/MuiComponentDemo.js","@jumbo/components/PageComponents/layouts/ComponentsDemo.js","webpack:///./src/@fake-db/mui-components/table sync nonrecursive ./node_modules/raw-loader/dist/cjs.js \\.(txt|js|md|tsx)$?f006","@fake-db/mui-components/table/AcccessibleTable.txt","@fake-db/mui-components/table/CollapsibleTable.txt","@fake-db/mui-components/table/CustomPaginationActionsTable.txt","@fake-db/mui-components/table/CustomizedTables.txt","@fake-db/mui-components/table/DenseTable.txt","@fake-db/mui-components/table/EnhancedTable.txt","@fake-db/mui-components/table/MaterialTableDemo.txt","@fake-db/mui-components/table/ReactVirtualizedTable.txt","@fake-db/mui-components/table/SimpleTable.txt","@fake-db/mui-components/table/SpanningTable.txt","@fake-db/mui-components/table/StickyHeadTable.txt","routes/Components/MuiComponents/Table/demo/SimpleTable.js","routes/Components/MuiComponents/Table/demo/DenseTable.js","routes/Components/MuiComponents/Table/demo/EnhancedTable.js","routes/Components/MuiComponents/Table/demo/CustomizedTables.js","routes/Components/MuiComponents/Table/demo/CustomPaginationActionsTable.js","routes/Components/MuiComponents/Table/demo/StickyHeadTable.js","routes/Components/MuiComponents/Table/demo/CollapsibleTable.js","routes/Components/MuiComponents/Table/demo/SpanningTable.js","routes/Components/MuiComponents/Table/demo/ReactVirtualizedTable.js","routes/Components/MuiComponents/Table/demo/MaterialTableDemo.js","routes/Components/MuiComponents/Table/demo/AcccessibleTable.js","routes/Components/MuiComponents/Table/index.js"],"names":["useStyles","makeStyles","pageFull","width","PageContainer","heading","breadcrumbs","children","className","restProps","classes","in","direction","mountOnEnter","unmountOnExit","clsx","breadcrumbComponent","items","theme","pageHeaderRoot","display","flexDirection","breakpoints","up","alignItems","titleRoot","down","marginBottom","PageHeader","rest","Box","mb","xs","md","lg","Typography","component","variant","ml","sm","textSm","fontSize","linkBlock","color","PageBreadcrumbs","Breadcrumbs","aria-label","map","item","index","isActive","key","label","to","link","CorematComponentDemo","SourceCodeComponent","SettingsComponent","GridContainer","Grid","CmtCard","MuiComponentDemo","pageTitle","menus","ComponentsDemo","root","flexWrap","contentArea","paddingRight","typography","pxToRem","contentSidebar","height","position","top","overflowY","flexShrink","xsDown","menu","dense","button","href","primary","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","backgroundColor","lighten","palette","background","paper","table","minWidth","createData","name","calories","fat","carbs","protein","rows","SimpleTable","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","row","scope","DenseTable","size","descendingComparator","a","b","orderBy","headCells","numeric","disablePadding","EnhancedTableHead","props","onSelectAllClick","order","numSelected","rowCount","onRequestSort","padding","Checkbox","indeterminate","checked","onChange","inputProps","headCell","sortDirection","TableSortLabel","active","onClick","property","event","visuallyHidden","useToolbarStyles","paddingLeft","spacing","highlight","type","secondary","main","alpha","light","text","dark","title","flex","EnhancedTableToolbar","Toolbar","Tooltip","IconButton","border","clip","margin","overflow","EnhancedTable","React","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","setDense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","aria-labelledby","target","newSelecteds","n","array","comparator","stabilizedThis","el","sort","stableSort","getComparator","slice","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","style","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","value","FormControlLabel","control","Switch","StyledTableCell","withStyles","head","common","black","white","body","StyledTableRow","action","CustomizedTables","useStyles1","marginLeft","TablePaginationActions","useTheme","onChangePage","disabled","ceil","max","useStyles2","CustomPaginationActionsTable","TableFooter","SelectProps","native","ActionsComponent","columns","format","toLocaleString","toFixed","population","density","container","maxHeight","StickyHeadTable","stickyHeader","column","useRowStyles","borderBottom","price","history","date","customerId","amount","Row","open","setOpen","Fragment","paddingBottom","paddingTop","Collapse","timeout","gutterBottom","historyRow","round","CollapsibleTable","ccyFormat","num","createRow","desc","qty","unit","priceRow","invoiceSubtotal","reduce","sum","i","invoiceTaxes","invoiceTotal","SpanningTable","rowSpan","MuiVirtualizedTable","getRowClassName","onRowClick","tableRow","flexContainer","tableRowHover","cellRenderer","cellData","columnIndex","rowHeight","tableCell","noClick","headerRenderer","headerHeight","this","tableProps","gridStyle","rowClassName","dataKey","other","headerProps","PureComponent","defaultProps","VirtualizedTable","boxSizing","flip","undefined","cursor","sample","dessert","randomSelection","floor","random","push","ReactVirtualizedTable","rowGetter","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","MaterialTableDemo","field","lookup","34","63","data","surname","birthYear","birthCity","state","setState","icons","editable","onRowAdd","newData","Promise","setTimeout","prevState","onRowUpdate","oldData","onRowDelete","splice","AcccessibleTable","section","sectionHeading","requireRaw","require","demos","filename","CodeViewerCard","default","language"],"mappings":"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","file":"static/js/87.b7f84273.chunk.js","sourcesContent":["import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { PageBreadcrumbs, PageHeader } from '../index';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  pageFull: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst PageContainer = ({ heading, breadcrumbs, children, className, restProps }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Slide in={true} direction=\"up\" mountOnEnter unmountOnExit>\r\n      <Box className={clsx(classes.pageFull, className)} {...restProps}>\r\n        {(heading || breadcrumbs) && (\r\n          <PageHeader heading={heading} breadcrumbComponent={breadcrumbs && <PageBreadcrumbs items={breadcrumbs} />} />\r\n        )}\r\n        {children}\r\n      </Box>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default PageContainer;\r\n","import React from 'react';\r\nimport { Box, makeStyles, Typography } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageHeaderRoot: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.up('sm')]: {\r\n      alignItems: 'center',\r\n      flexDirection: 'row',\r\n    },\r\n  },\r\n  titleRoot: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginBottom: 10,\r\n    },\r\n  },\r\n}));\r\n\r\nconst PageHeader = ({ heading, breadcrumbComponent, children, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={clsx(classes.pageHeaderRoot, 'page-header')} mb={{ xs: 5, md: 6, lg: 8 }} {...rest}>\r\n      <Typography component=\"div\" variant=\"h1\" className={clsx(classes.titleRoot, 'title')}>\r\n        {heading}\r\n      </Typography>\r\n      <Box ml={{ sm: 'auto' }}>{breadcrumbComponent}</Box>\r\n\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import React from 'react';\r\nimport { Breadcrumbs, makeStyles } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { NavLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  textSm: {\r\n    fontSize: 12,\r\n  },\r\n  linkBlock: {\r\n    display: 'block',\r\n    color: 'inherit',\r\n  },\r\n}));\r\n\r\nconst PageBreadcrumbs = ({ items, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Breadcrumbs className=\"bread-crumbs\" aria-label=\"breadcrumb {...rest}\">\r\n      {items.map((item, index) =>\r\n        item.isActive ? (\r\n          <Typography key={index} className={classes.textSm} color=\"textPrimary\">\r\n            {item.label}\r\n          </Typography>\r\n        ) : (\r\n          <NavLink key={index} className={clsx(classes.textSm, classes.linkBlock)} color=\"inherit\" to={item.link || '/'}>\r\n            {item.label}\r\n          </NavLink>\r\n        ),\r\n      )}\r\n    </Breadcrumbs>\r\n  );\r\n};\r\n\r\nexport default PageBreadcrumbs;\r\n","import React from 'react';\r\nimport { Box, Grid } from '@material-ui/core';\r\nimport CmtCard from '../../../../@coremat/CmtCard';\r\nimport { PageHeader } from '../index';\r\nimport GridContainer from '../../GridContainer';\r\nimport PageContainer from './PageContainer';\r\n\r\nconst CorematComponentDemo = ({ SourceCodeComponent, SettingsComponent, children }) => {\r\n  return (\r\n    <PageContainer>\r\n      <GridContainer>\r\n        <Grid item xs={12} md={7}>\r\n          <PageHeader heading=\"Preview\" />\r\n          <Box mb={8}>{children}</Box>\r\n          <CmtCard>{SourceCodeComponent}</CmtCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={5}>\r\n          {SettingsComponent}\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default CorematComponentDemo;\r\n","import React from 'react';\r\nimport ComponentsDemo from './ComponentsDemo';\r\n\r\nconst MuiComponentDemo = ({ pageTitle, menus, children }) => {\r\n  const breadcrumbs = [\r\n    { label: 'Home', link: '/' },\r\n    { label: 'Material UI Components', link: '/components/mui' },\r\n    { label: pageTitle, isActive: true },\r\n  ];\r\n  return (\r\n    <ComponentsDemo pageTitle={pageTitle} breadcrumbs={breadcrumbs} menus={menus}>\r\n      {children}\r\n    </ComponentsDemo>\r\n  );\r\n};\r\nexport default MuiComponentDemo;\r\n","import React from 'react';\r\nimport { Box, Hidden, List, ListItem, ListItemText, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PageContainer from './PageContainer';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  contentArea: {\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingRight: theme.typography.pxToRem(30),\r\n      width: `calc(100% - ${theme.typography.pxToRem(175)})`,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingRight: theme.typography.pxToRem(54),\r\n    },\r\n  },\r\n  contentSidebar: {\r\n    width: theme.typography.pxToRem(175),\r\n    height: `calc(100vh - ${theme.typography.pxToRem(102)})`,\r\n    position: 'sticky',\r\n    top: 30,\r\n    overflowY: 'auto',\r\n    flexShrink: 0,\r\n  },\r\n}));\r\n\r\nconst ComponentsDemo = ({ pageTitle, menus, breadcrumbs, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <PageContainer heading={pageTitle} breadcrumbs={breadcrumbs}>\r\n      <Box className={classes.root}>\r\n        <Box className={classes.contentArea}>{children}</Box>\r\n        <Hidden xsDown>\r\n          <Box className={classes.contentSidebar}>\r\n            <Typography component=\"h4\" variant=\"h4\">\r\n              Contents\r\n            </Typography>\r\n            <List>\r\n              {menus.map((menu, index) => (\r\n                <ListItem key={index} dense button component=\"a\" href={`#${menu.link}`}>\r\n                  <ListItemText primary={menu.label} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Box>\r\n        </Hidden>\r\n      </Box>\r\n    </PageContainer>\r\n  );\r\n};\r\nexport default ComponentsDemo;\r\n","var map = {\n\t\"./AcccessibleTable.txt\": 2810,\n\t\"./CollapsibleTable.txt\": 2811,\n\t\"./CustomPaginationActionsTable.txt\": 2812,\n\t\"./CustomizedTables.txt\": 2813,\n\t\"./DenseTable.txt\": 2814,\n\t\"./EnhancedTable.txt\": 2815,\n\t\"./MaterialTableDemo.txt\": 2816,\n\t\"./ReactVirtualizedTable.txt\": 2817,\n\t\"./SimpleTable.txt\": 2818,\n\t\"./SpanningTable.txt\": 2819,\n\t\"./StickyHeadTable.txt\": 2820\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2809;","export default \"import React from 'react';\\r\\nimport { lighten, makeStyles } from '@material-ui/core/styles';\\r\\nimport Table from '@material-ui/core/Table';\\r\\nimport TableBody from '@material-ui/core/TableBody';\\r\\nimport TableCell from '@material-ui/core/TableCell';\\r\\nimport TableContainer from '@material-ui/core/TableContainer';\\r\\nimport TableHead from '@material-ui/core/TableHead';\\r\\nimport TableRow from '@material-ui/core/TableRow';\\r\\nimport Paper from '@material-ui/core/Paper';\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  root: {\\r\\n    backgroundColor: lighten(theme.palette.background.paper, 0.1),\\r\\n  },\\r\\n  table: {\\r\\n    minWidth: 650,\\r\\n  },\\r\\n}));\\r\\n\\r\\nfunction createData(name, calories, fat, carbs, protein) {\\r\\n  return { name, calories, fat, carbs, protein };\\r\\n}\\r\\n\\r\\nconst rows = [\\r\\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\\r\\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\\r\\n  createData('Eclair', 262, 16.0, 24, 6.0),\\r\\n];\\r\\n\\r\\nexport default function AcccessibleTable() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  return (\\r\\n    <TableContainer component={Paper} className={classes.root}>\\r\\n      <Table className={classes.table} aria-label=\\\"caption table\\\">\\r\\n        <caption>A basic table example with a caption</caption>\\r\\n        <TableHead>\\r\\n          <TableRow>\\r\\n            <TableCell>Dessert (100g serving)</TableCell>\\r\\n            <TableCell align=\\\"right\\\">Calories</TableCell>\\r\\n            <TableCell align=\\\"right\\\">Fat&nbsp;(g)</TableCell>\\r\\n            <TableCell align=\\\"right\\\">Carbs&nbsp;(g)</TableCell>\\r\\n            <TableCell align=\\\"right\\\">Protein&nbsp;(g)</TableCell>\\r\\n          </TableRow>\\r\\n        </TableHead>\\r\\n        <TableBody>\\r\\n          {rows.map(row => (\\r\\n            <TableRow key={row.name}>\\r\\n              <TableCell component=\\\"th\\\" scope=\\\"row\\\">\\r\\n                {row.name}\\r\\n              </TableCell>\\r\\n              <TableCell align=\\\"right\\\">{row.calories}</TableCell>\\r\\n              <TableCell align=\\\"right\\\">{row.fat}</TableCell>\\r\\n              <TableCell align=\\\"right\\\">{row.carbs}</TableCell>\\r\\n              <TableCell align=\\\"right\\\">{row.protein}</TableCell>\\r\\n            </TableRow>\\r\\n          ))}\\r\\n        </TableBody>\\r\\n      </Table>\\r\\n    </TableContainer>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport PropTypes from 'prop-types';\\r\\nimport { lighten, makeStyles } from '@material-ui/core/styles';\\r\\nimport Box from '@material-ui/core/Box';\\r\\nimport Collapse from '@material-ui/core/Collapse';\\r\\nimport IconButton from '@material-ui/core/IconButton';\\r\\nimport Table from '@material-ui/core/Table';\\r\\nimport TableBody from '@material-ui/core/TableBody';\\r\\nimport TableCell from '@material-ui/core/TableCell';\\r\\nimport TableContainer from '@material-ui/core/TableContainer';\\r\\nimport TableHead from '@material-ui/core/TableHead';\\r\\nimport TableRow from '@material-ui/core/TableRow';\\r\\nimport Typography from '@material-ui/core/Typography';\\r\\nimport Paper from '@material-ui/core/Paper';\\r\\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\\r\\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\\r\\n\\r\\nconst useRowStyles = makeStyles({\\r\\n  root: {\\r\\n    '& > *': {\\r\\n      borderBottom: 'unset',\\r\\n    },\\r\\n  },\\r\\n});\\r\\n\\r\\nfunction createData(name, calories, fat, carbs, protein, price) {\\r\\n  return {\\r\\n    name,\\r\\n    calories,\\r\\n    fat,\\r\\n    carbs,\\r\\n    protein,\\r\\n    price,\\r\\n    history: [\\r\\n      { date: '2020-01-05', customerId: '11091700', amount: 3 },\\r\\n      { date: '2020-01-02', customerId: 'Anonymous', amount: 1 },\\r\\n    ],\\r\\n  };\\r\\n}\\r\\n\\r\\nfunction Row(props) {\\r\\n  const { row } = props;\\r\\n  const [open, setOpen] = React.useState(false);\\r\\n  const classes = useRowStyles();\\r\\n\\r\\n  return (\\r\\n    <React.Fragment>\\r\\n      <TableRow className={classes.root}>\\r\\n        <TableCell>\\r\\n          <IconButton aria-label=\\\"expand row\\\" size=\\\"small\\\" onClick={() => setOpen(!open)}>\\r\\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\\r\\n          </IconButton>\\r\\n        </TableCell>\\r\\n        <TableCell component=\\\"th\\\" scope=\\\"row\\\">\\r\\n          {row.name}\\r\\n        </TableCell>\\r\\n        <TableCell align=\\\"right\\\">{row.calories}</TableCell>\\r\\n        <TableCell align=\\\"right\\\">{row.fat}</TableCell>\\r\\n        <TableCell align=\\\"right\\\">{row.carbs}</TableCell>\\r\\n        <TableCell align=\\\"right\\\">{row.protein}</TableCell>\\r\\n      </TableRow>\\r\\n      <TableRow>\\r\\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\\r\\n          <Collapse in={open} timeout=\\\"auto\\\" unmountOnExit>\\r\\n            <Box margin={1}>\\r\\n              <Typography variant=\\\"h6\\\" gutterBottom component=\\\"div\\\">\\r\\n                History\\r\\n              </Typography>\\r\\n              <Table size=\\\"small\\\" aria-label=\\\"purchases\\\">\\r\\n                <TableHead>\\r\\n                  <TableRow>\\r\\n                    <TableCell>Date</TableCell>\\r\\n                    <TableCell>Customer</TableCell>\\r\\n                    <TableCell align=\\\"right\\\">Amount</TableCell>\\r\\n                    <TableCell align=\\\"right\\\">Total price ($)</TableCell>\\r\\n                  </TableRow>\\r\\n                </TableHead>\\r\\n                <TableBody>\\r\\n                  {row.history.map(historyRow => (\\r\\n                    <TableRow key={historyRow.date}>\\r\\n                      <TableCell component=\\\"th\\\" scope=\\\"row\\\">\\r\\n                        {historyRow.date}\\r\\n                      </TableCell>\\r\\n                      <TableCell>{historyRow.customerId}</TableCell>\\r\\n                      <TableCell align=\\\"right\\\">{historyRow.amount}</TableCell>\\r\\n                      <TableCell align=\\\"right\\\">{Math.round(historyRow.amount * row.price * 100) / 100}</TableCell>\\r\\n                    </TableRow>\\r\\n                  ))}\\r\\n                </TableBody>\\r\\n              </Table>\\r\\n            </Box>\\r\\n          </Collapse>\\r\\n        </TableCell>\\r\\n      </TableRow>\\r\\n    </React.Fragment>\\r\\n  );\\r\\n}\\r\\n\\r\\nRow.propTypes = {\\r\\n  row: PropTypes.shape({\\r\\n    calories: PropTypes.number.isRequired,\\r\\n    carbs: PropTypes.number.isRequired,\\r\\n    fat: PropTypes.number.isRequired,\\r\\n    history: PropTypes.arrayOf(\\r\\n      PropTypes.shape({\\r\\n        amount: PropTypes.number.isRequired,\\r\\n        customerId: PropTypes.string.isRequired,\\r\\n        date: PropTypes.string.isRequired,\\r\\n      }),\\r\\n    ).isRequired,\\r\\n    name: PropTypes.string.isRequired,\\r\\n    price: PropTypes.number.isRequired,\\r\\n    protein: PropTypes.number.isRequired,\\r\\n  }).isRequired,\\r\\n};\\r\\n\\r\\nconst rows = [\\r\\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 3.99),\\r\\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 4.99),\\r\\n  createData('Eclair', 262, 16.0, 24, 6.0, 3.79),\\r\\n  createData('Cupcake', 305, 3.7, 67, 4.3, 2.5),\\r\\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 1.5),\\r\\n];\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  root: {\\r\\n    backgroundColor: lighten(theme.palette.background.paper, 0.1),\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function CollapsibleTable() {\\r\\n  const classes = useStyles();\\r\\n  return (\\r\\n    <TableContainer component={Paper} className={classes.root}>\\r\\n      <Table aria-label=\\\"collapsible table\\\">\\r\\n        <TableHead>\\r\\n          <TableRow>\\r\\n            <TableCell />\\r\\n            <TableCell>Dessert (100g serving)</TableCell>\\r\\n            <TableCell align=\\\"right\\\">Calories</TableCell>\\r\\n            <TableCell align=\\\"right\\\">Fat&nbsp;(g)</TableCell>\\r\\n            <TableCell align=\\\"right\\\">Carbs&nbsp;(g)</TableCell>\\r\\n            <TableCell align=\\\"right\\\">Protein&nbsp;(g)</TableCell>\\r\\n          </TableRow>\\r\\n        </TableHead>\\r\\n        <TableBody>\\r\\n          {rows.map(row => (\\r\\n            <Row key={row.name} row={row} />\\r\\n          ))}\\r\\n        </TableBody>\\r\\n      </Table>\\r\\n    </TableContainer>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport PropTypes from 'prop-types';\\r\\nimport { lighten, makeStyles, useTheme } from '@material-ui/core/styles';\\r\\nimport Table from '@material-ui/core/Table';\\r\\nimport TableBody from '@material-ui/core/TableBody';\\r\\nimport TableCell from '@material-ui/core/TableCell';\\r\\nimport TableContainer from '@material-ui/core/TableContainer';\\r\\nimport TableFooter from '@material-ui/core/TableFooter';\\r\\nimport TablePagination from '@material-ui/core/TablePagination';\\r\\nimport TableRow from '@material-ui/core/TableRow';\\r\\nimport Paper from '@material-ui/core/Paper';\\r\\nimport IconButton from '@material-ui/core/IconButton';\\r\\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\\r\\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\\r\\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\\r\\nimport LastPageIcon from '@material-ui/icons/LastPage';\\r\\n\\r\\nconst useStyles1 = makeStyles(theme => ({\\r\\n  root: {\\r\\n    flexShrink: 0,\\r\\n    marginLeft: theme.spacing(5),\\r\\n  },\\r\\n}));\\r\\n\\r\\nfunction TablePaginationActions(props) {\\r\\n  const classes = useStyles1();\\r\\n  const theme = useTheme();\\r\\n  const { count, page, rowsPerPage, onChangePage } = props;\\r\\n\\r\\n  const handleFirstPageButtonClick = event => {\\r\\n    onChangePage(event, 0);\\r\\n  };\\r\\n\\r\\n  const handleBackButtonClick = event => {\\r\\n    onChangePage(event, page - 1);\\r\\n  };\\r\\n\\r\\n  const handleNextButtonClick = event => {\\r\\n    onChangePage(event, page + 1);\\r\\n  };\\r\\n\\r\\n  const handleLastPageButtonClick = event => {\\r\\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\\\"first page\\\">\\r\\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\\r\\n      </IconButton>\\r\\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\\\"previous page\\\">\\r\\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\\r\\n      </IconButton>\\r\\n      <IconButton\\r\\n        onClick={handleNextButtonClick}\\r\\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\\r\\n        aria-label=\\\"next page\\\">\\r\\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\\r\\n      </IconButton>\\r\\n      <IconButton\\r\\n        onClick={handleLastPageButtonClick}\\r\\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\\r\\n        aria-label=\\\"last page\\\">\\r\\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\\r\\n      </IconButton>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\\r\\nTablePaginationActions.propTypes = {\\r\\n  count: PropTypes.number.isRequired,\\r\\n  onPageChange: PropTypes.func.isRequired,\\r\\n  page: PropTypes.number.isRequired,\\r\\n  rowsPerPage: PropTypes.number.isRequired,\\r\\n};\\r\\n\\r\\nfunction createData(name, calories, fat) {\\r\\n  return { name, calories, fat };\\r\\n}\\r\\n\\r\\nconst rows = [\\r\\n  createData('Cupcake', 305, 3.7),\\r\\n  createData('Donut', 452, 25.0),\\r\\n  createData('Eclair', 262, 16.0),\\r\\n  createData('Frozen yoghurt', 159, 6.0),\\r\\n  createData('Gingerbread', 356, 16.0),\\r\\n  createData('Honeycomb', 408, 3.2),\\r\\n  createData('Ice cream sandwich', 237, 9.0),\\r\\n  createData('Jelly Bean', 375, 0.0),\\r\\n  createData('KitKat', 518, 26.0),\\r\\n  createData('Lollipop', 392, 0.2),\\r\\n  createData('Marshmallow', 318, 0),\\r\\n  createData('Nougat', 360, 19.0),\\r\\n  createData('Oreo', 437, 18.0),\\r\\n].sort((a, b) => (a.calories < b.calories ? -1 : 1));\\r\\n\\r\\nconst useStyles2 = makeStyles(theme => ({\\r\\n  root: {\\r\\n    backgroundColor: lighten(theme.palette.background.paper, 0.1),\\r\\n  },\\r\\n  table: {\\r\\n    minWidth: 500,\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function CustomPaginationActionsTable() {\\r\\n  const classes = useStyles2();\\r\\n  const [page, setPage] = React.useState(0);\\r\\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\\r\\n\\r\\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\\r\\n\\r\\n  const handleChangePage = (event, newPage) => {\\r\\n    setPage(newPage);\\r\\n  };\\r\\n\\r\\n  const handleChangeRowsPerPage = event => {\\r\\n    setRowsPerPage(parseInt(event.target.value, 10));\\r\\n    setPage(0);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <TableContainer component={Paper} className={classes.root}>\\r\\n      <Table className={classes.table} aria-label=\\\"custom pagination table\\\">\\r\\n        <TableBody>\\r\\n          {(rowsPerPage > 0 ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : rows).map(row => (\\r\\n            <TableRow key={row.name}>\\r\\n              <TableCell component=\\\"th\\\" scope=\\\"row\\\">\\r\\n                {row.name}\\r\\n              </TableCell>\\r\\n              <TableCell style={{ width: 160 }} align=\\\"right\\\">\\r\\n                {row.calories}\\r\\n              </TableCell>\\r\\n              <TableCell style={{ width: 160 }} align=\\\"right\\\">\\r\\n                {row.fat}\\r\\n              </TableCell>\\r\\n            </TableRow>\\r\\n          ))}\\r\\n\\r\\n          {emptyRows > 0 && (\\r\\n            <TableRow style={{ height: 53 * emptyRows }}>\\r\\n              <TableCell colSpan={6} />\\r\\n            </TableRow>\\r\\n          )}\\r\\n        </TableBody>\\r\\n        <TableFooter>\\r\\n          <TableRow>\\r\\n            <TablePagination\\r\\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\\r\\n              colSpan={3}\\r\\n              count={rows.length}\\r\\n              rowsPerPage={rowsPerPage}\\r\\n              page={page}\\r\\n              SelectProps={{\\r\\n                inputProps: { 'aria-label': 'rows per page' },\\r\\n                native: true,\\r\\n              }}\\r\\n              onPageChange={handleChangePage}\\r\\n              onRowsPerPageChange={handleChangeRowsPerPage}\\r\\n              ActionsComponent={TablePaginationActions}\\r\\n            />\\r\\n          </TableRow>\\r\\n        </TableFooter>\\r\\n      </Table>\\r\\n    </TableContainer>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\\r\\nimport Table from '@material-ui/core/Table';\\r\\nimport TableBody from '@material-ui/core/TableBody';\\r\\nimport TableCell from '@material-ui/core/TableCell';\\r\\nimport TableContainer from '@material-ui/core/TableContainer';\\r\\nimport TableHead from '@material-ui/core/TableHead';\\r\\nimport TableRow from '@material-ui/core/TableRow';\\r\\nimport Paper from '@material-ui/core/Paper';\\r\\n\\r\\nconst StyledTableCell = withStyles(theme => ({\\r\\n  head: {\\r\\n    backgroundColor: theme.palette.common.dark,\\r\\n    color: theme.palette.common.white,\\r\\n  },\\r\\n  body: {\\r\\n    fontSize: 14,\\r\\n  },\\r\\n}))(TableCell);\\r\\n\\r\\nconst StyledTableRow = withStyles(theme => ({\\r\\n  root: {\\r\\n    '&:nth-of-type(odd)': {\\r\\n      backgroundColor: theme.palette.action.hover,\\r\\n    },\\r\\n  },\\r\\n}))(TableRow);\\r\\n\\r\\nfunction createData(name, calories, fat, carbs, protein) {\\r\\n  return { name, calories, fat, carbs, protein };\\r\\n}\\r\\n\\r\\nconst rows = [\\r\\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\\r\\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\\r\\n  createData('Eclair', 262, 16.0, 24, 6.0),\\r\\n  createData('Cupcake', 305, 3.7, 67, 4.3),\\r\\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\\r\\n];\\r\\n\\r\\nconst useStyles = makeStyles({\\r\\n  table: {\\r\\n    minWidth: 700,\\r\\n  },\\r\\n});\\r\\n\\r\\nexport default function CustomizedTables() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  return (\\r\\n    <TableContainer component={Paper}>\\r\\n      <Table className={classes.table} aria-label=\\\"customized table\\\">\\r\\n        <TableHead>\\r\\n          <TableRow>\\r\\n            <StyledTableCell>Dessert (100g serving)</StyledTableCell>\\r\\n            <StyledTableCell align=\\\"right\\\">Calories</StyledTableCell>\\r\\n            <StyledTableCell align=\\\"right\\\">Fat&nbsp;(g)</StyledTableCell>\\r\\n            <StyledTableCell align=\\\"right\\\">Carbs&nbsp;(g)</StyledTableCell>\\r\\n            <StyledTableCell align=\\\"right\\\">Protein&nbsp;(g)</StyledTableCell>\\r\\n          </TableRow>\\r\\n        </TableHead>\\r\\n        <TableBody>\\r\\n          {rows.map(row => (\\r\\n            <StyledTableRow key={row.name}>\\r\\n              <StyledTableCell component=\\\"th\\\" scope=\\\"row\\\">\\r\\n                {row.name}\\r\\n              </StyledTableCell>\\r\\n              <StyledTableCell align=\\\"right\\\">{row.calories}</StyledTableCell>\\r\\n              <StyledTableCell align=\\\"right\\\">{row.fat}</StyledTableCell>\\r\\n              <StyledTableCell align=\\\"right\\\">{row.carbs}</StyledTableCell>\\r\\n              <StyledTableCell align=\\\"right\\\">{row.protein}</StyledTableCell>\\r\\n            </StyledTableRow>\\r\\n          ))}\\r\\n        </TableBody>\\r\\n      </Table>\\r\\n    </TableContainer>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport { lighten, makeStyles } from '@material-ui/core/styles';\\r\\nimport Table from '@material-ui/core/Table';\\r\\nimport TableBody from '@material-ui/core/TableBody';\\r\\nimport TableCell from '@material-ui/core/TableCell';\\r\\nimport TableContainer from '@material-ui/core/TableContainer';\\r\\nimport TableHead from '@material-ui/core/TableHead';\\r\\nimport TableRow from '@material-ui/core/TableRow';\\r\\nimport Paper from '@material-ui/core/Paper';\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  root: {\\r\\n    backgroundColor: lighten(theme.palette.background.paper, 0.1),\\r\\n  },\\r\\n  table: {\\r\\n    minWidth: 650,\\r\\n  },\\r\\n}));\\r\\n\\r\\nfunction createData(name, calories, fat, carbs, protein) {\\r\\n  return { name, calories, fat, carbs, protein };\\r\\n}\\r\\n\\r\\nconst rows = [\\r\\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\\r\\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\\r\\n  createData('Eclair', 262, 16.0, 24, 6.0),\\r\\n  createData('Cupcake', 305, 3.7, 67, 4.3),\\r\\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\\r\\n];\\r\\n\\r\\nexport default function DenseTable() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  return (\\r\\n    <TableContainer component={Paper} className={classes.root}>\\r\\n      <Table className={classes.table} size=\\\"small\\\" aria-label=\\\"a dense table\\\">\\r\\n        <TableHead>\\r\\n          <TableRow>\\r\\n            <TableCell>Dessert (100g serving)</TableCell>\\r\\n            <TableCell align=\\\"right\\\">Calories</TableCell>\\r\\n            <TableCell align=\\\"right\\\">Fat&nbsp;(g)</TableCell>\\r\\n            <TableCell align=\\\"right\\\">Carbs&nbsp;(g)</TableCell>\\r\\n            <TableCell align=\\\"right\\\">Protein&nbsp;(g)</TableCell>\\r\\n          </TableRow>\\r\\n        </TableHead>\\r\\n        <TableBody>\\r\\n          {rows.map(row => (\\r\\n            <TableRow key={row.name}>\\r\\n              <TableCell component=\\\"th\\\" scope=\\\"row\\\">\\r\\n                {row.name}\\r\\n              </TableCell>\\r\\n              <TableCell align=\\\"right\\\">{row.calories}</TableCell>\\r\\n              <TableCell align=\\\"right\\\">{row.fat}</TableCell>\\r\\n              <TableCell align=\\\"right\\\">{row.carbs}</TableCell>\\r\\n              <TableCell align=\\\"right\\\">{row.protein}</TableCell>\\r\\n            </TableRow>\\r\\n          ))}\\r\\n        </TableBody>\\r\\n      </Table>\\r\\n    </TableContainer>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport PropTypes from 'prop-types';\\r\\nimport clsx from 'clsx';\\r\\nimport { lighten, makeStyles } from '@material-ui/core/styles';\\r\\nimport Table from '@material-ui/core/Table';\\r\\nimport TableBody from '@material-ui/core/TableBody';\\r\\nimport TableCell from '@material-ui/core/TableCell';\\r\\nimport TableContainer from '@material-ui/core/TableContainer';\\r\\nimport TableHead from '@material-ui/core/TableHead';\\r\\nimport TablePagination from '@material-ui/core/TablePagination';\\r\\nimport TableRow from '@material-ui/core/TableRow';\\r\\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\\r\\nimport Toolbar from '@material-ui/core/Toolbar';\\r\\nimport Typography from '@material-ui/core/Typography';\\r\\nimport Paper from '@material-ui/core/Paper';\\r\\nimport Checkbox from '@material-ui/core/Checkbox';\\r\\nimport IconButton from '@material-ui/core/IconButton';\\r\\nimport Tooltip from '@material-ui/core/Tooltip';\\r\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\r\\nimport Switch from '@material-ui/core/Switch';\\r\\nimport DeleteIcon from '@material-ui/icons/Delete';\\r\\nimport FilterListIcon from '@material-ui/icons/FilterList';\\r\\nimport { Box } from '@material-ui/core';\\r\\nimport { alpha } from '@material-ui/core/styles';\\r\\n\\r\\nfunction createData(name, calories, fat, carbs, protein) {\\r\\n  return { name, calories, fat, carbs, protein };\\r\\n}\\r\\n\\r\\nconst rows = [\\r\\n  createData('Cupcake', 305, 3.7, 67, 4.3),\\r\\n  createData('Donut', 452, 25.0, 51, 4.9),\\r\\n  createData('Eclair', 262, 16.0, 24, 6.0),\\r\\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\\r\\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\\r\\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\\r\\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\\r\\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\\r\\n  createData('KitKat', 518, 26.0, 65, 7.0),\\r\\n  createData('Lollipop', 392, 0.2, 98, 0.0),\\r\\n  createData('Marshmallow', 318, 0, 81, 2.0),\\r\\n  createData('Nougat', 360, 19.0, 9, 37.0),\\r\\n  createData('Oreo', 437, 18.0, 63, 4.0),\\r\\n];\\r\\n\\r\\nfunction descendingComparator(a, b, orderBy) {\\r\\n  if (b[orderBy] < a[orderBy]) {\\r\\n    return -1;\\r\\n  }\\r\\n  if (b[orderBy] > a[orderBy]) {\\r\\n    return 1;\\r\\n  }\\r\\n  return 0;\\r\\n}\\r\\n\\r\\nfunction getComparator(order, orderBy) {\\r\\n  return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\\r\\n}\\r\\n\\r\\nfunction stableSort(array, comparator) {\\r\\n  const stabilizedThis = array.map((el, index) => [el, index]);\\r\\n  stabilizedThis.sort((a, b) => {\\r\\n    const order = comparator(a[0], b[0]);\\r\\n    if (order !== 0) return order;\\r\\n    return a[1] - b[1];\\r\\n  });\\r\\n  return stabilizedThis.map(el => el[0]);\\r\\n}\\r\\n\\r\\nconst headCells = [\\r\\n  {\\r\\n    id: 'name',\\r\\n    numeric: false,\\r\\n    disablePadding: true,\\r\\n    label: 'Dessert (100g serving)',\\r\\n  },\\r\\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\\r\\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\\r\\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\\r\\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\\r\\n];\\r\\n\\r\\nfunction EnhancedTableHead(props) {\\r\\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\\r\\n  const createSortHandler = property => event => {\\r\\n    onRequestSort(event, property);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <TableHead>\\r\\n      <TableRow>\\r\\n        <TableCell padding=\\\"checkbox\\\">\\r\\n          <Checkbox\\r\\n            indeterminate={numSelected > 0 && numSelected < rowCount}\\r\\n            checked={rowCount > 0 && numSelected === rowCount}\\r\\n            onChange={onSelectAllClick}\\r\\n            inputProps={{ 'aria-label': 'select all desserts' }}\\r\\n          />\\r\\n        </TableCell>\\r\\n        {headCells.map(headCell => (\\r\\n          <TableCell\\r\\n            key={headCell.id}\\r\\n            align={headCell.numeric ? 'right' : 'left'}\\r\\n            padding={headCell.disablePadding ? 'none' : 'normal'}\\r\\n            sortDirection={orderBy === headCell.id ? order : false}>\\r\\n            <TableSortLabel\\r\\n              active={orderBy === headCell.id}\\r\\n              direction={orderBy === headCell.id ? order : 'asc'}\\r\\n              onClick={createSortHandler(headCell.id)}>\\r\\n              {headCell.label}\\r\\n              {orderBy === headCell.id ? (\\r\\n                <span className={classes.visuallyHidden}>{order === 'desc' ? 'sorted descending' : 'sorted ascending'}</span>\\r\\n              ) : null}\\r\\n            </TableSortLabel>\\r\\n          </TableCell>\\r\\n        ))}\\r\\n      </TableRow>\\r\\n    </TableHead>\\r\\n  );\\r\\n}\\r\\n\\r\\nEnhancedTableHead.propTypes = {\\r\\n  classes: PropTypes.object.isRequired,\\r\\n  numSelected: PropTypes.number.isRequired,\\r\\n  onRequestSort: PropTypes.func.isRequired,\\r\\n  onSelectAllClick: PropTypes.func.isRequired,\\r\\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\\r\\n  orderBy: PropTypes.string.isRequired,\\r\\n  rowCount: PropTypes.number.isRequired,\\r\\n};\\r\\n\\r\\nconst useToolbarStyles = makeStyles(theme => ({\\r\\n  root: {\\r\\n    paddingLeft: theme.spacing(4),\\r\\n    paddingRight: theme.spacing(2),\\r\\n  },\\r\\n  highlight:\\r\\n    theme.palette.type === 'light'\\r\\n      ? {\\r\\n          color: theme.palette.secondary.main,\\r\\n          backgroundColor: alpha(theme.palette.secondary.light, 0.15),\\r\\n        }\\r\\n      : {\\r\\n          color: theme.palette.text.primary,\\r\\n          backgroundColor: theme.palette.secondary.dark,\\r\\n        },\\r\\n  title: {\\r\\n    flex: '1 1 100%',\\r\\n  },\\r\\n}));\\r\\n\\r\\nconst EnhancedTableToolbar = props => {\\r\\n  const classes = useToolbarStyles();\\r\\n  const { numSelected } = props;\\r\\n\\r\\n  return (\\r\\n    <Toolbar\\r\\n      className={clsx(classes.root, {\\r\\n        [classes.highlight]: numSelected > 0,\\r\\n      })}>\\r\\n      {numSelected > 0 ? (\\r\\n        <Typography className={classes.title} color=\\\"inherit\\\" variant=\\\"subtitle1\\\" component=\\\"div\\\">\\r\\n          {numSelected} selected\\r\\n        </Typography>\\r\\n      ) : (\\r\\n        <Typography className={classes.title} variant=\\\"h6\\\" id=\\\"tableTitle\\\" component=\\\"div\\\">\\r\\n          Nutrition\\r\\n        </Typography>\\r\\n      )}\\r\\n\\r\\n      {numSelected > 0 ? (\\r\\n        <Tooltip title=\\\"Delete\\\">\\r\\n          <IconButton aria-label=\\\"delete\\\">\\r\\n            <DeleteIcon />\\r\\n          </IconButton>\\r\\n        </Tooltip>\\r\\n      ) : (\\r\\n        <Tooltip title=\\\"Filter list\\\">\\r\\n          <IconButton aria-label=\\\"filter list\\\">\\r\\n            <FilterListIcon />\\r\\n          </IconButton>\\r\\n        </Tooltip>\\r\\n      )}\\r\\n    </Toolbar>\\r\\n  );\\r\\n};\\r\\n\\r\\nEnhancedTableToolbar.propTypes = {\\r\\n  numSelected: PropTypes.number.isRequired,\\r\\n};\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  root: {\\r\\n    width: '100%',\\r\\n  },\\r\\n  paper: {\\r\\n    width: '100%',\\r\\n    marginBottom: theme.spacing(4),\\r\\n    backgroundColor: lighten(theme.palette.background.paper, 0.1),\\r\\n  },\\r\\n  table: {\\r\\n    minWidth: 750,\\r\\n  },\\r\\n  visuallyHidden: {\\r\\n    border: 0,\\r\\n    clip: 'rect(0 0 0 0)',\\r\\n    height: 1,\\r\\n    margin: -1,\\r\\n    overflow: 'hidden',\\r\\n    padding: 0,\\r\\n    position: 'absolute',\\r\\n    top: 20,\\r\\n    width: 1,\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function EnhancedTable() {\\r\\n  const classes = useStyles();\\r\\n  const [order, setOrder] = React.useState('asc');\\r\\n  const [orderBy, setOrderBy] = React.useState('calories');\\r\\n  const [selected, setSelected] = React.useState([]);\\r\\n  const [page, setPage] = React.useState(0);\\r\\n  const [dense, setDense] = React.useState(false);\\r\\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\\r\\n\\r\\n  const handleRequestSort = (event, property) => {\\r\\n    const isAsc = orderBy === property && order === 'asc';\\r\\n    setOrder(isAsc ? 'desc' : 'asc');\\r\\n    setOrderBy(property);\\r\\n  };\\r\\n\\r\\n  const handleSelectAllClick = event => {\\r\\n    if (event.target.checked) {\\r\\n      const newSelecteds = rows.map(n => n.name);\\r\\n      setSelected(newSelecteds);\\r\\n      return;\\r\\n    }\\r\\n    setSelected([]);\\r\\n  };\\r\\n\\r\\n  const handleClick = (event, name) => {\\r\\n    const selectedIndex = selected.indexOf(name);\\r\\n    let newSelected = [];\\r\\n\\r\\n    if (selectedIndex === -1) {\\r\\n      newSelected = newSelected.concat(selected, name);\\r\\n    } else if (selectedIndex === 0) {\\r\\n      newSelected = newSelected.concat(selected.slice(1));\\r\\n    } else if (selectedIndex === selected.length - 1) {\\r\\n      newSelected = newSelected.concat(selected.slice(0, -1));\\r\\n    } else if (selectedIndex > 0) {\\r\\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\\r\\n    }\\r\\n\\r\\n    setSelected(newSelected);\\r\\n  };\\r\\n\\r\\n  const handleChangePage = (event, newPage) => {\\r\\n    setPage(newPage);\\r\\n  };\\r\\n\\r\\n  const handleChangeRowsPerPage = event => {\\r\\n    setRowsPerPage(parseInt(event.target.value, 10));\\r\\n    setPage(0);\\r\\n  };\\r\\n\\r\\n  const handleChangeDense = event => {\\r\\n    setDense(event.target.checked);\\r\\n  };\\r\\n\\r\\n  const isSelected = name => selected.indexOf(name) !== -1;\\r\\n\\r\\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\\r\\n\\r\\n  return (\\r\\n    <Box className={classes.root}>\\r\\n      <Paper className={classes.paper}>\\r\\n        <EnhancedTableToolbar numSelected={selected.length} />\\r\\n        <TableContainer>\\r\\n          <Table\\r\\n            className={classes.table}\\r\\n            aria-labelledby=\\\"tableTitle\\\"\\r\\n            size={dense ? 'small' : 'medium'}\\r\\n            aria-label=\\\"enhanced table\\\">\\r\\n            <EnhancedTableHead\\r\\n              classes={classes}\\r\\n              numSelected={selected.length}\\r\\n              order={order}\\r\\n              orderBy={orderBy}\\r\\n              onSelectAllClick={handleSelectAllClick}\\r\\n              onRequestSort={handleRequestSort}\\r\\n              rowCount={rows.length}\\r\\n            />\\r\\n            <TableBody>\\r\\n              {stableSort(rows, getComparator(order, orderBy))\\r\\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\\r\\n                .map((row, index) => {\\r\\n                  const isItemSelected = isSelected(row.name);\\r\\n                  const labelId = `enhanced-table-checkbox-${index}`;\\r\\n\\r\\n                  return (\\r\\n                    <TableRow\\r\\n                      hover\\r\\n                      onClick={event => handleClick(event, row.name)}\\r\\n                      role=\\\"checkbox\\\"\\r\\n                      aria-checked={isItemSelected}\\r\\n                      tabIndex={-1}\\r\\n                      key={row.name}\\r\\n                      selected={isItemSelected}>\\r\\n                      <TableCell padding=\\\"checkbox\\\">\\r\\n                        <Checkbox checked={isItemSelected} inputProps={{ 'aria-labelledby': labelId }} />\\r\\n                      </TableCell>\\r\\n                      <TableCell component=\\\"th\\\" id={labelId} scope=\\\"row\\\" padding=\\\"none\\\">\\r\\n                        {row.name}\\r\\n                      </TableCell>\\r\\n                      <TableCell align=\\\"right\\\">{row.calories}</TableCell>\\r\\n                      <TableCell align=\\\"right\\\">{row.fat}</TableCell>\\r\\n                      <TableCell align=\\\"right\\\">{row.carbs}</TableCell>\\r\\n                      <TableCell align=\\\"right\\\">{row.protein}</TableCell>\\r\\n                    </TableRow>\\r\\n                  );\\r\\n                })}\\r\\n              {emptyRows > 0 && (\\r\\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\\r\\n                  <TableCell colSpan={6} />\\r\\n                </TableRow>\\r\\n              )}\\r\\n            </TableBody>\\r\\n          </Table>\\r\\n        </TableContainer>\\r\\n        <TablePagination\\r\\n          rowsPerPageOptions={[5, 10, 25]}\\r\\n          component=\\\"div\\\"\\r\\n          count={rows.length}\\r\\n          rowsPerPage={rowsPerPage}\\r\\n          page={page}\\r\\n          onPageChange={handleChangePage}\\r\\n          onRowsPerPageChange={handleChangeRowsPerPage}\\r\\n        />\\r\\n      </Paper>\\r\\n      <FormControlLabel control={<Switch checked={dense} onChange={handleChangeDense} />} label=\\\"Dense padding\\\" />\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React, { forwardRef } from 'react';\\r\\nimport MaterialTable from 'material-table';\\r\\n\\r\\nimport AddBox from '@material-ui/icons/AddBox';\\r\\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\\r\\nimport Check from '@material-ui/icons/Check';\\r\\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\\r\\nimport ChevronRight from '@material-ui/icons/ChevronRight';\\r\\nimport Clear from '@material-ui/icons/Clear';\\r\\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\\r\\nimport Edit from '@material-ui/icons/Edit';\\r\\nimport FilterList from '@material-ui/icons/FilterList';\\r\\nimport FirstPage from '@material-ui/icons/FirstPage';\\r\\nimport LastPage from '@material-ui/icons/LastPage';\\r\\nimport Remove from '@material-ui/icons/Remove';\\r\\nimport SaveAlt from '@material-ui/icons/SaveAlt';\\r\\nimport Search from '@material-ui/icons/Search';\\r\\nimport ViewColumn from '@material-ui/icons/ViewColumn';\\r\\nimport { lighten } from '@material-ui/core';\\r\\nimport { makeStyles } from '@material-ui/styles';\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  root: {\\r\\n    backgroundColor: lighten(theme.palette.background.paper, 0.1),\\r\\n  },\\r\\n}));\\r\\n\\r\\nconst tableIcons = {\\r\\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\\r\\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\\r\\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\\r\\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\\r\\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\\r\\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\\r\\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\\r\\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\\r\\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\\r\\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\\r\\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\\r\\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\\r\\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\\r\\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\\r\\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\\r\\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\\r\\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\\r\\n};\\r\\n\\r\\nexport default function MaterialTableDemo() {\\r\\n  const classes = useStyles();\\r\\n  const [state, setState] = React.useState({\\r\\n    columns: [\\r\\n      { title: 'Name', field: 'name' },\\r\\n      { title: 'Surname', field: 'surname' },\\r\\n      {\\r\\n        title: 'Birth Year',\\r\\n        field: 'birthYear',\\r\\n        type: 'numeric',\\r\\n      },\\r\\n      {\\r\\n        title: 'Birth Place',\\r\\n        field: 'birthCity',\\r\\n        lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\\r\\n      },\\r\\n    ],\\r\\n    data: [\\r\\n      {\\r\\n        name: 'Mehmet',\\r\\n        surname: 'Baran',\\r\\n        birthYear: 1987,\\r\\n        birthCity: 63,\\r\\n      },\\r\\n      {\\r\\n        name: 'Zerya Betül',\\r\\n        surname: 'Baran',\\r\\n        birthYear: 2017,\\r\\n        birthCity: 34,\\r\\n      },\\r\\n    ],\\r\\n  });\\r\\n\\r\\n  return (\\r\\n    <MaterialTable\\r\\n      className={classes.root}\\r\\n      icons={tableIcons}\\r\\n      title=\\\"Editable Example\\\"\\r\\n      columns={state.columns}\\r\\n      data={state.data}\\r\\n      editable={{\\r\\n        onRowAdd: newData =>\\r\\n          new Promise(resolve => {\\r\\n            setTimeout(() => {\\r\\n              resolve();\\r\\n              setState(prevState => {\\r\\n                const data = [...prevState.data];\\r\\n                data.push(newData);\\r\\n                return { ...prevState, data };\\r\\n              });\\r\\n            }, 600);\\r\\n          }),\\r\\n        onRowUpdate: (newData, oldData) =>\\r\\n          new Promise(resolve => {\\r\\n            setTimeout(() => {\\r\\n              resolve();\\r\\n              if (oldData) {\\r\\n                setState(prevState => {\\r\\n                  const data = [...prevState.data];\\r\\n                  data[data.indexOf(oldData)] = newData;\\r\\n                  return { ...prevState, data };\\r\\n                });\\r\\n              }\\r\\n            }, 600);\\r\\n          }),\\r\\n        onRowDelete: oldData =>\\r\\n          new Promise(resolve => {\\r\\n            setTimeout(() => {\\r\\n              resolve();\\r\\n              setState(prevState => {\\r\\n                const data = [...prevState.data];\\r\\n                data.splice(data.indexOf(oldData), 1);\\r\\n                return { ...prevState, data };\\r\\n              });\\r\\n            }, 600);\\r\\n          }),\\r\\n      }}\\r\\n    />\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport PropTypes from 'prop-types';\\r\\nimport clsx from 'clsx';\\r\\nimport { withStyles } from '@material-ui/core/styles';\\r\\nimport TableCell from '@material-ui/core/TableCell';\\r\\nimport Paper from '@material-ui/core/Paper';\\r\\nimport { AutoSizer, Column, Table } from 'react-virtualized';\\r\\nimport { alpha } from '@material-ui/core/styles';\\r\\n\\r\\nconst styles = theme => ({\\r\\n  flexContainer: {\\r\\n    display: 'flex',\\r\\n    alignItems: 'center',\\r\\n    boxSizing: 'border-box',\\r\\n  },\\r\\n  table: {\\r\\n    // temporary right-to-left patch, waiting for\\r\\n    // https://github.com/bvaughn/react-virtualized/issues/454\\r\\n    '& .ReactVirtualized__Table__headerRow': {\\r\\n      flip: false,\\r\\n      paddingRight: theme.direction === 'rtl' ? '0 !important' : undefined,\\r\\n    },\\r\\n  },\\r\\n  tableRow: {\\r\\n    cursor: 'pointer',\\r\\n  },\\r\\n  tableRowHover: {\\r\\n    '&:hover': {\\r\\n      backgroundColor: alpha(theme.palette.common.black, 0.05),\\r\\n    },\\r\\n  },\\r\\n  tableCell: {\\r\\n    flex: 1,\\r\\n  },\\r\\n  noClick: {\\r\\n    cursor: 'initial',\\r\\n  },\\r\\n});\\r\\n\\r\\nclass MuiVirtualizedTable extends React.PureComponent {\\r\\n  static defaultProps = {\\r\\n    headerHeight: 48,\\r\\n    rowHeight: 48,\\r\\n  };\\r\\n\\r\\n  getRowClassName = ({ index }) => {\\r\\n    const { classes, onRowClick } = this.props;\\r\\n\\r\\n    return clsx(classes.tableRow, classes.flexContainer, {\\r\\n      [classes.tableRowHover]: index !== -1 && onRowClick != null,\\r\\n    });\\r\\n  };\\r\\n\\r\\n  cellRenderer = ({ cellData, columnIndex }) => {\\r\\n    const { columns, classes, rowHeight, onRowClick } = this.props;\\r\\n    return (\\r\\n      <TableCell\\r\\n        component=\\\"div\\\"\\r\\n        className={clsx(classes.tableCell, classes.flexContainer, {\\r\\n          [classes.noClick]: onRowClick == null,\\r\\n        })}\\r\\n        variant=\\\"body\\\"\\r\\n        style={{ height: rowHeight }}\\r\\n        align={(columnIndex != null && columns[columnIndex].numeric) || false ? 'right' : 'left'}>\\r\\n        {cellData}\\r\\n      </TableCell>\\r\\n    );\\r\\n  };\\r\\n\\r\\n  headerRenderer = ({ label, columnIndex }) => {\\r\\n    const { headerHeight, columns, classes } = this.props;\\r\\n\\r\\n    return (\\r\\n      <TableCell\\r\\n        component=\\\"div\\\"\\r\\n        className={clsx(classes.tableCell, classes.flexContainer, classes.noClick)}\\r\\n        variant=\\\"head\\\"\\r\\n        style={{ height: headerHeight }}\\r\\n        align={columns[columnIndex].numeric || false ? 'right' : 'left'}>\\r\\n        <span>{label}</span>\\r\\n      </TableCell>\\r\\n    );\\r\\n  };\\r\\n\\r\\n  render() {\\r\\n    const { classes, columns, rowHeight, headerHeight, ...tableProps } = this.props;\\r\\n    return (\\r\\n      <AutoSizer>\\r\\n        {({ height, width }) => (\\r\\n          <Table\\r\\n            height={height}\\r\\n            width={width}\\r\\n            rowHeight={rowHeight}\\r\\n            gridStyle={{\\r\\n              direction: 'inherit',\\r\\n            }}\\r\\n            headerHeight={headerHeight}\\r\\n            className={classes.table}\\r\\n            {...tableProps}\\r\\n            rowClassName={this.getRowClassName}>\\r\\n            {columns.map(({ dataKey, ...other }, index) => {\\r\\n              return (\\r\\n                <Column\\r\\n                  key={dataKey}\\r\\n                  headerRenderer={headerProps =>\\r\\n                    this.headerRenderer({\\r\\n                      ...headerProps,\\r\\n                      columnIndex: index,\\r\\n                    })\\r\\n                  }\\r\\n                  className={classes.flexContainer}\\r\\n                  cellRenderer={this.cellRenderer}\\r\\n                  dataKey={dataKey}\\r\\n                  {...other}\\r\\n                />\\r\\n              );\\r\\n            })}\\r\\n          </Table>\\r\\n        )}\\r\\n      </AutoSizer>\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\\r\\nMuiVirtualizedTable.propTypes = {\\r\\n  classes: PropTypes.object.isRequired,\\r\\n  columns: PropTypes.arrayOf(\\r\\n    PropTypes.shape({\\r\\n      dataKey: PropTypes.string.isRequired,\\r\\n      label: PropTypes.string.isRequired,\\r\\n      numeric: PropTypes.bool,\\r\\n      width: PropTypes.number.isRequired,\\r\\n    }),\\r\\n  ).isRequired,\\r\\n  headerHeight: PropTypes.number,\\r\\n  onRowClick: PropTypes.func,\\r\\n  rowHeight: PropTypes.number,\\r\\n};\\r\\n\\r\\nconst VirtualizedTable = withStyles(styles)(MuiVirtualizedTable);\\r\\n\\r\\n// ---\\r\\n\\r\\nconst sample = [\\r\\n  ['Frozen yoghurt', 159, 6.0, 24, 4.0],\\r\\n  ['Ice cream sandwich', 237, 9.0, 37, 4.3],\\r\\n  ['Eclair', 262, 16.0, 24, 6.0],\\r\\n  ['Cupcake', 305, 3.7, 67, 4.3],\\r\\n  ['Gingerbread', 356, 16.0, 49, 3.9],\\r\\n];\\r\\n\\r\\nfunction createData(id, dessert, calories, fat, carbs, protein) {\\r\\n  return { id, dessert, calories, fat, carbs, protein };\\r\\n}\\r\\n\\r\\nconst rows = [];\\r\\n\\r\\nfor (let i = 0; i < 200; i += 1) {\\r\\n  const randomSelection = sample[Math.floor(Math.random() * sample.length)];\\r\\n  rows.push(createData(i, ...randomSelection));\\r\\n}\\r\\n\\r\\nexport default function ReactVirtualizedTable() {\\r\\n  return (\\r\\n    <Paper style={{ height: 400, width: '100%' }}>\\r\\n      <VirtualizedTable\\r\\n        rowCount={rows.length}\\r\\n        rowGetter={({ index }) => rows[index]}\\r\\n        columns={[\\r\\n          {\\r\\n            width: 200,\\r\\n            label: 'Dessert',\\r\\n            dataKey: 'dessert',\\r\\n          },\\r\\n          {\\r\\n            width: 120,\\r\\n            label: 'Calories\\\\u00A0(g)',\\r\\n            dataKey: 'calories',\\r\\n            numeric: true,\\r\\n          },\\r\\n          {\\r\\n            width: 120,\\r\\n            label: 'Fat\\\\u00A0(g)',\\r\\n            dataKey: 'fat',\\r\\n            numeric: true,\\r\\n          },\\r\\n          {\\r\\n            width: 120,\\r\\n            label: 'Carbs\\\\u00A0(g)',\\r\\n            dataKey: 'carbs',\\r\\n            numeric: true,\\r\\n          },\\r\\n          {\\r\\n            width: 120,\\r\\n            label: 'Protein\\\\u00A0(g)',\\r\\n            dataKey: 'protein',\\r\\n            numeric: true,\\r\\n          },\\r\\n        ]}\\r\\n      />\\r\\n    </Paper>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport { lighten, makeStyles } from '@material-ui/core/styles';\\r\\nimport Table from '@material-ui/core/Table';\\r\\nimport TableBody from '@material-ui/core/TableBody';\\r\\nimport TableCell from '@material-ui/core/TableCell';\\r\\nimport TableContainer from '@material-ui/core/TableContainer';\\r\\nimport TableHead from '@material-ui/core/TableHead';\\r\\nimport TableRow from '@material-ui/core/TableRow';\\r\\nimport Paper from '@material-ui/core/Paper';\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  root: {\\r\\n    backgroundColor: lighten(theme.palette.background.paper, 0.1),\\r\\n  },\\r\\n  table: {\\r\\n    minWidth: 650,\\r\\n  },\\r\\n}));\\r\\n\\r\\nfunction createData(name, calories, fat, carbs, protein) {\\r\\n  return { name, calories, fat, carbs, protein };\\r\\n}\\r\\n\\r\\nconst rows = [\\r\\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\\r\\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\\r\\n  createData('Eclair', 262, 16.0, 24, 6.0),\\r\\n  createData('Cupcake', 305, 3.7, 67, 4.3),\\r\\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\\r\\n];\\r\\n\\r\\nexport default function SimpleTable() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  return (\\r\\n    <TableContainer component={Paper} className={classes.root}>\\r\\n      <Table className={classes.table} aria-label=\\\"simple table\\\">\\r\\n        <TableHead>\\r\\n          <TableRow>\\r\\n            <TableCell>Dessert (100g serving)</TableCell>\\r\\n            <TableCell align=\\\"right\\\">Calories</TableCell>\\r\\n            <TableCell align=\\\"right\\\">Fat&nbsp;(g)</TableCell>\\r\\n            <TableCell align=\\\"right\\\">Carbs&nbsp;(g)</TableCell>\\r\\n            <TableCell align=\\\"right\\\">Protein&nbsp;(g)</TableCell>\\r\\n          </TableRow>\\r\\n        </TableHead>\\r\\n        <TableBody>\\r\\n          {rows.map(row => (\\r\\n            <TableRow key={row.name}>\\r\\n              <TableCell component=\\\"th\\\" scope=\\\"row\\\">\\r\\n                {row.name}\\r\\n              </TableCell>\\r\\n              <TableCell align=\\\"right\\\">{row.calories}</TableCell>\\r\\n              <TableCell align=\\\"right\\\">{row.fat}</TableCell>\\r\\n              <TableCell align=\\\"right\\\">{row.carbs}</TableCell>\\r\\n              <TableCell align=\\\"right\\\">{row.protein}</TableCell>\\r\\n            </TableRow>\\r\\n          ))}\\r\\n        </TableBody>\\r\\n      </Table>\\r\\n    </TableContainer>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport { lighten, makeStyles } from '@material-ui/core/styles';\\r\\nimport Table from '@material-ui/core/Table';\\r\\nimport TableBody from '@material-ui/core/TableBody';\\r\\nimport TableCell from '@material-ui/core/TableCell';\\r\\nimport TableContainer from '@material-ui/core/TableContainer';\\r\\nimport TableHead from '@material-ui/core/TableHead';\\r\\nimport TableRow from '@material-ui/core/TableRow';\\r\\nimport Paper from '@material-ui/core/Paper';\\r\\n\\r\\nconst TAX_RATE = 0.07;\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  root: {\\r\\n    backgroundColor: lighten(theme.palette.background.paper, 0.1),\\r\\n  },\\r\\n  table: {\\r\\n    minWidth: 700,\\r\\n  },\\r\\n}));\\r\\n\\r\\nfunction ccyFormat(num) {\\r\\n  return `${num.toFixed(2)}`;\\r\\n}\\r\\n\\r\\nfunction priceRow(qty, unit) {\\r\\n  return qty * unit;\\r\\n}\\r\\n\\r\\nfunction createRow(desc, qty, unit) {\\r\\n  const price = priceRow(qty, unit);\\r\\n  return { desc, qty, unit, price };\\r\\n}\\r\\n\\r\\nfunction subtotal(items) {\\r\\n  return items.map(({ price }) => price).reduce((sum, i) => sum + i, 0);\\r\\n}\\r\\n\\r\\nconst rows = [\\r\\n  createRow('Paperclips (Box)', 100, 1.15),\\r\\n  createRow('Paper (Case)', 10, 45.99),\\r\\n  createRow('Waste Basket', 2, 17.99),\\r\\n];\\r\\n\\r\\nconst invoiceSubtotal = subtotal(rows);\\r\\nconst invoiceTaxes = TAX_RATE * invoiceSubtotal;\\r\\nconst invoiceTotal = invoiceTaxes + invoiceSubtotal;\\r\\n\\r\\nexport default function SpanningTable() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  return (\\r\\n    <TableContainer component={Paper} className={classes.root}>\\r\\n      <Table className={classes.table} aria-label=\\\"spanning table\\\">\\r\\n        <TableHead>\\r\\n          <TableRow>\\r\\n            <TableCell align=\\\"center\\\" colSpan={3}>\\r\\n              Details\\r\\n            </TableCell>\\r\\n            <TableCell align=\\\"right\\\">Price</TableCell>\\r\\n          </TableRow>\\r\\n          <TableRow>\\r\\n            <TableCell>Desc</TableCell>\\r\\n            <TableCell align=\\\"right\\\">Qty.</TableCell>\\r\\n            <TableCell align=\\\"right\\\">Unit</TableCell>\\r\\n            <TableCell align=\\\"right\\\">Sum</TableCell>\\r\\n          </TableRow>\\r\\n        </TableHead>\\r\\n        <TableBody>\\r\\n          {rows.map(row => (\\r\\n            <TableRow key={row.desc}>\\r\\n              <TableCell>{row.desc}</TableCell>\\r\\n              <TableCell align=\\\"right\\\">{row.qty}</TableCell>\\r\\n              <TableCell align=\\\"right\\\">{row.unit}</TableCell>\\r\\n              <TableCell align=\\\"right\\\">{ccyFormat(row.price)}</TableCell>\\r\\n            </TableRow>\\r\\n          ))}\\r\\n\\r\\n          <TableRow>\\r\\n            <TableCell rowSpan={3} />\\r\\n            <TableCell colSpan={2}>Subtotal</TableCell>\\r\\n            <TableCell align=\\\"right\\\">{ccyFormat(invoiceSubtotal)}</TableCell>\\r\\n          </TableRow>\\r\\n          <TableRow>\\r\\n            <TableCell>Tax</TableCell>\\r\\n            <TableCell align=\\\"right\\\">{`${(TAX_RATE * 100).toFixed(0)} %`}</TableCell>\\r\\n            <TableCell align=\\\"right\\\">{ccyFormat(invoiceTaxes)}</TableCell>\\r\\n          </TableRow>\\r\\n          <TableRow>\\r\\n            <TableCell colSpan={2}>Total</TableCell>\\r\\n            <TableCell align=\\\"right\\\">{ccyFormat(invoiceTotal)}</TableCell>\\r\\n          </TableRow>\\r\\n        </TableBody>\\r\\n      </Table>\\r\\n    </TableContainer>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport { lighten, makeStyles } from '@material-ui/core/styles';\\r\\nimport Paper from '@material-ui/core/Paper';\\r\\nimport Table from '@material-ui/core/Table';\\r\\nimport TableBody from '@material-ui/core/TableBody';\\r\\nimport TableCell from '@material-ui/core/TableCell';\\r\\nimport TableContainer from '@material-ui/core/TableContainer';\\r\\nimport TableHead from '@material-ui/core/TableHead';\\r\\nimport TablePagination from '@material-ui/core/TablePagination';\\r\\nimport TableRow from '@material-ui/core/TableRow';\\r\\n\\r\\nconst columns = [\\r\\n  { id: 'name', label: 'Name', minWidth: 170 },\\r\\n  { id: 'code', label: 'ISO\\\\u00a0Code', minWidth: 100 },\\r\\n  {\\r\\n    id: 'population',\\r\\n    label: 'Population',\\r\\n    minWidth: 170,\\r\\n    align: 'right',\\r\\n    format: value => value.toLocaleString('en-US'),\\r\\n  },\\r\\n  {\\r\\n    id: 'size',\\r\\n    label: 'Size\\\\u00a0(km\\\\u00b2)',\\r\\n    minWidth: 170,\\r\\n    align: 'right',\\r\\n    format: value => value.toLocaleString('en-US'),\\r\\n  },\\r\\n  {\\r\\n    id: 'density',\\r\\n    label: 'Density',\\r\\n    minWidth: 170,\\r\\n    align: 'right',\\r\\n    format: value => value.toFixed(2),\\r\\n  },\\r\\n];\\r\\n\\r\\nfunction createData(name, code, population, size) {\\r\\n  const density = population / size;\\r\\n  return { name, code, population, size, density };\\r\\n}\\r\\n\\r\\nconst rows = [\\r\\n  createData('India', 'IN', 1324171354, 3287263),\\r\\n  createData('China', 'CN', 1403500365, 9596961),\\r\\n  createData('Italy', 'IT', 60483973, 301340),\\r\\n  createData('United States', 'US', 327167434, 9833520),\\r\\n  createData('Canada', 'CA', 37602103, 9984670),\\r\\n  createData('Australia', 'AU', 25475400, 7692024),\\r\\n  createData('Germany', 'DE', 83019200, 357578),\\r\\n  createData('Ireland', 'IE', 4857000, 70273),\\r\\n  createData('Mexico', 'MX', 126577691, 1972550),\\r\\n  createData('Japan', 'JP', 126317000, 377973),\\r\\n  createData('France', 'FR', 67022000, 640679),\\r\\n  createData('United Kingdom', 'GB', 67545757, 242495),\\r\\n  createData('Russia', 'RU', 146793744, 17098246),\\r\\n  createData('Nigeria', 'NG', 200962417, 923768),\\r\\n  createData('Brazil', 'BR', 210147125, 8515767),\\r\\n];\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  root: {\\r\\n    width: '100%',\\r\\n    backgroundColor: lighten(theme.palette.background.paper, 0.1),\\r\\n  },\\r\\n  container: {\\r\\n    maxHeight: 440,\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function StickyHeadTable() {\\r\\n  const classes = useStyles();\\r\\n  const [page, setPage] = React.useState(0);\\r\\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\\r\\n\\r\\n  const handleChangePage = (event, newPage) => {\\r\\n    setPage(newPage);\\r\\n  };\\r\\n\\r\\n  const handleChangeRowsPerPage = event => {\\r\\n    setRowsPerPage(+event.target.value);\\r\\n    setPage(0);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Paper className={classes.root}>\\r\\n      <TableContainer className={classes.container}>\\r\\n        <Table stickyHeader aria-label=\\\"sticky table\\\">\\r\\n          <TableHead>\\r\\n            <TableRow>\\r\\n              {columns.map(column => (\\r\\n                <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\\r\\n                  {column.label}\\r\\n                </TableCell>\\r\\n              ))}\\r\\n            </TableRow>\\r\\n          </TableHead>\\r\\n          <TableBody>\\r\\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\\r\\n              return (\\r\\n                <TableRow hover role=\\\"checkbox\\\" tabIndex={-1} key={row.code}>\\r\\n                  {columns.map(column => {\\r\\n                    const value = row[column.id];\\r\\n                    return (\\r\\n                      <TableCell key={column.id} align={column.align}>\\r\\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\\r\\n                      </TableCell>\\r\\n                    );\\r\\n                  })}\\r\\n                </TableRow>\\r\\n              );\\r\\n            })}\\r\\n          </TableBody>\\r\\n        </Table>\\r\\n      </TableContainer>\\r\\n      <TablePagination\\r\\n        rowsPerPageOptions={[10, 25, 100]}\\r\\n        component=\\\"div\\\"\\r\\n        count={rows.length}\\r\\n        rowsPerPage={rowsPerPage}\\r\\n        page={page}\\r\\n        onPageChange={handleChangePage}\\r\\n        onRowsPerPageChange={handleChangeRowsPerPage}\\r\\n      />\\r\\n    </Paper>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nexport default function SimpleTable() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper} className={classes.root}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Dessert (100g serving)</TableCell>\r\n            <TableCell align=\"right\">Calories</TableCell>\r\n            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map(row => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.calories}</TableCell>\r\n              <TableCell align=\"right\">{row.fat}</TableCell>\r\n              <TableCell align=\"right\">{row.carbs}</TableCell>\r\n              <TableCell align=\"right\">{row.protein}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nexport default function DenseTable() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper} className={classes.root}>\r\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Dessert (100g serving)</TableCell>\r\n            <TableCell align=\"right\">Calories</TableCell>\r\n            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map(row => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.calories}</TableCell>\r\n              <TableCell align=\"right\">{row.fat}</TableCell>\r\n              <TableCell align=\"right\">{row.carbs}</TableCell>\r\n              <TableCell align=\"right\">{row.protein}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport { Box } from '@material-ui/core';\r\nimport { alpha } from '@material-ui/core/styles';\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Donut', 452, 25.0, 51, 4.9),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n  createData('KitKat', 518, 26.0, 65, 7.0),\r\n  createData('Lollipop', 392, 0.2, 98, 0.0),\r\n  createData('Marshmallow', 318, 0, 81, 2.0),\r\n  createData('Nougat', 360, 19.0, 9, 37.0),\r\n  createData('Oreo', 437, 18.0, 63, 4.0),\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: 'name',\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Dessert (100g serving)',\r\n  },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === headCell.id ? order : false}>\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}>\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>{order === 'desc' ? 'sorted descending' : 'sorted ascending'}</span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(4),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: alpha(theme.palette.secondary.light, 0.15),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}>\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(4),\r\n    backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map(n => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = event => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = name => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\">\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={event => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}>\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox checked={isItemSelected} inputProps={{ 'aria-labelledby': labelId }} />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.calories}</TableCell>\r\n                      <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel control={<Switch checked={dense} onChange={handleChangeDense} />} label=\"Dense padding\" />\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nexport default function CustomizedTables() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>Dessert (100g serving)</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Calories</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Fat&nbsp;(g)</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Carbs&nbsp;(g)</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Protein&nbsp;(g)</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map(row => (\r\n            <StyledTableRow key={row.name}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.calories}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.fat}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.carbs}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.protein}</StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = event => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = event => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = event => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = event => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\">\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7),\r\n  createData('Donut', 452, 25.0),\r\n  createData('Eclair', 262, 16.0),\r\n  createData('Frozen yoghurt', 159, 6.0),\r\n  createData('Gingerbread', 356, 16.0),\r\n  createData('Honeycomb', 408, 3.2),\r\n  createData('Ice cream sandwich', 237, 9.0),\r\n  createData('Jelly Bean', 375, 0.0),\r\n  createData('KitKat', 518, 26.0),\r\n  createData('Lollipop', 392, 0.2),\r\n  createData('Marshmallow', 318, 0),\r\n  createData('Nougat', 360, 19.0),\r\n  createData('Oreo', 437, 18.0),\r\n].sort((a, b) => (a.calories < b.calories ? -1 : 1));\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n}));\r\n\r\nexport default function CustomPaginationActionsTable() {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <TableContainer component={Paper} className={classes.root}>\r\n      <Table className={classes.table} aria-label=\"custom pagination table\">\r\n        <TableBody>\r\n          {(rowsPerPage > 0 ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : rows).map(row => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell style={{ width: 160 }} align=\"right\">\r\n                {row.calories}\r\n              </TableCell>\r\n              <TableCell style={{ width: 160 }} align=\"right\">\r\n                {row.fat}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n\r\n          {emptyRows > 0 && (\r\n            <TableRow style={{ height: 53 * emptyRows }}>\r\n              <TableCell colSpan={6} />\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n              colSpan={3}\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: { 'aria-label': 'rows per page' },\r\n                native: true,\r\n              }}\r\n              onPageChange={handleChangePage}\r\n              onRowsPerPageChange={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst columns = [\r\n  { id: 'name', label: 'Name', minWidth: 170 },\r\n  { id: 'code', label: 'ISO\\u00a0Code', minWidth: 100 },\r\n  {\r\n    id: 'population',\r\n    label: 'Population',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: value => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'size',\r\n    label: 'Size\\u00a0(km\\u00b2)',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: value => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'density',\r\n    label: 'Density',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: value => value.toFixed(2),\r\n  },\r\n];\r\n\r\nfunction createData(name, code, population, size) {\r\n  const density = population / size;\r\n  return { name, code, population, size, density };\r\n}\r\n\r\nconst rows = [\r\n  createData('India', 'IN', 1324171354, 3287263),\r\n  createData('China', 'CN', 1403500365, 9596961),\r\n  createData('Italy', 'IT', 60483973, 301340),\r\n  createData('United States', 'US', 327167434, 9833520),\r\n  createData('Canada', 'CA', 37602103, 9984670),\r\n  createData('Australia', 'AU', 25475400, 7692024),\r\n  createData('Germany', 'DE', 83019200, 357578),\r\n  createData('Ireland', 'IE', 4857000, 70273),\r\n  createData('Mexico', 'MX', 126577691, 1972550),\r\n  createData('Japan', 'JP', 126317000, 377973),\r\n  createData('France', 'FR', 67022000, 640679),\r\n  createData('United Kingdom', 'GB', 67545757, 242495),\r\n  createData('Russia', 'RU', 146793744, 17098246),\r\n  createData('Nigeria', 'NG', 200962417, 923768),\r\n  createData('Brazil', 'BR', 210147125, 8515767),\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n}));\r\n\r\nexport default function StickyHeadTable() {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                  {columns.map(column => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}>\r\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\n\r\nconst useRowStyles = makeStyles({\r\n  root: {\r\n    '& > *': {\r\n      borderBottom: 'unset',\r\n    },\r\n  },\r\n});\r\n\r\nfunction createData(name, calories, fat, carbs, protein, price) {\r\n  return {\r\n    name,\r\n    calories,\r\n    fat,\r\n    carbs,\r\n    protein,\r\n    price,\r\n    history: [\r\n      { date: '2020-01-05', customerId: '11091700', amount: 3 },\r\n      { date: '2020-01-02', customerId: 'Anonymous', amount: 1 },\r\n    ],\r\n  };\r\n}\r\n\r\nfunction Row(props) {\r\n  const { row } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n  const classes = useRowStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow className={classes.root}>\r\n        <TableCell>\r\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {row.name}\r\n        </TableCell>\r\n        <TableCell align=\"right\">{row.calories}</TableCell>\r\n        <TableCell align=\"right\">{row.fat}</TableCell>\r\n        <TableCell align=\"right\">{row.carbs}</TableCell>\r\n        <TableCell align=\"right\">{row.protein}</TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box margin={1}>\r\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                History\r\n              </Typography>\r\n              <Table size=\"small\" aria-label=\"purchases\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Date</TableCell>\r\n                    <TableCell>Customer</TableCell>\r\n                    <TableCell align=\"right\">Amount</TableCell>\r\n                    <TableCell align=\"right\">Total price ($)</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {row.history.map(historyRow => (\r\n                    <TableRow key={historyRow.date}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {historyRow.date}\r\n                      </TableCell>\r\n                      <TableCell>{historyRow.customerId}</TableCell>\r\n                      <TableCell align=\"right\">{historyRow.amount}</TableCell>\r\n                      <TableCell align=\"right\">{Math.round(historyRow.amount * row.price * 100) / 100}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nRow.propTypes = {\r\n  row: PropTypes.shape({\r\n    calories: PropTypes.number.isRequired,\r\n    carbs: PropTypes.number.isRequired,\r\n    fat: PropTypes.number.isRequired,\r\n    history: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        amount: PropTypes.number.isRequired,\r\n        customerId: PropTypes.string.isRequired,\r\n        date: PropTypes.string.isRequired,\r\n      }),\r\n    ).isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    protein: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 3.99),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 4.99),\r\n  createData('Eclair', 262, 16.0, 24, 6.0, 3.79),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3, 2.5),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 1.5),\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n  },\r\n}));\r\n\r\nexport default function CollapsibleTable() {\r\n  const classes = useStyles();\r\n  return (\r\n    <TableContainer component={Paper} className={classes.root}>\r\n      <Table aria-label=\"collapsible table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell />\r\n            <TableCell>Dessert (100g serving)</TableCell>\r\n            <TableCell align=\"right\">Calories</TableCell>\r\n            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map(row => (\r\n            <Row key={row.name} row={row} />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst TAX_RATE = 0.07;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n}));\r\n\r\nfunction ccyFormat(num) {\r\n  return `${num.toFixed(2)}`;\r\n}\r\n\r\nfunction priceRow(qty, unit) {\r\n  return qty * unit;\r\n}\r\n\r\nfunction createRow(desc, qty, unit) {\r\n  const price = priceRow(qty, unit);\r\n  return { desc, qty, unit, price };\r\n}\r\n\r\nfunction subtotal(items) {\r\n  return items.map(({ price }) => price).reduce((sum, i) => sum + i, 0);\r\n}\r\n\r\nconst rows = [\r\n  createRow('Paperclips (Box)', 100, 1.15),\r\n  createRow('Paper (Case)', 10, 45.99),\r\n  createRow('Waste Basket', 2, 17.99),\r\n];\r\n\r\nconst invoiceSubtotal = subtotal(rows);\r\nconst invoiceTaxes = TAX_RATE * invoiceSubtotal;\r\nconst invoiceTotal = invoiceTaxes + invoiceSubtotal;\r\n\r\nexport default function SpanningTable() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper} className={classes.root}>\r\n      <Table className={classes.table} aria-label=\"spanning table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\" colSpan={3}>\r\n              Details\r\n            </TableCell>\r\n            <TableCell align=\"right\">Price</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>Desc</TableCell>\r\n            <TableCell align=\"right\">Qty.</TableCell>\r\n            <TableCell align=\"right\">Unit</TableCell>\r\n            <TableCell align=\"right\">Sum</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map(row => (\r\n            <TableRow key={row.desc}>\r\n              <TableCell>{row.desc}</TableCell>\r\n              <TableCell align=\"right\">{row.qty}</TableCell>\r\n              <TableCell align=\"right\">{row.unit}</TableCell>\r\n              <TableCell align=\"right\">{ccyFormat(row.price)}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n\r\n          <TableRow>\r\n            <TableCell rowSpan={3} />\r\n            <TableCell colSpan={2}>Subtotal</TableCell>\r\n            <TableCell align=\"right\">{ccyFormat(invoiceSubtotal)}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>Tax</TableCell>\r\n            <TableCell align=\"right\">{`${(TAX_RATE * 100).toFixed(0)} %`}</TableCell>\r\n            <TableCell align=\"right\">{ccyFormat(invoiceTaxes)}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell colSpan={2}>Total</TableCell>\r\n            <TableCell align=\"right\">{ccyFormat(invoiceTotal)}</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { AutoSizer, Column, Table } from 'react-virtualized';\r\nimport { alpha } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n  flexContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    boxSizing: 'border-box',\r\n  },\r\n  table: {\r\n    // temporary right-to-left patch, waiting for\r\n    // https://github.com/bvaughn/react-virtualized/issues/454\r\n    '& .ReactVirtualized__Table__headerRow': {\r\n      flip: false,\r\n      paddingRight: theme.direction === 'rtl' ? '0 !important' : undefined,\r\n    },\r\n  },\r\n  tableRow: {\r\n    cursor: 'pointer',\r\n  },\r\n  tableRowHover: {\r\n    '&:hover': {\r\n      backgroundColor: alpha(theme.palette.common.black, 0.05),\r\n    },\r\n  },\r\n  tableCell: {\r\n    flex: 1,\r\n  },\r\n  noClick: {\r\n    cursor: 'initial',\r\n  },\r\n});\r\n\r\nclass MuiVirtualizedTable extends React.PureComponent {\r\n  static defaultProps = {\r\n    headerHeight: 48,\r\n    rowHeight: 48,\r\n  };\r\n\r\n  getRowClassName = ({ index }) => {\r\n    const { classes, onRowClick } = this.props;\r\n\r\n    return clsx(classes.tableRow, classes.flexContainer, {\r\n      [classes.tableRowHover]: index !== -1 && onRowClick != null,\r\n    });\r\n  };\r\n\r\n  cellRenderer = ({ cellData, columnIndex }) => {\r\n    const { columns, classes, rowHeight, onRowClick } = this.props;\r\n    return (\r\n      <TableCell\r\n        component=\"div\"\r\n        className={clsx(classes.tableCell, classes.flexContainer, {\r\n          [classes.noClick]: onRowClick == null,\r\n        })}\r\n        variant=\"body\"\r\n        style={{ height: rowHeight }}\r\n        align={(columnIndex != null && columns[columnIndex].numeric) || false ? 'right' : 'left'}>\r\n        {cellData}\r\n      </TableCell>\r\n    );\r\n  };\r\n\r\n  headerRenderer = ({ label, columnIndex }) => {\r\n    const { headerHeight, columns, classes } = this.props;\r\n\r\n    return (\r\n      <TableCell\r\n        component=\"div\"\r\n        className={clsx(classes.tableCell, classes.flexContainer, classes.noClick)}\r\n        variant=\"head\"\r\n        style={{ height: headerHeight }}\r\n        align={columns[columnIndex].numeric || false ? 'right' : 'left'}>\r\n        <span>{label}</span>\r\n      </TableCell>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { classes, columns, rowHeight, headerHeight, ...tableProps } = this.props;\r\n    return (\r\n      <AutoSizer>\r\n        {({ height, width }) => (\r\n          <Table\r\n            height={height}\r\n            width={width}\r\n            rowHeight={rowHeight}\r\n            gridStyle={{\r\n              direction: 'inherit',\r\n            }}\r\n            headerHeight={headerHeight}\r\n            className={classes.table}\r\n            {...tableProps}\r\n            rowClassName={this.getRowClassName}>\r\n            {columns.map(({ dataKey, ...other }, index) => {\r\n              return (\r\n                <Column\r\n                  key={dataKey}\r\n                  headerRenderer={headerProps =>\r\n                    this.headerRenderer({\r\n                      ...headerProps,\r\n                      columnIndex: index,\r\n                    })\r\n                  }\r\n                  className={classes.flexContainer}\r\n                  cellRenderer={this.cellRenderer}\r\n                  dataKey={dataKey}\r\n                  {...other}\r\n                />\r\n              );\r\n            })}\r\n          </Table>\r\n        )}\r\n      </AutoSizer>\r\n    );\r\n  }\r\n}\r\n\r\nMuiVirtualizedTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  columns: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      dataKey: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      numeric: PropTypes.bool,\r\n      width: PropTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  headerHeight: PropTypes.number,\r\n  onRowClick: PropTypes.func,\r\n  rowHeight: PropTypes.number,\r\n};\r\n\r\nconst VirtualizedTable = withStyles(styles)(MuiVirtualizedTable);\r\n\r\n// ---\r\n\r\nconst sample = [\r\n  ['Frozen yoghurt', 159, 6.0, 24, 4.0],\r\n  ['Ice cream sandwich', 237, 9.0, 37, 4.3],\r\n  ['Eclair', 262, 16.0, 24, 6.0],\r\n  ['Cupcake', 305, 3.7, 67, 4.3],\r\n  ['Gingerbread', 356, 16.0, 49, 3.9],\r\n];\r\n\r\nfunction createData(id, dessert, calories, fat, carbs, protein) {\r\n  return { id, dessert, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [];\r\n\r\nfor (let i = 0; i < 200; i += 1) {\r\n  const randomSelection = sample[Math.floor(Math.random() * sample.length)];\r\n  rows.push(createData(i, ...randomSelection));\r\n}\r\n\r\nexport default function ReactVirtualizedTable() {\r\n  return (\r\n    <Paper style={{ height: 400, width: '100%' }}>\r\n      <VirtualizedTable\r\n        rowCount={rows.length}\r\n        rowGetter={({ index }) => rows[index]}\r\n        columns={[\r\n          {\r\n            width: 200,\r\n            label: 'Dessert',\r\n            dataKey: 'dessert',\r\n          },\r\n          {\r\n            width: 120,\r\n            label: 'Calories\\u00A0(g)',\r\n            dataKey: 'calories',\r\n            numeric: true,\r\n          },\r\n          {\r\n            width: 120,\r\n            label: 'Fat\\u00A0(g)',\r\n            dataKey: 'fat',\r\n            numeric: true,\r\n          },\r\n          {\r\n            width: 120,\r\n            label: 'Carbs\\u00A0(g)',\r\n            dataKey: 'carbs',\r\n            numeric: true,\r\n          },\r\n          {\r\n            width: 120,\r\n            label: 'Protein\\u00A0(g)',\r\n            dataKey: 'protein',\r\n            numeric: true,\r\n          },\r\n        ]}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { forwardRef } from 'react';\r\nimport MaterialTable from 'material-table';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { lighten } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n  },\r\n}));\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nexport default function MaterialTableDemo() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    columns: [\r\n      { title: 'Name', field: 'name' },\r\n      { title: 'Surname', field: 'surname' },\r\n      {\r\n        title: 'Birth Year',\r\n        field: 'birthYear',\r\n        type: 'numeric',\r\n      },\r\n      {\r\n        title: 'Birth Place',\r\n        field: 'birthCity',\r\n        lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\r\n      },\r\n    ],\r\n    data: [\r\n      {\r\n        name: 'Mehmet',\r\n        surname: 'Baran',\r\n        birthYear: 1987,\r\n        birthCity: 63,\r\n      },\r\n      {\r\n        name: 'Zerya Betül',\r\n        surname: 'Baran',\r\n        birthYear: 2017,\r\n        birthCity: 34,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return (\r\n    <MaterialTable\r\n      className={classes.root}\r\n      icons={tableIcons}\r\n      title=\"Editable Example\"\r\n      columns={state.columns}\r\n      data={state.data}\r\n      editable={{\r\n        onRowAdd: newData =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              setState(prevState => {\r\n                const data = [...prevState.data];\r\n                data.push(newData);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              if (oldData) {\r\n                setState(prevState => {\r\n                  const data = [...prevState.data];\r\n                  data[data.indexOf(oldData)] = newData;\r\n                  return { ...prevState, data };\r\n                });\r\n              }\r\n            }, 600);\r\n          }),\r\n        onRowDelete: oldData =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              setState(prevState => {\r\n                const data = [...prevState.data];\r\n                data.splice(data.indexOf(oldData), 1);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n];\r\n\r\nexport default function AcccessibleTable() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper} className={classes.root}>\r\n      <Table className={classes.table} aria-label=\"caption table\">\r\n        <caption>A basic table example with a caption</caption>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Dessert (100g serving)</TableCell>\r\n            <TableCell align=\"right\">Calories</TableCell>\r\n            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map(row => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.calories}</TableCell>\r\n              <TableCell align=\"right\">{row.fat}</TableCell>\r\n              <TableCell align=\"right\">{row.carbs}</TableCell>\r\n              <TableCell align=\"right\">{row.protein}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { MuiComponentDemo } from '../../../../@jumbo/components/PageComponents';\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CodeViewerCard from '../../../../@jumbo/components/Common/CodeViewerCard';\r\nimport SimpleTable from './demo/SimpleTable';\r\nimport DenseTable from './demo/DenseTable';\r\nimport EnhancedTable from './demo/EnhancedTable';\r\nimport CustomizedTables from './demo/CustomizedTables';\r\nimport CustomPaginationActionsTable from './demo/CustomPaginationActionsTable';\r\nimport StickyHeadTable from './demo/StickyHeadTable';\r\nimport CollapsibleTable from './demo/CollapsibleTable';\r\nimport SpanningTable from './demo/SpanningTable';\r\nimport ReactVirtualizedTable from './demo/ReactVirtualizedTable';\r\nimport MaterialTableDemo from './demo/MaterialTableDemo';\r\nimport AcccessibleTable from './demo/AcccessibleTable';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  section: {\r\n    '&:not(:last-child)': {\r\n      marginBottom: theme.typography.pxToRem(32),\r\n    },\r\n  },\r\n  sectionHeading: {\r\n    marginBottom: theme.typography.pxToRem(16),\r\n  },\r\n}));\r\n\r\nconst requireRaw = require.context('!raw-loader!../../../../@fake-db/mui-components/table', false, /\\.(txt|js|md|tsx)$/);\r\n\r\nconst demos = [\r\n  {\r\n    label: 'Simple Table',\r\n    link: 'simple-table',\r\n    component: <SimpleTable />,\r\n    filename: './SimpleTable.txt',\r\n  },\r\n  {\r\n    label: 'Dense Table',\r\n    link: 'dense-table',\r\n    component: <DenseTable />,\r\n    filename: './DenseTable.txt',\r\n  },\r\n  {\r\n    label: 'Sorting & Selecting',\r\n    link: 'sorting-and-selecting',\r\n    component: <EnhancedTable />,\r\n    filename: './EnhancedTable.txt',\r\n  },\r\n  {\r\n    label: 'Customized tables',\r\n    link: 'customized-tables',\r\n    component: <CustomizedTables />,\r\n    filename: './CustomizedTables.txt',\r\n  },\r\n  {\r\n    label: 'Custom pagination actions',\r\n    link: 'custom-pagination-actions',\r\n    component: <CustomPaginationActionsTable />,\r\n    filename: './CustomPaginationActionsTable.txt',\r\n  },\r\n  {\r\n    label: 'Fixed header',\r\n    link: 'fixed-header',\r\n    component: <StickyHeadTable />,\r\n    filename: './StickyHeadTable.txt',\r\n  },\r\n  {\r\n    label: 'Collapsible table',\r\n    link: 'collapsible-table',\r\n    component: <CollapsibleTable />,\r\n    filename: './CollapsibleTable.txt',\r\n  },\r\n  {\r\n    label: 'Spanning Table',\r\n    link: 'spanning-table',\r\n    component: <SpanningTable />,\r\n    filename: './SpanningTable.txt',\r\n  },\r\n  {\r\n    label: 'Virtualized Table',\r\n    link: 'virtualized-table',\r\n    component: <ReactVirtualizedTable />,\r\n    filename: './ReactVirtualizedTable.txt',\r\n  },\r\n  {\r\n    label: 'Complementary projects',\r\n    link: 'complementary-projects',\r\n    component: <MaterialTableDemo />,\r\n    filename: './MaterialTableDemo.txt',\r\n  },\r\n  {\r\n    label: 'Caption',\r\n    link: 'caption',\r\n    component: <AcccessibleTable />,\r\n    filename: './AcccessibleTable.txt',\r\n  },\r\n];\r\n\r\nexport default function Table() {\r\n  const classes = useStyles();\r\n  return (\r\n    <MuiComponentDemo pageTitle=\"Table\" menus={demos}>\r\n      {demos.map((menu, index) => (\r\n        <Box key={index} id={menu.link} className={classes.section}>\r\n          <Typography component=\"h3\" variant=\"inherit\" className={classes.sectionHeading}>\r\n            {menu.label}\r\n          </Typography>\r\n          <CodeViewerCard code={requireRaw(menu.filename).default} language=\"jsx\">\r\n            {menu.component}\r\n          </CodeViewerCard>\r\n        </Box>\r\n      ))}\r\n    </MuiComponentDemo>\r\n  );\r\n}\r\n"],"sourceRoot":""}