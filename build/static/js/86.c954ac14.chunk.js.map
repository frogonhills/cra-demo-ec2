{"version":3,"sources":["@jumbo/components/PageComponents/layouts/PageContainer.js","@jumbo/components/PageComponents/PageHeader.js","@jumbo/components/PageComponents/PageBreadcrumbs/index.js","@jumbo/components/PageComponents/layouts/CorematComponentDemo.js","@jumbo/components/PageComponents/layouts/MuiComponentDemo.js","@jumbo/components/PageComponents/layouts/ComponentsDemo.js","webpack:///./src/@fake-db/mui-components/stepper sync nonrecursive ./node_modules/raw-loader/dist/cjs.js \\.(txt|js|md|tsx)$?a69d","@fake-db/mui-components/stepper/CustomizedSteppers.txt","@fake-db/mui-components/stepper/DotsMobileStepper.txt","@fake-db/mui-components/stepper/HorizontalLabelPositionBelowStepper.txt","@fake-db/mui-components/stepper/HorizontalLinearStepper.txt","@fake-db/mui-components/stepper/HorizontalNonLinearAlternativeLabelStepper.txt","@fake-db/mui-components/stepper/HorizontalNonLinearStepper.txt","@fake-db/mui-components/stepper/HorizontalNonLinearStepperWithError.txt","@fake-db/mui-components/stepper/ProgressMobileStepper.txt","@fake-db/mui-components/stepper/SwipeableTextMobileStepper.txt","@fake-db/mui-components/stepper/TextMobileStepper.txt","@fake-db/mui-components/stepper/VerticalLinearStepper.txt","routes/Components/MuiComponents/Stepper/demo/HorizontalLinearStepper.js","routes/Components/MuiComponents/Stepper/demo/HorizontalLabelPositionBelowStepper.js","routes/Components/MuiComponents/Stepper/demo/CustomizedSteppers.js","routes/Components/MuiComponents/Stepper/demo/HorizontalNonLinearStepper.js","routes/Components/MuiComponents/Stepper/demo/HorizontalNonLinearAlternativeLabelStepper.js","routes/Components/MuiComponents/Stepper/demo/HorizontalNonLinearStepperWithError.js","routes/Components/MuiComponents/Stepper/demo/VerticalLinearStepper.js","routes/Components/MuiComponents/Stepper/demo/TextMobileStepper.js","routes/Components/MuiComponents/Stepper/demo/SwipeableTextMobileStepper.js","routes/Components/MuiComponents/Stepper/demo/DotsMobileStepper.js","routes/Components/MuiComponents/Stepper/demo/ProgressMobileStepper.js","routes/Components/MuiComponents/Stepper/index.js"],"names":["useStyles","makeStyles","pageFull","width","PageContainer","heading","breadcrumbs","children","className","restProps","classes","in","direction","mountOnEnter","unmountOnExit","clsx","breadcrumbComponent","items","theme","pageHeaderRoot","display","flexDirection","breakpoints","up","alignItems","titleRoot","down","marginBottom","PageHeader","rest","Box","mb","xs","md","lg","Typography","component","variant","ml","sm","textSm","fontSize","linkBlock","color","PageBreadcrumbs","Breadcrumbs","aria-label","map","item","index","isActive","key","label","to","link","CorematComponentDemo","SourceCodeComponent","SettingsComponent","GridContainer","Grid","CmtCard","MuiComponentDemo","pageTitle","menus","ComponentsDemo","root","flexWrap","contentArea","paddingRight","typography","pxToRem","contentSidebar","height","position","top","overflowY","flexShrink","xsDown","menu","dense","button","href","primary","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","marginRight","spacing","instructions","marginTop","HorizontalLinearStepper","React","useState","activeStep","setActiveStep","Set","skipped","setSkipped","steps","isStepOptional","step","isStepSkipped","has","Stepper","stepProps","labelProps","optional","completed","Step","StepLabel","length","Button","onClick","getStepContent","disabled","prevActiveStep","prevSkipped","newSkipped","values","add","delete","backButton","HorizontalLabelPositionBelowStepper","alternativeLabel","stepIndex","QontoConnector","withStyles","left","right","active","borderColor","line","borderTopWidth","borderRadius","StepConnector","useQontoStepIconStyles","circle","backgroundColor","zIndex","QontoStepIcon","props","ColorlibConnector","backgroundImage","border","useColorlibStepIconStyles","justifyContent","boxShadow","ColorlibStepIcon","icons","1","2","3","String","icon","CustomizedSteppers","connector","StepIconComponent","HorizontalNonLinearStepper","setCompleted","totalSteps","completedSteps","allStepsCompleted","handleNext","newActiveStep","findIndex","i","nonLinear","StepButton","newCompleted","HorizontalNonLinearAlternativeLabelStepper","skippedSteps","size","handleStep","isStepComplete","buttonProps","HorizontalNonLinearStepperWithError","error","actionsContainer","resetContainer","padding","VerticalLinearStepper","handleBack","orientation","StepContent","Paper","square","elevation","tutorialSteps","imgPath","maxWidth","flexGrow","header","paddingLeft","palette","background","default","img","overflow","TextMobileStepper","useTheme","maxSteps","src","alt","MobileStepper","nextButton","AutoPlaySwipeableViews","autoPlay","SwipeableViews","SwipeableTextMobileStepper","axis","onChangeIndex","enableMouseEvents","Math","abs","DotsMobileStepper","ProgressMobileStepper","section","sectionHeading","requireRaw","require","demos","filename","CodeViewerCard","language"],"mappings":"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","file":"static/js/86.c954ac14.chunk.js","sourcesContent":["import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { PageBreadcrumbs, PageHeader } from '../index';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  pageFull: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst PageContainer = ({ heading, breadcrumbs, children, className, restProps }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Slide in={true} direction=\"up\" mountOnEnter unmountOnExit>\r\n      <Box className={clsx(classes.pageFull, className)} {...restProps}>\r\n        {(heading || breadcrumbs) && (\r\n          <PageHeader heading={heading} breadcrumbComponent={breadcrumbs && <PageBreadcrumbs items={breadcrumbs} />} />\r\n        )}\r\n        {children}\r\n      </Box>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default PageContainer;\r\n","import React from 'react';\r\nimport { Box, makeStyles, Typography } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageHeaderRoot: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.up('sm')]: {\r\n      alignItems: 'center',\r\n      flexDirection: 'row',\r\n    },\r\n  },\r\n  titleRoot: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginBottom: 10,\r\n    },\r\n  },\r\n}));\r\n\r\nconst PageHeader = ({ heading, breadcrumbComponent, children, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={clsx(classes.pageHeaderRoot, 'page-header')} mb={{ xs: 5, md: 6, lg: 8 }} {...rest}>\r\n      <Typography component=\"div\" variant=\"h1\" className={clsx(classes.titleRoot, 'title')}>\r\n        {heading}\r\n      </Typography>\r\n      <Box ml={{ sm: 'auto' }}>{breadcrumbComponent}</Box>\r\n\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import React from 'react';\r\nimport { Breadcrumbs, makeStyles } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { NavLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  textSm: {\r\n    fontSize: 12,\r\n  },\r\n  linkBlock: {\r\n    display: 'block',\r\n    color: 'inherit',\r\n  },\r\n}));\r\n\r\nconst PageBreadcrumbs = ({ items, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Breadcrumbs className=\"bread-crumbs\" aria-label=\"breadcrumb {...rest}\">\r\n      {items.map((item, index) =>\r\n        item.isActive ? (\r\n          <Typography key={index} className={classes.textSm} color=\"textPrimary\">\r\n            {item.label}\r\n          </Typography>\r\n        ) : (\r\n          <NavLink key={index} className={clsx(classes.textSm, classes.linkBlock)} color=\"inherit\" to={item.link || '/'}>\r\n            {item.label}\r\n          </NavLink>\r\n        ),\r\n      )}\r\n    </Breadcrumbs>\r\n  );\r\n};\r\n\r\nexport default PageBreadcrumbs;\r\n","import React from 'react';\r\nimport { Box, Grid } from '@material-ui/core';\r\nimport CmtCard from '../../../../@coremat/CmtCard';\r\nimport { PageHeader } from '../index';\r\nimport GridContainer from '../../GridContainer';\r\nimport PageContainer from './PageContainer';\r\n\r\nconst CorematComponentDemo = ({ SourceCodeComponent, SettingsComponent, children }) => {\r\n  return (\r\n    <PageContainer>\r\n      <GridContainer>\r\n        <Grid item xs={12} md={7}>\r\n          <PageHeader heading=\"Preview\" />\r\n          <Box mb={8}>{children}</Box>\r\n          <CmtCard>{SourceCodeComponent}</CmtCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={5}>\r\n          {SettingsComponent}\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default CorematComponentDemo;\r\n","import React from 'react';\r\nimport ComponentsDemo from './ComponentsDemo';\r\n\r\nconst MuiComponentDemo = ({ pageTitle, menus, children }) => {\r\n  const breadcrumbs = [\r\n    { label: 'Home', link: '/' },\r\n    { label: 'Material UI Components', link: '/components/mui' },\r\n    { label: pageTitle, isActive: true },\r\n  ];\r\n  return (\r\n    <ComponentsDemo pageTitle={pageTitle} breadcrumbs={breadcrumbs} menus={menus}>\r\n      {children}\r\n    </ComponentsDemo>\r\n  );\r\n};\r\nexport default MuiComponentDemo;\r\n","import React from 'react';\r\nimport { Box, Hidden, List, ListItem, ListItemText, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PageContainer from './PageContainer';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  contentArea: {\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingRight: theme.typography.pxToRem(30),\r\n      width: `calc(100% - ${theme.typography.pxToRem(175)})`,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingRight: theme.typography.pxToRem(54),\r\n    },\r\n  },\r\n  contentSidebar: {\r\n    width: theme.typography.pxToRem(175),\r\n    height: `calc(100vh - ${theme.typography.pxToRem(102)})`,\r\n    position: 'sticky',\r\n    top: 30,\r\n    overflowY: 'auto',\r\n    flexShrink: 0,\r\n  },\r\n}));\r\n\r\nconst ComponentsDemo = ({ pageTitle, menus, breadcrumbs, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <PageContainer heading={pageTitle} breadcrumbs={breadcrumbs}>\r\n      <Box className={classes.root}>\r\n        <Box className={classes.contentArea}>{children}</Box>\r\n        <Hidden xsDown>\r\n          <Box className={classes.contentSidebar}>\r\n            <Typography component=\"h4\" variant=\"h4\">\r\n              Contents\r\n            </Typography>\r\n            <List>\r\n              {menus.map((menu, index) => (\r\n                <ListItem key={index} dense button component=\"a\" href={`#${menu.link}`}>\r\n                  <ListItemText primary={menu.label} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Box>\r\n        </Hidden>\r\n      </Box>\r\n    </PageContainer>\r\n  );\r\n};\r\nexport default ComponentsDemo;\r\n","var map = {\n\t\"./CustomizedSteppers.txt\": 2626,\n\t\"./DotsMobileStepper.txt\": 2627,\n\t\"./HorizontalLabelPositionBelowStepper.txt\": 2628,\n\t\"./HorizontalLinearStepper.txt\": 2629,\n\t\"./HorizontalNonLinearAlternativeLabelStepper.txt\": 2630,\n\t\"./HorizontalNonLinearStepper.txt\": 2631,\n\t\"./HorizontalNonLinearStepperWithError.txt\": 2632,\n\t\"./ProgressMobileStepper.txt\": 2633,\n\t\"./SwipeableTextMobileStepper.txt\": 2634,\n\t\"./TextMobileStepper.txt\": 2635,\n\t\"./VerticalLinearStepper.txt\": 2636\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2625;","export default \"import React from 'react';\\r\\nimport PropTypes from 'prop-types';\\r\\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\\r\\nimport clsx from 'clsx';\\r\\nimport Stepper from '@material-ui/core/Stepper';\\r\\nimport Step from '@material-ui/core/Step';\\r\\nimport StepLabel from '@material-ui/core/StepLabel';\\r\\nimport Check from '@material-ui/icons/Check';\\r\\nimport SettingsIcon from '@material-ui/icons/Settings';\\r\\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\\r\\nimport VideoLabelIcon from '@material-ui/icons/VideoLabel';\\r\\nimport StepConnector from '@material-ui/core/StepConnector';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport Typography from '@material-ui/core/Typography';\\r\\nimport { Box } from '@material-ui/core';\\r\\n\\r\\nconst QontoConnector = withStyles({\\r\\n  alternativeLabel: {\\r\\n    top: 10,\\r\\n    left: 'calc(-50% + 16px)',\\r\\n    right: 'calc(50% + 16px)',\\r\\n  },\\r\\n  active: {\\r\\n    '& $line': {\\r\\n      borderColor: '#784af4',\\r\\n    },\\r\\n  },\\r\\n  completed: {\\r\\n    '& $line': {\\r\\n      borderColor: '#784af4',\\r\\n    },\\r\\n  },\\r\\n  line: {\\r\\n    borderColor: '#eaeaf0',\\r\\n    borderTopWidth: 3,\\r\\n    borderRadius: 1,\\r\\n  },\\r\\n})(StepConnector);\\r\\n\\r\\nconst useQontoStepIconStyles = makeStyles({\\r\\n  root: {\\r\\n    color: '#eaeaf0',\\r\\n    display: 'flex',\\r\\n    height: 22,\\r\\n    alignItems: 'center',\\r\\n  },\\r\\n  active: {\\r\\n    color: '#784af4',\\r\\n  },\\r\\n  circle: {\\r\\n    width: 8,\\r\\n    height: 8,\\r\\n    borderRadius: '50%',\\r\\n    backgroundColor: 'currentColor',\\r\\n  },\\r\\n  completed: {\\r\\n    color: '#784af4',\\r\\n    zIndex: 1,\\r\\n    fontSize: 18,\\r\\n  },\\r\\n});\\r\\n\\r\\nfunction QontoStepIcon(props) {\\r\\n  const classes = useQontoStepIconStyles();\\r\\n  const { active, completed } = props;\\r\\n\\r\\n  return (\\r\\n    <Box\\r\\n      className={clsx(classes.root, {\\r\\n        [classes.active]: active,\\r\\n      })}>\\r\\n      {completed ? <Check className={classes.completed} /> : <Box className={classes.circle} />}\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\\r\\nQontoStepIcon.propTypes = {\\r\\n  /**\\r\\n   * Whether this step is active.\\r\\n   */\\r\\n  active: PropTypes.bool,\\r\\n  /**\\r\\n   * Mark the step as completed. Is passed to child components.\\r\\n   */\\r\\n  completed: PropTypes.bool,\\r\\n};\\r\\n\\r\\nconst ColorlibConnector = withStyles({\\r\\n  alternativeLabel: {\\r\\n    top: 22,\\r\\n  },\\r\\n  active: {\\r\\n    '& $line': {\\r\\n      backgroundImage: 'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\\r\\n    },\\r\\n  },\\r\\n  completed: {\\r\\n    '& $line': {\\r\\n      backgroundImage: 'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\\r\\n    },\\r\\n  },\\r\\n  line: {\\r\\n    height: 3,\\r\\n    border: 0,\\r\\n    backgroundColor: '#eaeaf0',\\r\\n    borderRadius: 1,\\r\\n  },\\r\\n})(StepConnector);\\r\\n\\r\\nconst useColorlibStepIconStyles = makeStyles({\\r\\n  root: {\\r\\n    backgroundColor: '#ccc',\\r\\n    zIndex: 1,\\r\\n    color: '#fff',\\r\\n    width: 50,\\r\\n    height: 50,\\r\\n    display: 'flex',\\r\\n    borderRadius: '50%',\\r\\n    justifyContent: 'center',\\r\\n    alignItems: 'center',\\r\\n  },\\r\\n  active: {\\r\\n    backgroundImage: 'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\\r\\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\\r\\n  },\\r\\n  completed: {\\r\\n    backgroundImage: 'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\\r\\n  },\\r\\n});\\r\\n\\r\\nfunction ColorlibStepIcon(props) {\\r\\n  const classes = useColorlibStepIconStyles();\\r\\n  const { active, completed } = props;\\r\\n\\r\\n  const icons = {\\r\\n    1: <SettingsIcon />,\\r\\n    2: <GroupAddIcon />,\\r\\n    3: <VideoLabelIcon />,\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box\\r\\n      className={clsx(classes.root, {\\r\\n        [classes.active]: active,\\r\\n        [classes.completed]: completed,\\r\\n      })}>\\r\\n      {icons[String(props.icon)]}\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\\r\\nColorlibStepIcon.propTypes = {\\r\\n  /**\\r\\n   * Whether this step is active.\\r\\n   */\\r\\n  active: PropTypes.bool,\\r\\n  /**\\r\\n   * Mark the step as completed. Is passed to child components.\\r\\n   */\\r\\n  completed: PropTypes.bool,\\r\\n  /**\\r\\n   * The label displayed in the step icon.\\r\\n   */\\r\\n  icon: PropTypes.node,\\r\\n};\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  root: {\\r\\n    width: '100%',\\r\\n  },\\r\\n  button: {\\r\\n    marginRight: theme.spacing(1),\\r\\n  },\\r\\n  instructions: {\\r\\n    marginTop: theme.spacing(1),\\r\\n    marginBottom: theme.spacing(1),\\r\\n  },\\r\\n}));\\r\\n\\r\\nfunction getSteps() {\\r\\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\\r\\n}\\r\\n\\r\\nfunction getStepContent(step) {\\r\\n  switch (step) {\\r\\n    case 0:\\r\\n      return 'Select campaign settings...';\\r\\n    case 1:\\r\\n      return 'What is an ad group anyways?';\\r\\n    case 2:\\r\\n      return 'This is the bit I really care about!';\\r\\n    default:\\r\\n      return 'Unknown step';\\r\\n  }\\r\\n}\\r\\n\\r\\nexport default function CustomizedSteppers() {\\r\\n  const classes = useStyles();\\r\\n  const [activeStep, setActiveStep] = React.useState(1);\\r\\n  const steps = getSteps();\\r\\n\\r\\n  const handleNext = () => {\\r\\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\\r\\n  };\\r\\n\\r\\n  const handleBack = () => {\\r\\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\\r\\n  };\\r\\n\\r\\n  const handleReset = () => {\\r\\n    setActiveStep(0);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box className={classes.root}>\\r\\n      <Stepper alternativeLabel activeStep={activeStep}>\\r\\n        {steps.map(label => (\\r\\n          <Step key={label}>\\r\\n            <StepLabel>{label}</StepLabel>\\r\\n          </Step>\\r\\n        ))}\\r\\n      </Stepper>\\r\\n      <Stepper alternativeLabel activeStep={activeStep} connector={<QontoConnector />}>\\r\\n        {steps.map(label => (\\r\\n          <Step key={label}>\\r\\n            <StepLabel StepIconComponent={QontoStepIcon}>{label}</StepLabel>\\r\\n          </Step>\\r\\n        ))}\\r\\n      </Stepper>\\r\\n      <Stepper alternativeLabel activeStep={activeStep} connector={<ColorlibConnector />}>\\r\\n        {steps.map(label => (\\r\\n          <Step key={label}>\\r\\n            <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\\r\\n          </Step>\\r\\n        ))}\\r\\n      </Stepper>\\r\\n      <Box>\\r\\n        {activeStep === steps.length ? (\\r\\n          <Box>\\r\\n            <Typography className={classes.instructions}>All steps completed - you&apos;re finished</Typography>\\r\\n            <Button onClick={handleReset} className={classes.button}>\\r\\n              Reset\\r\\n            </Button>\\r\\n          </Box>\\r\\n        ) : (\\r\\n          <Box>\\r\\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\\r\\n            <Box>\\r\\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\\r\\n                Back\\r\\n              </Button>\\r\\n              <Button variant=\\\"contained\\\" color=\\\"primary\\\" onClick={handleNext} className={classes.button}>\\r\\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\\r\\n              </Button>\\r\\n            </Box>\\r\\n          </Box>\\r\\n        )}\\r\\n      </Box>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\\r\\nimport MobileStepper from '@material-ui/core/MobileStepper';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\\r\\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\\r\\n\\r\\nconst useStyles = makeStyles({\\r\\n  root: {\\r\\n    maxWidth: 400,\\r\\n    flexGrow: 1,\\r\\n  },\\r\\n});\\r\\n\\r\\nexport default function DotsMobileStepper() {\\r\\n  const classes = useStyles();\\r\\n  const theme = useTheme();\\r\\n  const [activeStep, setActiveStep] = React.useState(0);\\r\\n\\r\\n  const handleNext = () => {\\r\\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\\r\\n  };\\r\\n\\r\\n  const handleBack = () => {\\r\\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <MobileStepper\\r\\n      variant=\\\"dots\\\"\\r\\n      steps={6}\\r\\n      position=\\\"static\\\"\\r\\n      activeStep={activeStep}\\r\\n      className={classes.root}\\r\\n      nextButton={\\r\\n        <Button size=\\\"small\\\" onClick={handleNext} disabled={activeStep === 5}>\\r\\n          Next\\r\\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\\r\\n        </Button>\\r\\n      }\\r\\n      backButton={\\r\\n        <Button size=\\\"small\\\" onClick={handleBack} disabled={activeStep === 0}>\\r\\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\\r\\n          Back\\r\\n        </Button>\\r\\n      }\\r\\n    />\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport { makeStyles } from '@material-ui/core/styles';\\r\\nimport Stepper from '@material-ui/core/Stepper';\\r\\nimport Step from '@material-ui/core/Step';\\r\\nimport StepLabel from '@material-ui/core/StepLabel';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport Typography from '@material-ui/core/Typography';\\r\\nimport { Box } from '@material-ui/core';\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  root: {\\r\\n    width: '100%',\\r\\n  },\\r\\n  backButton: {\\r\\n    marginRight: theme.spacing(2),\\r\\n  },\\r\\n  instructions: {\\r\\n    marginTop: theme.spacing(2),\\r\\n    marginBottom: theme.spacing(2),\\r\\n  },\\r\\n}));\\r\\n\\r\\nfunction getSteps() {\\r\\n  return ['Select master blaster campaign settings', 'Create an ad group', 'Create an ad'];\\r\\n}\\r\\n\\r\\nfunction getStepContent(stepIndex) {\\r\\n  switch (stepIndex) {\\r\\n    case 0:\\r\\n      return 'Select campaign settings...';\\r\\n    case 1:\\r\\n      return 'What is an ad group anyways?';\\r\\n    case 2:\\r\\n      return 'This is the bit I really care about!';\\r\\n    default:\\r\\n      return 'Unknown stepIndex';\\r\\n  }\\r\\n}\\r\\n\\r\\nexport default function HorizontalLabelPositionBelowStepper() {\\r\\n  const classes = useStyles();\\r\\n  const [activeStep, setActiveStep] = React.useState(0);\\r\\n  const steps = getSteps();\\r\\n\\r\\n  const handleNext = () => {\\r\\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\\r\\n  };\\r\\n\\r\\n  const handleBack = () => {\\r\\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\\r\\n  };\\r\\n\\r\\n  const handleReset = () => {\\r\\n    setActiveStep(0);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box className={classes.root}>\\r\\n      <Stepper activeStep={activeStep} alternativeLabel>\\r\\n        {steps.map(label => (\\r\\n          <Step key={label}>\\r\\n            <StepLabel>{label}</StepLabel>\\r\\n          </Step>\\r\\n        ))}\\r\\n      </Stepper>\\r\\n      <Box>\\r\\n        {activeStep === steps.length ? (\\r\\n          <Box>\\r\\n            <Typography className={classes.instructions}>All steps completed</Typography>\\r\\n            <Button onClick={handleReset}>Reset</Button>\\r\\n          </Box>\\r\\n        ) : (\\r\\n          <Box>\\r\\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\\r\\n            <Box>\\r\\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.backButton}>\\r\\n                Back\\r\\n              </Button>\\r\\n              <Button variant=\\\"contained\\\" color=\\\"primary\\\" onClick={handleNext}>\\r\\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\\r\\n              </Button>\\r\\n            </Box>\\r\\n          </Box>\\r\\n        )}\\r\\n      </Box>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport { makeStyles } from '@material-ui/core/styles';\\r\\nimport Stepper from '@material-ui/core/Stepper';\\r\\nimport Step from '@material-ui/core/Step';\\r\\nimport StepLabel from '@material-ui/core/StepLabel';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport Typography from '@material-ui/core/Typography';\\r\\nimport { Box } from '@material-ui/core';\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  root: {\\r\\n    width: '100%',\\r\\n  },\\r\\n  button: {\\r\\n    marginRight: theme.spacing(2),\\r\\n  },\\r\\n  instructions: {\\r\\n    marginTop: theme.spacing(2),\\r\\n    marginBottom: theme.spacing(2),\\r\\n  },\\r\\n}));\\r\\n\\r\\nfunction getSteps() {\\r\\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\\r\\n}\\r\\n\\r\\nfunction getStepContent(step) {\\r\\n  switch (step) {\\r\\n    case 0:\\r\\n      return 'Select campaign settings...';\\r\\n    case 1:\\r\\n      return 'What is an ad group anyways?';\\r\\n    case 2:\\r\\n      return 'This is the bit I really care about!';\\r\\n    default:\\r\\n      return 'Unknown step';\\r\\n  }\\r\\n}\\r\\n\\r\\nexport default function HorizontalLinearStepper() {\\r\\n  const classes = useStyles();\\r\\n  const [activeStep, setActiveStep] = React.useState(0);\\r\\n  const [skipped, setSkipped] = React.useState(new Set());\\r\\n  const steps = getSteps();\\r\\n\\r\\n  const isStepOptional = step => {\\r\\n    return step === 1;\\r\\n  };\\r\\n\\r\\n  const isStepSkipped = step => {\\r\\n    return skipped.has(step);\\r\\n  };\\r\\n\\r\\n  const handleNext = () => {\\r\\n    let newSkipped = skipped;\\r\\n    if (isStepSkipped(activeStep)) {\\r\\n      newSkipped = new Set(newSkipped.values());\\r\\n      newSkipped.delete(activeStep);\\r\\n    }\\r\\n\\r\\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\\r\\n    setSkipped(newSkipped);\\r\\n  };\\r\\n\\r\\n  const handleBack = () => {\\r\\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\\r\\n  };\\r\\n\\r\\n  const handleSkip = () => {\\r\\n    if (!isStepOptional(activeStep)) {\\r\\n      // You probably want to guard against something like this,\\r\\n      // it should never occur unless someone's actively trying to break something.\\r\\n      throw new Error(\\\"You can't skip a step that isn't optional.\\\");\\r\\n    }\\r\\n\\r\\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\\r\\n    setSkipped(prevSkipped => {\\r\\n      const newSkipped = new Set(prevSkipped.values());\\r\\n      newSkipped.add(activeStep);\\r\\n      return newSkipped;\\r\\n    });\\r\\n  };\\r\\n\\r\\n  const handleReset = () => {\\r\\n    setActiveStep(0);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box className={classes.root}>\\r\\n      <Stepper activeStep={activeStep}>\\r\\n        {steps.map((label, index) => {\\r\\n          const stepProps = {};\\r\\n          const labelProps = {};\\r\\n          if (isStepOptional(index)) {\\r\\n            labelProps.optional = <Typography variant=\\\"caption\\\">Optional</Typography>;\\r\\n          }\\r\\n          if (isStepSkipped(index)) {\\r\\n            stepProps.completed = false;\\r\\n          }\\r\\n          return (\\r\\n            <Step key={label} {...stepProps}>\\r\\n              <StepLabel {...labelProps}>{label}</StepLabel>\\r\\n            </Step>\\r\\n          );\\r\\n        })}\\r\\n      </Stepper>\\r\\n      <Box>\\r\\n        {activeStep === steps.length ? (\\r\\n          <Box>\\r\\n            <Typography className={classes.instructions}>All steps completed - you&apos;re finished</Typography>\\r\\n            <Button onClick={handleReset} className={classes.button}>\\r\\n              Reset\\r\\n            </Button>\\r\\n          </Box>\\r\\n        ) : (\\r\\n          <Box>\\r\\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\\r\\n            <Box>\\r\\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\\r\\n                Back\\r\\n              </Button>\\r\\n              {isStepOptional(activeStep) && (\\r\\n                <Button variant=\\\"contained\\\" color=\\\"primary\\\" onClick={handleSkip} className={classes.button}>\\r\\n                  Skip\\r\\n                </Button>\\r\\n              )}\\r\\n\\r\\n              <Button variant=\\\"contained\\\" color=\\\"primary\\\" onClick={handleNext} className={classes.button}>\\r\\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\\r\\n              </Button>\\r\\n            </Box>\\r\\n          </Box>\\r\\n        )}\\r\\n      </Box>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport { makeStyles } from '@material-ui/core/styles';\\r\\nimport Stepper from '@material-ui/core/Stepper';\\r\\nimport Step from '@material-ui/core/Step';\\r\\nimport StepButton from '@material-ui/core/StepButton';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport Typography from '@material-ui/core/Typography';\\r\\nimport { Box } from '@material-ui/core';\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  root: {\\r\\n    width: '100%',\\r\\n  },\\r\\n  button: {\\r\\n    marginRight: theme.spacing(2),\\r\\n  },\\r\\n  backButton: {\\r\\n    marginRight: theme.spacing(2),\\r\\n  },\\r\\n  completed: {\\r\\n    display: 'inline-block',\\r\\n  },\\r\\n  instructions: {\\r\\n    marginTop: theme.spacing(2),\\r\\n    marginBottom: theme.spacing(2),\\r\\n  },\\r\\n}));\\r\\n\\r\\nfunction getSteps() {\\r\\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\\r\\n}\\r\\n\\r\\nfunction getStepContent(step) {\\r\\n  switch (step) {\\r\\n    case 0:\\r\\n      return 'Step 1: Select campaign settings...';\\r\\n    case 1:\\r\\n      return 'Step 2: What is an ad group anyways?';\\r\\n    case 2:\\r\\n      return 'Step 3: This is the bit I really care about!';\\r\\n    default:\\r\\n      return 'Unknown step';\\r\\n  }\\r\\n}\\r\\n\\r\\nexport default function HorizontalNonLinearAlternativeLabelStepper() {\\r\\n  const classes = useStyles();\\r\\n  const [activeStep, setActiveStep] = React.useState(0);\\r\\n  const [completed, setCompleted] = React.useState(new Set());\\r\\n  const [skipped, setSkipped] = React.useState(new Set());\\r\\n  const steps = getSteps();\\r\\n\\r\\n  const totalSteps = () => {\\r\\n    return getSteps().length;\\r\\n  };\\r\\n\\r\\n  const isStepOptional = step => {\\r\\n    return step === 1;\\r\\n  };\\r\\n\\r\\n  const handleSkip = () => {\\r\\n    if (!isStepOptional(activeStep)) {\\r\\n      // You probably want to guard against something like this\\r\\n      // it should never occur unless someone's actively trying to break something.\\r\\n      throw new Error(\\\"You can't skip a step that isn't optional.\\\");\\r\\n    }\\r\\n\\r\\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\\r\\n    setSkipped(prevSkipped => {\\r\\n      const newSkipped = new Set(prevSkipped.values());\\r\\n      newSkipped.add(activeStep);\\r\\n      return newSkipped;\\r\\n    });\\r\\n  };\\r\\n\\r\\n  const skippedSteps = () => {\\r\\n    return skipped.size;\\r\\n  };\\r\\n\\r\\n  const completedSteps = () => {\\r\\n    return completed.size;\\r\\n  };\\r\\n\\r\\n  const allStepsCompleted = () => {\\r\\n    return completedSteps() === totalSteps() - skippedSteps();\\r\\n  };\\r\\n\\r\\n  const isLastStep = () => {\\r\\n    return activeStep === totalSteps() - 1;\\r\\n  };\\r\\n\\r\\n  const handleNext = () => {\\r\\n    const newActiveStep =\\r\\n      isLastStep() && !allStepsCompleted()\\r\\n        ? // It's the last step, but not all steps have been completed\\r\\n          // find the first step that has been completed\\r\\n          steps.findIndex((step, i) => !completed.has(i))\\r\\n        : activeStep + 1;\\r\\n\\r\\n    setActiveStep(newActiveStep);\\r\\n  };\\r\\n\\r\\n  const handleBack = () => {\\r\\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\\r\\n  };\\r\\n\\r\\n  const handleStep = step => () => {\\r\\n    setActiveStep(step);\\r\\n  };\\r\\n\\r\\n  const handleComplete = () => {\\r\\n    const newCompleted = new Set(completed);\\r\\n    newCompleted.add(activeStep);\\r\\n    setCompleted(newCompleted);\\r\\n\\r\\n    /**\\r\\n     * Sigh... it would be much nicer to replace the following if conditional with\\r\\n     * `if (!this.allStepsComplete())` however state is not set when we do this,\\r\\n     * thus we have to resort to not being very DRY.\\r\\n     */\\r\\n    if (completed.size !== totalSteps() - skippedSteps()) {\\r\\n      handleNext();\\r\\n    }\\r\\n  };\\r\\n\\r\\n  const handleReset = () => {\\r\\n    setActiveStep(0);\\r\\n    setCompleted(new Set());\\r\\n    setSkipped(new Set());\\r\\n  };\\r\\n\\r\\n  const isStepSkipped = step => {\\r\\n    return skipped.has(step);\\r\\n  };\\r\\n\\r\\n  function isStepComplete(step) {\\r\\n    return completed.has(step);\\r\\n  }\\r\\n\\r\\n  return (\\r\\n    <Box className={classes.root}>\\r\\n      <Stepper alternativeLabel nonLinear activeStep={activeStep}>\\r\\n        {steps.map((label, index) => {\\r\\n          const stepProps = {};\\r\\n          const buttonProps = {};\\r\\n          if (isStepOptional(index)) {\\r\\n            buttonProps.optional = <Typography variant=\\\"caption\\\">Optional</Typography>;\\r\\n          }\\r\\n          if (isStepSkipped(index)) {\\r\\n            stepProps.completed = false;\\r\\n          }\\r\\n          return (\\r\\n            <Step key={label} {...stepProps}>\\r\\n              <StepButton onClick={handleStep(index)} completed={isStepComplete(index)} {...buttonProps}>\\r\\n                {label}\\r\\n              </StepButton>\\r\\n            </Step>\\r\\n          );\\r\\n        })}\\r\\n      </Stepper>\\r\\n      <Box>\\r\\n        {allStepsCompleted() ? (\\r\\n          <Box>\\r\\n            <Typography className={classes.instructions}>All steps completed - you&apos;re finished</Typography>\\r\\n            <Button onClick={handleReset}>Reset</Button>\\r\\n          </Box>\\r\\n        ) : (\\r\\n          <Box>\\r\\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\\r\\n            <Box>\\r\\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\\r\\n                Back\\r\\n              </Button>\\r\\n              <Button variant=\\\"contained\\\" color=\\\"primary\\\" onClick={handleNext} className={classes.button}>\\r\\n                Next\\r\\n              </Button>\\r\\n              {isStepOptional(activeStep) && !completed.has(activeStep) && (\\r\\n                <Button variant=\\\"contained\\\" color=\\\"primary\\\" onClick={handleSkip} className={classes.button}>\\r\\n                  Skip\\r\\n                </Button>\\r\\n              )}\\r\\n\\r\\n              {activeStep !== steps.length &&\\r\\n                (completed.has(activeStep) ? (\\r\\n                  <Typography variant=\\\"caption\\\" className={classes.completed}>\\r\\n                    Step {activeStep + 1} already completed\\r\\n                  </Typography>\\r\\n                ) : (\\r\\n                  <Button variant=\\\"contained\\\" color=\\\"primary\\\" onClick={handleComplete}>\\r\\n                    {completedSteps() === totalSteps() - 1 ? 'Finish' : 'Complete Step'}\\r\\n                  </Button>\\r\\n                ))}\\r\\n            </Box>\\r\\n          </Box>\\r\\n        )}\\r\\n      </Box>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport { makeStyles } from '@material-ui/core/styles';\\r\\nimport Stepper from '@material-ui/core/Stepper';\\r\\nimport Step from '@material-ui/core/Step';\\r\\nimport StepButton from '@material-ui/core/StepButton';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport Typography from '@material-ui/core/Typography';\\r\\nimport { Box } from '@material-ui/core';\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  root: {\\r\\n    width: '100%',\\r\\n  },\\r\\n  button: {\\r\\n    marginRight: theme.spacing(2),\\r\\n  },\\r\\n  completed: {\\r\\n    display: 'inline-block',\\r\\n  },\\r\\n  instructions: {\\r\\n    marginTop: theme.spacing(2),\\r\\n    marginBottom: theme.spacing(2),\\r\\n  },\\r\\n}));\\r\\n\\r\\nfunction getSteps() {\\r\\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\\r\\n}\\r\\n\\r\\nfunction getStepContent(step) {\\r\\n  switch (step) {\\r\\n    case 0:\\r\\n      return 'Step 1: Select campaign settings...';\\r\\n    case 1:\\r\\n      return 'Step 2: What is an ad group anyways?';\\r\\n    case 2:\\r\\n      return 'Step 3: This is the bit I really care about!';\\r\\n    default:\\r\\n      return 'Unknown step';\\r\\n  }\\r\\n}\\r\\n\\r\\nexport default function HorizontalNonLinearStepper() {\\r\\n  const classes = useStyles();\\r\\n  const [activeStep, setActiveStep] = React.useState(0);\\r\\n  const [completed, setCompleted] = React.useState({});\\r\\n  const steps = getSteps();\\r\\n\\r\\n  const totalSteps = () => {\\r\\n    return steps.length;\\r\\n  };\\r\\n\\r\\n  const completedSteps = () => {\\r\\n    return Object.keys(completed).length;\\r\\n  };\\r\\n\\r\\n  const isLastStep = () => {\\r\\n    return activeStep === totalSteps() - 1;\\r\\n  };\\r\\n\\r\\n  const allStepsCompleted = () => {\\r\\n    return completedSteps() === totalSteps();\\r\\n  };\\r\\n\\r\\n  const handleNext = () => {\\r\\n    const newActiveStep =\\r\\n      isLastStep() && !allStepsCompleted()\\r\\n        ? // It's the last step, but not all steps have been completed,\\r\\n          // find the first step that has been completed\\r\\n          steps.findIndex((step, i) => !(i in completed))\\r\\n        : activeStep + 1;\\r\\n    setActiveStep(newActiveStep);\\r\\n  };\\r\\n\\r\\n  const handleBack = () => {\\r\\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\\r\\n  };\\r\\n\\r\\n  const handleStep = step => () => {\\r\\n    setActiveStep(step);\\r\\n  };\\r\\n\\r\\n  const handleComplete = () => {\\r\\n    const newCompleted = completed;\\r\\n    newCompleted[activeStep] = true;\\r\\n    setCompleted(newCompleted);\\r\\n    handleNext();\\r\\n  };\\r\\n\\r\\n  const handleReset = () => {\\r\\n    setActiveStep(0);\\r\\n    setCompleted({});\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box className={classes.root}>\\r\\n      <Stepper nonLinear activeStep={activeStep}>\\r\\n        {steps.map((label, index) => (\\r\\n          <Step key={label}>\\r\\n            <StepButton onClick={handleStep(index)} completed={completed[index]}>\\r\\n              {label}\\r\\n            </StepButton>\\r\\n          </Step>\\r\\n        ))}\\r\\n      </Stepper>\\r\\n      <Box>\\r\\n        {allStepsCompleted() ? (\\r\\n          <Box>\\r\\n            <Typography className={classes.instructions}>All steps completed - you&apos;re finished</Typography>\\r\\n            <Button onClick={handleReset}>Reset</Button>\\r\\n          </Box>\\r\\n        ) : (\\r\\n          <Box>\\r\\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\\r\\n            <Box>\\r\\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\\r\\n                Back\\r\\n              </Button>\\r\\n              <Button variant=\\\"contained\\\" color=\\\"primary\\\" onClick={handleNext} className={classes.button}>\\r\\n                Next\\r\\n              </Button>\\r\\n              {activeStep !== steps.length &&\\r\\n                (completed[activeStep] ? (\\r\\n                  <Typography variant=\\\"caption\\\" className={classes.completed}>\\r\\n                    Step {activeStep + 1} already completed\\r\\n                  </Typography>\\r\\n                ) : (\\r\\n                  <Button variant=\\\"contained\\\" color=\\\"primary\\\" onClick={handleComplete}>\\r\\n                    {completedSteps() === totalSteps() - 1 ? 'Finish' : 'Complete Step'}\\r\\n                  </Button>\\r\\n                ))}\\r\\n            </Box>\\r\\n          </Box>\\r\\n        )}\\r\\n      </Box>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport { makeStyles } from '@material-ui/core/styles';\\r\\nimport Stepper from '@material-ui/core/Stepper';\\r\\nimport Step from '@material-ui/core/Step';\\r\\nimport StepLabel from '@material-ui/core/StepLabel';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport Typography from '@material-ui/core/Typography';\\r\\nimport { Box } from '@material-ui/core';\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  root: {\\r\\n    width: '100%',\\r\\n  },\\r\\n  button: {\\r\\n    marginRight: theme.spacing(2),\\r\\n  },\\r\\n  instructions: {\\r\\n    marginTop: theme.spacing(2),\\r\\n    marginBottom: theme.spacing(2),\\r\\n  },\\r\\n}));\\r\\n\\r\\nfunction getSteps() {\\r\\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\\r\\n}\\r\\n\\r\\nfunction getStepContent(step) {\\r\\n  switch (step) {\\r\\n    case 0:\\r\\n      return 'Select campaign settings...';\\r\\n    case 1:\\r\\n      return 'What is an ad group anyways?';\\r\\n    case 2:\\r\\n      return 'This is the bit I really care about!';\\r\\n    default:\\r\\n      return 'Unknown step';\\r\\n  }\\r\\n}\\r\\n\\r\\nexport default function HorizontalNonLinearStepperWithError() {\\r\\n  const classes = useStyles();\\r\\n  const [activeStep, setActiveStep] = React.useState(0);\\r\\n  const [skipped, setSkipped] = React.useState(new Set());\\r\\n  const steps = getSteps();\\r\\n\\r\\n  const isStepOptional = step => {\\r\\n    return step === 1;\\r\\n  };\\r\\n\\r\\n  const isStepFailed = step => {\\r\\n    return step === 1;\\r\\n  };\\r\\n\\r\\n  const isStepSkipped = step => {\\r\\n    return skipped.has(step);\\r\\n  };\\r\\n\\r\\n  const handleNext = () => {\\r\\n    let newSkipped = skipped;\\r\\n    if (isStepSkipped(activeStep)) {\\r\\n      newSkipped = new Set(skipped.values());\\r\\n      newSkipped.delete(activeStep);\\r\\n    }\\r\\n\\r\\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\\r\\n    setSkipped(newSkipped);\\r\\n  };\\r\\n\\r\\n  const handleBack = () => {\\r\\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\\r\\n  };\\r\\n\\r\\n  const handleSkip = () => {\\r\\n    if (!isStepOptional(activeStep)) {\\r\\n      // You probably want to guard against something like this,\\r\\n      // it should never occur unless someone's actively trying to break something.\\r\\n      throw new Error(\\\"You can't skip a step that isn't optional.\\\");\\r\\n    }\\r\\n\\r\\n    setSkipped(prevSkipped => {\\r\\n      const newSkipped = new Set(prevSkipped.values());\\r\\n      newSkipped.add(activeStep);\\r\\n      return newSkipped;\\r\\n    });\\r\\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\\r\\n  };\\r\\n\\r\\n  const handleReset = () => {\\r\\n    setActiveStep(0);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box className={classes.root}>\\r\\n      <Stepper activeStep={activeStep}>\\r\\n        {steps.map((label, index) => {\\r\\n          const stepProps = {};\\r\\n          const labelProps = {};\\r\\n          if (isStepOptional(index)) {\\r\\n            labelProps.optional = (\\r\\n              <Typography variant=\\\"caption\\\" color=\\\"error\\\">\\r\\n                Alert message\\r\\n              </Typography>\\r\\n            );\\r\\n          }\\r\\n          if (isStepFailed(index)) {\\r\\n            labelProps.error = true;\\r\\n          }\\r\\n          if (isStepSkipped(index)) {\\r\\n            stepProps.completed = false;\\r\\n          }\\r\\n          return (\\r\\n            <Step key={label} {...stepProps}>\\r\\n              <StepLabel {...labelProps}>{label}</StepLabel>\\r\\n            </Step>\\r\\n          );\\r\\n        })}\\r\\n      </Stepper>\\r\\n      <Box>\\r\\n        {activeStep === steps.length ? (\\r\\n          <Box>\\r\\n            <Typography className={classes.instructions}>All steps completed - you&apos;re finished</Typography>\\r\\n            <Button onClick={handleReset} className={classes.button}>\\r\\n              Reset\\r\\n            </Button>\\r\\n          </Box>\\r\\n        ) : (\\r\\n          <Box>\\r\\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\\r\\n            <Box>\\r\\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\\r\\n                Back\\r\\n              </Button>\\r\\n              {isStepOptional(activeStep) && (\\r\\n                <Button variant=\\\"contained\\\" color=\\\"primary\\\" onClick={handleSkip} className={classes.button}>\\r\\n                  Skip\\r\\n                </Button>\\r\\n              )}\\r\\n\\r\\n              <Button variant=\\\"contained\\\" color=\\\"primary\\\" onClick={handleNext} className={classes.button}>\\r\\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\\r\\n              </Button>\\r\\n            </Box>\\r\\n          </Box>\\r\\n        )}\\r\\n      </Box>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\\r\\nimport MobileStepper from '@material-ui/core/MobileStepper';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\\r\\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\\r\\n\\r\\nconst useStyles = makeStyles({\\r\\n  root: {\\r\\n    maxWidth: 400,\\r\\n    flexGrow: 1,\\r\\n  },\\r\\n});\\r\\n\\r\\nexport default function ProgressMobileStepper() {\\r\\n  const classes = useStyles();\\r\\n  const theme = useTheme();\\r\\n  const [activeStep, setActiveStep] = React.useState(0);\\r\\n\\r\\n  const handleNext = () => {\\r\\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\\r\\n  };\\r\\n\\r\\n  const handleBack = () => {\\r\\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <MobileStepper\\r\\n      variant=\\\"progress\\\"\\r\\n      steps={6}\\r\\n      position=\\\"static\\\"\\r\\n      activeStep={activeStep}\\r\\n      className={classes.root}\\r\\n      nextButton={\\r\\n        <Button size=\\\"small\\\" onClick={handleNext} disabled={activeStep === 5}>\\r\\n          Next\\r\\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\\r\\n        </Button>\\r\\n      }\\r\\n      backButton={\\r\\n        <Button size=\\\"small\\\" onClick={handleBack} disabled={activeStep === 0}>\\r\\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\\r\\n          Back\\r\\n        </Button>\\r\\n      }\\r\\n    />\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\\r\\nimport MobileStepper from '@material-ui/core/MobileStepper';\\r\\nimport Paper from '@material-ui/core/Paper';\\r\\nimport Typography from '@material-ui/core/Typography';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\\r\\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\\r\\nimport SwipeableViews from 'react-swipeable-views';\\r\\nimport { autoPlay } from 'react-swipeable-views-utils';\\r\\nimport { Box } from '@material-ui/core';\\r\\n\\r\\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\\r\\n\\r\\nconst tutorialSteps = [\\r\\n  {\\r\\n    label: 'San Francisco – Oakland Bay Bridge, United States',\\r\\n    imgPath: 'https://via.placeholder.com/400x250',\\r\\n  },\\r\\n  {\\r\\n    label: 'Bird',\\r\\n    imgPath: 'https://via.placeholder.com/400x250',\\r\\n  },\\r\\n  {\\r\\n    label: 'Bali, Indonesia',\\r\\n    imgPath: 'https://via.placeholder.com/400x250',\\r\\n  },\\r\\n  {\\r\\n    label: 'NeONBRAND Digital Marketing, Las Vegas, United States',\\r\\n    imgPath: 'https://via.placeholder.com/400x250',\\r\\n  },\\r\\n  {\\r\\n    label: 'Goč, Serbia',\\r\\n    imgPath: 'https://via.placeholder.com/400x250',\\r\\n  },\\r\\n];\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  root: {\\r\\n    maxWidth: 400,\\r\\n    flexGrow: 1,\\r\\n  },\\r\\n  header: {\\r\\n    display: 'flex',\\r\\n    alignItems: 'center',\\r\\n    height: 50,\\r\\n    paddingLeft: theme.spacing(8),\\r\\n    backgroundColor: theme.palette.background.default,\\r\\n  },\\r\\n  img: {\\r\\n    height: 255,\\r\\n    display: 'block',\\r\\n    maxWidth: 400,\\r\\n    overflow: 'hidden',\\r\\n    width: '100%',\\r\\n  },\\r\\n}));\\r\\n\\r\\nfunction SwipeableTextMobileStepper() {\\r\\n  const classes = useStyles();\\r\\n  const theme = useTheme();\\r\\n  const [activeStep, setActiveStep] = React.useState(0);\\r\\n  const maxSteps = tutorialSteps.length;\\r\\n\\r\\n  const handleNext = () => {\\r\\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\\r\\n  };\\r\\n\\r\\n  const handleBack = () => {\\r\\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\\r\\n  };\\r\\n\\r\\n  const handleStepChange = step => {\\r\\n    setActiveStep(step);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box className={classes.root}>\\r\\n      <Paper square elevation={0} className={classes.header}>\\r\\n        <Typography>{tutorialSteps[activeStep].label}</Typography>\\r\\n      </Paper>\\r\\n      <AutoPlaySwipeableViews\\r\\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\\r\\n        index={activeStep}\\r\\n        onChangeIndex={handleStepChange}\\r\\n        enableMouseEvents>\\r\\n        {tutorialSteps.map((step, index) => (\\r\\n          <div key={step.label}>\\r\\n            {Math.abs(activeStep - index) <= 2 ? <img className={classes.img} src={step.imgPath} alt={step.label} /> : null}\\r\\n          </div>\\r\\n        ))}\\r\\n      </AutoPlaySwipeableViews>\\r\\n      <MobileStepper\\r\\n        steps={maxSteps}\\r\\n        position=\\\"static\\\"\\r\\n        variant=\\\"text\\\"\\r\\n        activeStep={activeStep}\\r\\n        nextButton={\\r\\n          <Button size=\\\"small\\\" onClick={handleNext} disabled={activeStep === maxSteps - 1}>\\r\\n            Next\\r\\n            {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\\r\\n          </Button>\\r\\n        }\\r\\n        backButton={\\r\\n          <Button size=\\\"small\\\" onClick={handleBack} disabled={activeStep === 0}>\\r\\n            {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\\r\\n            Back\\r\\n          </Button>\\r\\n        }\\r\\n      />\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\\r\\nexport default SwipeableTextMobileStepper;\\r\\n\";","export default \"import React from 'react';\\r\\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\\r\\nimport MobileStepper from '@material-ui/core/MobileStepper';\\r\\nimport Paper from '@material-ui/core/Paper';\\r\\nimport Typography from '@material-ui/core/Typography';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\\r\\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\\r\\nimport { Box } from '@material-ui/core';\\r\\n\\r\\nconst tutorialSteps = [\\r\\n  {\\r\\n    label: 'San Francisco – Oakland Bay Bridge, United States',\\r\\n    imgPath: 'https://via.placeholder.com/400x250',\\r\\n  },\\r\\n  {\\r\\n    label: 'Bird',\\r\\n    imgPath: 'https://via.placeholder.com/400x250',\\r\\n  },\\r\\n  {\\r\\n    label: 'Bali, Indonesia',\\r\\n    imgPath: 'https://via.placeholder.com/400x250',\\r\\n  },\\r\\n  {\\r\\n    label: 'NeONBRAND Digital Marketing, Las Vegas, United States',\\r\\n    imgPath: 'https://via.placeholder.com/400x250',\\r\\n  },\\r\\n  {\\r\\n    label: 'Goč, Serbia',\\r\\n    imgPath: 'https://via.placeholder.com/400x250',\\r\\n  },\\r\\n];\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  root: {\\r\\n    maxWidth: 400,\\r\\n    flexGrow: 1,\\r\\n  },\\r\\n  header: {\\r\\n    display: 'flex',\\r\\n    alignItems: 'center',\\r\\n    height: 50,\\r\\n    paddingLeft: theme.spacing(8),\\r\\n    backgroundColor: theme.palette.background.default,\\r\\n  },\\r\\n  img: {\\r\\n    height: 255,\\r\\n    maxWidth: 400,\\r\\n    overflow: 'hidden',\\r\\n    display: 'block',\\r\\n    width: '100%',\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function TextMobileStepper() {\\r\\n  const classes = useStyles();\\r\\n  const theme = useTheme();\\r\\n  const [activeStep, setActiveStep] = React.useState(0);\\r\\n  const maxSteps = tutorialSteps.length;\\r\\n\\r\\n  const handleNext = () => {\\r\\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\\r\\n  };\\r\\n\\r\\n  const handleBack = () => {\\r\\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box className={classes.root}>\\r\\n      <Paper square elevation={0} className={classes.header}>\\r\\n        <Typography>{tutorialSteps[activeStep].label}</Typography>\\r\\n      </Paper>\\r\\n      <img className={classes.img} src={tutorialSteps[activeStep].imgPath} alt={tutorialSteps[activeStep].label} />\\r\\n      <MobileStepper\\r\\n        steps={maxSteps}\\r\\n        position=\\\"static\\\"\\r\\n        variant=\\\"text\\\"\\r\\n        activeStep={activeStep}\\r\\n        nextButton={\\r\\n          <Button size=\\\"small\\\" onClick={handleNext} disabled={activeStep === maxSteps - 1}>\\r\\n            Next\\r\\n            {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\\r\\n          </Button>\\r\\n        }\\r\\n        backButton={\\r\\n          <Button size=\\\"small\\\" onClick={handleBack} disabled={activeStep === 0}>\\r\\n            {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\\r\\n            Back\\r\\n          </Button>\\r\\n        }\\r\\n      />\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport { makeStyles } from '@material-ui/core/styles';\\r\\nimport Stepper from '@material-ui/core/Stepper';\\r\\nimport Step from '@material-ui/core/Step';\\r\\nimport StepLabel from '@material-ui/core/StepLabel';\\r\\nimport StepContent from '@material-ui/core/StepContent';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport Paper from '@material-ui/core/Paper';\\r\\nimport Typography from '@material-ui/core/Typography';\\r\\nimport { Box } from '@material-ui/core';\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  root: {\\r\\n    width: '100%',\\r\\n  },\\r\\n  button: {\\r\\n    marginTop: theme.spacing(1),\\r\\n    marginRight: theme.spacing(1),\\r\\n  },\\r\\n  actionsContainer: {\\r\\n    marginBottom: theme.spacing(2),\\r\\n  },\\r\\n  resetContainer: {\\r\\n    padding: theme.spacing(3),\\r\\n  },\\r\\n}));\\r\\n\\r\\nfunction getSteps() {\\r\\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\\r\\n}\\r\\n\\r\\nfunction getStepContent(step) {\\r\\n  switch (step) {\\r\\n    case 0:\\r\\n      return `For each ad campaign that you create, you can control how much\\r\\n              you're willing to spend on clicks and conversions, which networks\\r\\n              and geographical locations you want your ads to show on, and more.`;\\r\\n    case 1:\\r\\n      return 'An ad group contains one or more ads which target a shared set of keywords.';\\r\\n    case 2:\\r\\n      return `Try out different ad text to see what brings in the most customers,\\r\\n              and learn how to enhance your ads using features like ad extensions.\\r\\n              If you run into any problems with your ads, find out how to tell if\\r\\n              they're running and how to resolve approval issues.`;\\r\\n    default:\\r\\n      return 'Unknown step';\\r\\n  }\\r\\n}\\r\\n\\r\\nexport default function VerticalLinearStepper() {\\r\\n  const classes = useStyles();\\r\\n  const [activeStep, setActiveStep] = React.useState(0);\\r\\n  const steps = getSteps();\\r\\n\\r\\n  const handleNext = () => {\\r\\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\\r\\n  };\\r\\n\\r\\n  const handleBack = () => {\\r\\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\\r\\n  };\\r\\n\\r\\n  const handleReset = () => {\\r\\n    setActiveStep(0);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box className={classes.root}>\\r\\n      <Stepper activeStep={activeStep} orientation=\\\"vertical\\\">\\r\\n        {steps.map((label, index) => (\\r\\n          <Step key={label}>\\r\\n            <StepLabel>{label}</StepLabel>\\r\\n            <StepContent>\\r\\n              <Typography>{getStepContent(index)}</Typography>\\r\\n              <Box className={classes.actionsContainer}>\\r\\n                <Box>\\r\\n                  <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\\r\\n                    Back\\r\\n                  </Button>\\r\\n                  <Button variant=\\\"contained\\\" color=\\\"primary\\\" onClick={handleNext} className={classes.button}>\\r\\n                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\\r\\n                  </Button>\\r\\n                </Box>\\r\\n              </Box>\\r\\n            </StepContent>\\r\\n          </Step>\\r\\n        ))}\\r\\n      </Stepper>\\r\\n      {activeStep === steps.length && (\\r\\n        <Paper square elevation={0} className={classes.resetContainer}>\\r\\n          <Typography>All steps completed - you&apos;re finished</Typography>\\r\\n          <Button onClick={handleReset} className={classes.button}>\\r\\n            Reset\\r\\n          </Button>\\r\\n        </Paper>\\r\\n      )}\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return 'Select campaign settings...';\r\n    case 1:\r\n      return 'What is an ad group anyways?';\r\n    case 2:\r\n      return 'This is the bit I really care about!';\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport default function HorizontalLinearStepper() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [skipped, setSkipped] = React.useState(new Set());\r\n  const steps = getSteps();\r\n\r\n  const isStepOptional = step => {\r\n    return step === 1;\r\n  };\r\n\r\n  const isStepSkipped = step => {\r\n    return skipped.has(step);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    let newSkipped = skipped;\r\n    if (isStepSkipped(activeStep)) {\r\n      newSkipped = new Set(newSkipped.values());\r\n      newSkipped.delete(activeStep);\r\n    }\r\n\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n    setSkipped(newSkipped);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    if (!isStepOptional(activeStep)) {\r\n      // You probably want to guard against something like this,\r\n      // it should never occur unless someone's actively trying to break something.\r\n      throw new Error(\"You can't skip a step that isn't optional.\");\r\n    }\r\n\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n    setSkipped(prevSkipped => {\r\n      const newSkipped = new Set(prevSkipped.values());\r\n      newSkipped.add(activeStep);\r\n      return newSkipped;\r\n    });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Stepper activeStep={activeStep}>\r\n        {steps.map((label, index) => {\r\n          const stepProps = {};\r\n          const labelProps = {};\r\n          if (isStepOptional(index)) {\r\n            labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\r\n          }\r\n          if (isStepSkipped(index)) {\r\n            stepProps.completed = false;\r\n          }\r\n          return (\r\n            <Step key={label} {...stepProps}>\r\n              <StepLabel {...labelProps}>{label}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      <Box>\r\n        {activeStep === steps.length ? (\r\n          <Box>\r\n            <Typography className={classes.instructions}>All steps completed - you&apos;re finished</Typography>\r\n            <Button onClick={handleReset} className={classes.button}>\r\n              Reset\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <Box>\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n            <Box>\r\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n                Back\r\n              </Button>\r\n              {isStepOptional(activeStep) && (\r\n                <Button variant=\"contained\" color=\"primary\" onClick={handleSkip} className={classes.button}>\r\n                  Skip\r\n                </Button>\r\n              )}\r\n\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNext} className={classes.button}>\r\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Select master blaster campaign settings', 'Create an ad group', 'Create an ad'];\r\n}\r\n\r\nfunction getStepContent(stepIndex) {\r\n  switch (stepIndex) {\r\n    case 0:\r\n      return 'Select campaign settings...';\r\n    case 1:\r\n      return 'What is an ad group anyways?';\r\n    case 2:\r\n      return 'This is the bit I really care about!';\r\n    default:\r\n      return 'Unknown stepIndex';\r\n  }\r\n}\r\n\r\nexport default function HorizontalLabelPositionBelowStepper() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Stepper activeStep={activeStep} alternativeLabel>\r\n        {steps.map(label => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <Box>\r\n        {activeStep === steps.length ? (\r\n          <Box>\r\n            <Typography className={classes.instructions}>All steps completed</Typography>\r\n            <Button onClick={handleReset}>Reset</Button>\r\n          </Box>\r\n        ) : (\r\n          <Box>\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n            <Box>\r\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.backButton}>\r\n                Back\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\r\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Check from '@material-ui/icons/Check';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport VideoLabelIcon from '@material-ui/icons/VideoLabel';\r\nimport StepConnector from '@material-ui/core/StepConnector';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst QontoConnector = withStyles({\r\n  alternativeLabel: {\r\n    top: 10,\r\n    left: 'calc(-50% + 16px)',\r\n    right: 'calc(50% + 16px)',\r\n  },\r\n  active: {\r\n    '& $line': {\r\n      borderColor: '#784af4',\r\n    },\r\n  },\r\n  completed: {\r\n    '& $line': {\r\n      borderColor: '#784af4',\r\n    },\r\n  },\r\n  line: {\r\n    borderColor: '#eaeaf0',\r\n    borderTopWidth: 3,\r\n    borderRadius: 1,\r\n  },\r\n})(StepConnector);\r\n\r\nconst useQontoStepIconStyles = makeStyles({\r\n  root: {\r\n    color: '#eaeaf0',\r\n    display: 'flex',\r\n    height: 22,\r\n    alignItems: 'center',\r\n  },\r\n  active: {\r\n    color: '#784af4',\r\n  },\r\n  circle: {\r\n    width: 8,\r\n    height: 8,\r\n    borderRadius: '50%',\r\n    backgroundColor: 'currentColor',\r\n  },\r\n  completed: {\r\n    color: '#784af4',\r\n    zIndex: 1,\r\n    fontSize: 18,\r\n  },\r\n});\r\n\r\nfunction QontoStepIcon(props) {\r\n  const classes = useQontoStepIconStyles();\r\n  const { active, completed } = props;\r\n\r\n  return (\r\n    <Box\r\n      className={clsx(classes.root, {\r\n        [classes.active]: active,\r\n      })}>\r\n      {completed ? <Check className={classes.completed} /> : <Box className={classes.circle} />}\r\n    </Box>\r\n  );\r\n}\r\n\r\nQontoStepIcon.propTypes = {\r\n  /**\r\n   * Whether this step is active.\r\n   */\r\n  active: PropTypes.bool,\r\n  /**\r\n   * Mark the step as completed. Is passed to child components.\r\n   */\r\n  completed: PropTypes.bool,\r\n};\r\n\r\nconst ColorlibConnector = withStyles({\r\n  alternativeLabel: {\r\n    top: 22,\r\n  },\r\n  active: {\r\n    '& $line': {\r\n      backgroundImage: 'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\r\n    },\r\n  },\r\n  completed: {\r\n    '& $line': {\r\n      backgroundImage: 'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\r\n    },\r\n  },\r\n  line: {\r\n    height: 3,\r\n    border: 0,\r\n    backgroundColor: '#eaeaf0',\r\n    borderRadius: 1,\r\n  },\r\n})(StepConnector);\r\n\r\nconst useColorlibStepIconStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: '#ccc',\r\n    zIndex: 1,\r\n    color: '#fff',\r\n    width: 50,\r\n    height: 50,\r\n    display: 'flex',\r\n    borderRadius: '50%',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  active: {\r\n    backgroundImage: 'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\r\n  },\r\n  completed: {\r\n    backgroundImage: 'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n  },\r\n});\r\n\r\nfunction ColorlibStepIcon(props) {\r\n  const classes = useColorlibStepIconStyles();\r\n  const { active, completed } = props;\r\n\r\n  const icons = {\r\n    1: <SettingsIcon />,\r\n    2: <GroupAddIcon />,\r\n    3: <VideoLabelIcon />,\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      className={clsx(classes.root, {\r\n        [classes.active]: active,\r\n        [classes.completed]: completed,\r\n      })}>\r\n      {icons[String(props.icon)]}\r\n    </Box>\r\n  );\r\n}\r\n\r\nColorlibStepIcon.propTypes = {\r\n  /**\r\n   * Whether this step is active.\r\n   */\r\n  active: PropTypes.bool,\r\n  /**\r\n   * Mark the step as completed. Is passed to child components.\r\n   */\r\n  completed: PropTypes.bool,\r\n  /**\r\n   * The label displayed in the step icon.\r\n   */\r\n  icon: PropTypes.node,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return 'Select campaign settings...';\r\n    case 1:\r\n      return 'What is an ad group anyways?';\r\n    case 2:\r\n      return 'This is the bit I really care about!';\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport default function CustomizedSteppers() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(1);\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Stepper alternativeLabel activeStep={activeStep}>\r\n        {steps.map(label => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <Stepper alternativeLabel activeStep={activeStep} connector={<QontoConnector />}>\r\n        {steps.map(label => (\r\n          <Step key={label}>\r\n            <StepLabel StepIconComponent={QontoStepIcon}>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <Stepper alternativeLabel activeStep={activeStep} connector={<ColorlibConnector />}>\r\n        {steps.map(label => (\r\n          <Step key={label}>\r\n            <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <Box>\r\n        {activeStep === steps.length ? (\r\n          <Box>\r\n            <Typography className={classes.instructions}>All steps completed - you&apos;re finished</Typography>\r\n            <Button onClick={handleReset} className={classes.button}>\r\n              Reset\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <Box>\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n            <Box>\r\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n                Back\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNext} className={classes.button}>\r\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepButton from '@material-ui/core/StepButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  completed: {\r\n    display: 'inline-block',\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return 'Step 1: Select campaign settings...';\r\n    case 1:\r\n      return 'Step 2: What is an ad group anyways?';\r\n    case 2:\r\n      return 'Step 3: This is the bit I really care about!';\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport default function HorizontalNonLinearStepper() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [completed, setCompleted] = React.useState({});\r\n  const steps = getSteps();\r\n\r\n  const totalSteps = () => {\r\n    return steps.length;\r\n  };\r\n\r\n  const completedSteps = () => {\r\n    return Object.keys(completed).length;\r\n  };\r\n\r\n  const isLastStep = () => {\r\n    return activeStep === totalSteps() - 1;\r\n  };\r\n\r\n  const allStepsCompleted = () => {\r\n    return completedSteps() === totalSteps();\r\n  };\r\n\r\n  const handleNext = () => {\r\n    const newActiveStep =\r\n      isLastStep() && !allStepsCompleted()\r\n        ? // It's the last step, but not all steps have been completed,\r\n          // find the first step that has been completed\r\n          steps.findIndex((step, i) => !(i in completed))\r\n        : activeStep + 1;\r\n    setActiveStep(newActiveStep);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleStep = step => () => {\r\n    setActiveStep(step);\r\n  };\r\n\r\n  const handleComplete = () => {\r\n    const newCompleted = completed;\r\n    newCompleted[activeStep] = true;\r\n    setCompleted(newCompleted);\r\n    handleNext();\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n    setCompleted({});\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Stepper nonLinear activeStep={activeStep}>\r\n        {steps.map((label, index) => (\r\n          <Step key={label}>\r\n            <StepButton onClick={handleStep(index)} completed={completed[index]}>\r\n              {label}\r\n            </StepButton>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <Box>\r\n        {allStepsCompleted() ? (\r\n          <Box>\r\n            <Typography className={classes.instructions}>All steps completed - you&apos;re finished</Typography>\r\n            <Button onClick={handleReset}>Reset</Button>\r\n          </Box>\r\n        ) : (\r\n          <Box>\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n            <Box>\r\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n                Back\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNext} className={classes.button}>\r\n                Next\r\n              </Button>\r\n              {activeStep !== steps.length &&\r\n                (completed[activeStep] ? (\r\n                  <Typography variant=\"caption\" className={classes.completed}>\r\n                    Step {activeStep + 1} already completed\r\n                  </Typography>\r\n                ) : (\r\n                  <Button variant=\"contained\" color=\"primary\" onClick={handleComplete}>\r\n                    {completedSteps() === totalSteps() - 1 ? 'Finish' : 'Complete Step'}\r\n                  </Button>\r\n                ))}\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepButton from '@material-ui/core/StepButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  completed: {\r\n    display: 'inline-block',\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return 'Step 1: Select campaign settings...';\r\n    case 1:\r\n      return 'Step 2: What is an ad group anyways?';\r\n    case 2:\r\n      return 'Step 3: This is the bit I really care about!';\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport default function HorizontalNonLinearAlternativeLabelStepper() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [completed, setCompleted] = React.useState(new Set());\r\n  const [skipped, setSkipped] = React.useState(new Set());\r\n  const steps = getSteps();\r\n\r\n  const totalSteps = () => {\r\n    return getSteps().length;\r\n  };\r\n\r\n  const isStepOptional = step => {\r\n    return step === 1;\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    if (!isStepOptional(activeStep)) {\r\n      // You probably want to guard against something like this\r\n      // it should never occur unless someone's actively trying to break something.\r\n      throw new Error(\"You can't skip a step that isn't optional.\");\r\n    }\r\n\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n    setSkipped(prevSkipped => {\r\n      const newSkipped = new Set(prevSkipped.values());\r\n      newSkipped.add(activeStep);\r\n      return newSkipped;\r\n    });\r\n  };\r\n\r\n  const skippedSteps = () => {\r\n    return skipped.size;\r\n  };\r\n\r\n  const completedSteps = () => {\r\n    return completed.size;\r\n  };\r\n\r\n  const allStepsCompleted = () => {\r\n    return completedSteps() === totalSteps() - skippedSteps();\r\n  };\r\n\r\n  const isLastStep = () => {\r\n    return activeStep === totalSteps() - 1;\r\n  };\r\n\r\n  const handleNext = () => {\r\n    const newActiveStep =\r\n      isLastStep() && !allStepsCompleted()\r\n        ? // It's the last step, but not all steps have been completed\r\n          // find the first step that has been completed\r\n          steps.findIndex((step, i) => !completed.has(i))\r\n        : activeStep + 1;\r\n\r\n    setActiveStep(newActiveStep);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleStep = step => () => {\r\n    setActiveStep(step);\r\n  };\r\n\r\n  const handleComplete = () => {\r\n    const newCompleted = new Set(completed);\r\n    newCompleted.add(activeStep);\r\n    setCompleted(newCompleted);\r\n\r\n    /**\r\n     * Sigh... it would be much nicer to replace the following if conditional with\r\n     * `if (!this.allStepsComplete())` however state is not set when we do this,\r\n     * thus we have to resort to not being very DRY.\r\n     */\r\n    if (completed.size !== totalSteps() - skippedSteps()) {\r\n      handleNext();\r\n    }\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n    setCompleted(new Set());\r\n    setSkipped(new Set());\r\n  };\r\n\r\n  const isStepSkipped = step => {\r\n    return skipped.has(step);\r\n  };\r\n\r\n  function isStepComplete(step) {\r\n    return completed.has(step);\r\n  }\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Stepper alternativeLabel nonLinear activeStep={activeStep}>\r\n        {steps.map((label, index) => {\r\n          const stepProps = {};\r\n          const buttonProps = {};\r\n          if (isStepOptional(index)) {\r\n            buttonProps.optional = <Typography variant=\"caption\">Optional</Typography>;\r\n          }\r\n          if (isStepSkipped(index)) {\r\n            stepProps.completed = false;\r\n          }\r\n          return (\r\n            <Step key={label} {...stepProps}>\r\n              <StepButton onClick={handleStep(index)} completed={isStepComplete(index)} {...buttonProps}>\r\n                {label}\r\n              </StepButton>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      <Box>\r\n        {allStepsCompleted() ? (\r\n          <Box>\r\n            <Typography className={classes.instructions}>All steps completed - you&apos;re finished</Typography>\r\n            <Button onClick={handleReset}>Reset</Button>\r\n          </Box>\r\n        ) : (\r\n          <Box>\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n            <Box>\r\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n                Back\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNext} className={classes.button}>\r\n                Next\r\n              </Button>\r\n              {isStepOptional(activeStep) && !completed.has(activeStep) && (\r\n                <Button variant=\"contained\" color=\"primary\" onClick={handleSkip} className={classes.button}>\r\n                  Skip\r\n                </Button>\r\n              )}\r\n\r\n              {activeStep !== steps.length &&\r\n                (completed.has(activeStep) ? (\r\n                  <Typography variant=\"caption\" className={classes.completed}>\r\n                    Step {activeStep + 1} already completed\r\n                  </Typography>\r\n                ) : (\r\n                  <Button variant=\"contained\" color=\"primary\" onClick={handleComplete}>\r\n                    {completedSteps() === totalSteps() - 1 ? 'Finish' : 'Complete Step'}\r\n                  </Button>\r\n                ))}\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return 'Select campaign settings...';\r\n    case 1:\r\n      return 'What is an ad group anyways?';\r\n    case 2:\r\n      return 'This is the bit I really care about!';\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport default function HorizontalNonLinearStepperWithError() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [skipped, setSkipped] = React.useState(new Set());\r\n  const steps = getSteps();\r\n\r\n  const isStepOptional = step => {\r\n    return step === 1;\r\n  };\r\n\r\n  const isStepFailed = step => {\r\n    return step === 1;\r\n  };\r\n\r\n  const isStepSkipped = step => {\r\n    return skipped.has(step);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    let newSkipped = skipped;\r\n    if (isStepSkipped(activeStep)) {\r\n      newSkipped = new Set(skipped.values());\r\n      newSkipped.delete(activeStep);\r\n    }\r\n\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n    setSkipped(newSkipped);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    if (!isStepOptional(activeStep)) {\r\n      // You probably want to guard against something like this,\r\n      // it should never occur unless someone's actively trying to break something.\r\n      throw new Error(\"You can't skip a step that isn't optional.\");\r\n    }\r\n\r\n    setSkipped(prevSkipped => {\r\n      const newSkipped = new Set(prevSkipped.values());\r\n      newSkipped.add(activeStep);\r\n      return newSkipped;\r\n    });\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Stepper activeStep={activeStep}>\r\n        {steps.map((label, index) => {\r\n          const stepProps = {};\r\n          const labelProps = {};\r\n          if (isStepOptional(index)) {\r\n            labelProps.optional = (\r\n              <Typography variant=\"caption\" color=\"error\">\r\n                Alert message\r\n              </Typography>\r\n            );\r\n          }\r\n          if (isStepFailed(index)) {\r\n            labelProps.error = true;\r\n          }\r\n          if (isStepSkipped(index)) {\r\n            stepProps.completed = false;\r\n          }\r\n          return (\r\n            <Step key={label} {...stepProps}>\r\n              <StepLabel {...labelProps}>{label}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      <Box>\r\n        {activeStep === steps.length ? (\r\n          <Box>\r\n            <Typography className={classes.instructions}>All steps completed - you&apos;re finished</Typography>\r\n            <Button onClick={handleReset} className={classes.button}>\r\n              Reset\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <Box>\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n            <Box>\r\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n                Back\r\n              </Button>\r\n              {isStepOptional(activeStep) && (\r\n                <Button variant=\"contained\" color=\"primary\" onClick={handleSkip} className={classes.button}>\r\n                  Skip\r\n                </Button>\r\n              )}\r\n\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNext} className={classes.button}>\r\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  actionsContainer: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  resetContainer: {\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return `For each ad campaign that you create, you can control how much\r\n              you're willing to spend on clicks and conversions, which networks\r\n              and geographical locations you want your ads to show on, and more.`;\r\n    case 1:\r\n      return 'An ad group contains one or more ads which target a shared set of keywords.';\r\n    case 2:\r\n      return `Try out different ad text to see what brings in the most customers,\r\n              and learn how to enhance your ads using features like ad extensions.\r\n              If you run into any problems with your ads, find out how to tell if\r\n              they're running and how to resolve approval issues.`;\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport default function VerticalLinearStepper() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n        {steps.map((label, index) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n            <StepContent>\r\n              <Typography>{getStepContent(index)}</Typography>\r\n              <Box className={classes.actionsContainer}>\r\n                <Box>\r\n                  <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n                    Back\r\n                  </Button>\r\n                  <Button variant=\"contained\" color=\"primary\" onClick={handleNext} className={classes.button}>\r\n                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            </StepContent>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      {activeStep === steps.length && (\r\n        <Paper square elevation={0} className={classes.resetContainer}>\r\n          <Typography>All steps completed - you&apos;re finished</Typography>\r\n          <Button onClick={handleReset} className={classes.button}>\r\n            Reset\r\n          </Button>\r\n        </Paper>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport MobileStepper from '@material-ui/core/MobileStepper';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst tutorialSteps = [\r\n  {\r\n    label: 'San Francisco – Oakland Bay Bridge, United States',\r\n    imgPath: 'https://images.unsplash.com/photo-1537944434965-cf4679d1a598?auto=format&fit=crop&w=400&h=250&q=60',\r\n  },\r\n  {\r\n    label: 'Bird',\r\n    imgPath: 'https://images.unsplash.com/photo-1538032746644-0212e812a9e7?auto=format&fit=crop&w=400&h=250&q=60',\r\n  },\r\n  {\r\n    label: 'Bali, Indonesia',\r\n    imgPath: 'https://images.unsplash.com/photo-1537996194471-e657df975ab4?auto=format&fit=crop&w=400&h=250&q=80',\r\n  },\r\n  {\r\n    label: 'NeONBRAND Digital Marketing, Las Vegas, United States',\r\n    imgPath: 'https://images.unsplash.com/photo-1518732714860-b62714ce0c59?auto=format&fit=crop&w=400&h=250&q=60',\r\n  },\r\n  {\r\n    label: 'Goč, Serbia',\r\n    imgPath: 'https://images.unsplash.com/photo-1512341689857-198e7e2f3ca8?auto=format&fit=crop&w=400&h=250&q=60',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    maxWidth: 400,\r\n    flexGrow: 1,\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    height: 50,\r\n    paddingLeft: theme.spacing(8),\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  img: {\r\n    height: 255,\r\n    maxWidth: 400,\r\n    overflow: 'hidden',\r\n    display: 'block',\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nexport default function TextMobileStepper() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const maxSteps = tutorialSteps.length;\r\n\r\n  const handleNext = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Paper square elevation={0} className={classes.header}>\r\n        <Typography>{tutorialSteps[activeStep].label}</Typography>\r\n      </Paper>\r\n      <img className={classes.img} src={tutorialSteps[activeStep].imgPath} alt={tutorialSteps[activeStep].label} />\r\n      <MobileStepper\r\n        steps={maxSteps}\r\n        position=\"static\"\r\n        variant=\"text\"\r\n        activeStep={activeStep}\r\n        nextButton={\r\n          <Button size=\"small\" onClick={handleNext} disabled={activeStep === maxSteps - 1}>\r\n            Next\r\n            {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n          </Button>\r\n        }\r\n        backButton={\r\n          <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\r\n            {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n            Back\r\n          </Button>\r\n        }\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport MobileStepper from '@material-ui/core/MobileStepper';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { autoPlay } from 'react-swipeable-views-utils';\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\r\n\r\nconst tutorialSteps = [\r\n  {\r\n    label: 'San Francisco – Oakland Bay Bridge, United States',\r\n    imgPath: 'https://images.unsplash.com/photo-1537944434965-cf4679d1a598?auto=format&fit=crop&w=400&h=250&q=60',\r\n  },\r\n  {\r\n    label: 'Bird',\r\n    imgPath: 'https://images.unsplash.com/photo-1538032746644-0212e812a9e7?auto=format&fit=crop&w=400&h=250&q=60',\r\n  },\r\n  {\r\n    label: 'Bali, Indonesia',\r\n    imgPath: 'https://images.unsplash.com/photo-1537996194471-e657df975ab4?auto=format&fit=crop&w=400&h=250&q=80',\r\n  },\r\n  {\r\n    label: 'NeONBRAND Digital Marketing, Las Vegas, United States',\r\n    imgPath: 'https://images.unsplash.com/photo-1518732714860-b62714ce0c59?auto=format&fit=crop&w=400&h=250&q=60',\r\n  },\r\n  {\r\n    label: 'Goč, Serbia',\r\n    imgPath: 'https://images.unsplash.com/photo-1512341689857-198e7e2f3ca8?auto=format&fit=crop&w=400&h=250&q=60',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    maxWidth: 400,\r\n    flexGrow: 1,\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    height: 50,\r\n    paddingLeft: theme.spacing(8),\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  img: {\r\n    height: 255,\r\n    display: 'block',\r\n    maxWidth: 400,\r\n    overflow: 'hidden',\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nfunction SwipeableTextMobileStepper() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const maxSteps = tutorialSteps.length;\r\n\r\n  const handleNext = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleStepChange = step => {\r\n    setActiveStep(step);\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Paper square elevation={0} className={classes.header}>\r\n        <Typography>{tutorialSteps[activeStep].label}</Typography>\r\n      </Paper>\r\n      <AutoPlaySwipeableViews\r\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n        index={activeStep}\r\n        onChangeIndex={handleStepChange}\r\n        enableMouseEvents>\r\n        {tutorialSteps.map((step, index) => (\r\n          <div key={step.label}>\r\n            {Math.abs(activeStep - index) <= 2 ? <img className={classes.img} src={step.imgPath} alt={step.label} /> : null}\r\n          </div>\r\n        ))}\r\n      </AutoPlaySwipeableViews>\r\n      <MobileStepper\r\n        steps={maxSteps}\r\n        position=\"static\"\r\n        variant=\"text\"\r\n        activeStep={activeStep}\r\n        nextButton={\r\n          <Button size=\"small\" onClick={handleNext} disabled={activeStep === maxSteps - 1}>\r\n            Next\r\n            {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n          </Button>\r\n        }\r\n        backButton={\r\n          <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\r\n            {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n            Back\r\n          </Button>\r\n        }\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SwipeableTextMobileStepper;\r\n","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport MobileStepper from '@material-ui/core/MobileStepper';\r\nimport Button from '@material-ui/core/Button';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 400,\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport default function DotsMobileStepper() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n  const handleNext = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  };\r\n\r\n  return (\r\n    <MobileStepper\r\n      variant=\"dots\"\r\n      steps={6}\r\n      position=\"static\"\r\n      activeStep={activeStep}\r\n      className={classes.root}\r\n      nextButton={\r\n        <Button size=\"small\" onClick={handleNext} disabled={activeStep === 5}>\r\n          Next\r\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n        </Button>\r\n      }\r\n      backButton={\r\n        <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\r\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n          Back\r\n        </Button>\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport MobileStepper from '@material-ui/core/MobileStepper';\r\nimport Button from '@material-ui/core/Button';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 400,\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport default function ProgressMobileStepper() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n  const handleNext = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  };\r\n\r\n  return (\r\n    <MobileStepper\r\n      variant=\"progress\"\r\n      steps={6}\r\n      position=\"static\"\r\n      activeStep={activeStep}\r\n      className={classes.root}\r\n      nextButton={\r\n        <Button size=\"small\" onClick={handleNext} disabled={activeStep === 5}>\r\n          Next\r\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n        </Button>\r\n      }\r\n      backButton={\r\n        <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\r\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n          Back\r\n        </Button>\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { MuiComponentDemo } from '../../../../@jumbo/components/PageComponents';\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CodeViewerCard from '../../../../@jumbo/components/Common/CodeViewerCard';\r\nimport HorizontalLinearStepper from './demo/HorizontalLinearStepper';\r\nimport HorizontalLabelPositionBelowStepper from './demo/HorizontalLabelPositionBelowStepper';\r\nimport CustomizedSteppers from './demo/CustomizedSteppers';\r\nimport HorizontalNonLinearStepper from './demo/HorizontalNonLinearStepper';\r\nimport HorizontalNonLinearAlternativeLabelStepper from './demo/HorizontalNonLinearAlternativeLabelStepper';\r\nimport HorizontalNonLinearStepperWithError from './demo/HorizontalNonLinearStepperWithError';\r\nimport VerticalLinearStepper from './demo/VerticalLinearStepper';\r\nimport TextMobileStepper from './demo/TextMobileStepper';\r\nimport SwipeableTextMobileStepper from './demo/SwipeableTextMobileStepper';\r\nimport DotsMobileStepper from './demo/DotsMobileStepper';\r\nimport ProgressMobileStepper from './demo/ProgressMobileStepper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  section: {\r\n    '&:not(:last-child)': {\r\n      marginBottom: theme.typography.pxToRem(32),\r\n    },\r\n  },\r\n  sectionHeading: {\r\n    marginBottom: theme.typography.pxToRem(16),\r\n  },\r\n}));\r\n\r\nconst requireRaw = require.context('!raw-loader!../../../../@fake-db/mui-components/stepper', false, /\\.(txt|js|md|tsx)$/);\r\n\r\nconst demos = [\r\n  {\r\n    label: 'Linear',\r\n    link: 'linear',\r\n    component: <HorizontalLinearStepper />,\r\n    filename: './HorizontalLinearStepper.txt',\r\n  },\r\n  {\r\n    label: 'Linear - Alternative Label',\r\n    link: 'linear-alternative-label',\r\n    component: <HorizontalLabelPositionBelowStepper />,\r\n    filename: './HorizontalLabelPositionBelowStepper.txt',\r\n  },\r\n  {\r\n    label: 'Customized Stepper',\r\n    link: 'customized-stepper',\r\n    component: <CustomizedSteppers />,\r\n    filename: './CustomizedSteppers.txt',\r\n  },\r\n  {\r\n    label: 'Non-linear',\r\n    link: 'non-linear',\r\n    component: <HorizontalNonLinearStepper />,\r\n    filename: './HorizontalNonLinearStepper.txt',\r\n  },\r\n  {\r\n    label: 'Non-linear - Alternative Label',\r\n    link: 'non-linear-alternative-label',\r\n    component: <HorizontalNonLinearAlternativeLabelStepper />,\r\n    filename: './HorizontalNonLinearAlternativeLabelStepper.txt',\r\n  },\r\n  {\r\n    label: 'Non-linear - Error Step',\r\n    link: 'non-linear-error-step',\r\n    component: <HorizontalNonLinearStepperWithError />,\r\n    filename: './HorizontalNonLinearStepperWithError.txt',\r\n  },\r\n  {\r\n    label: 'Vertical Stepper',\r\n    link: 'vertical-stepper',\r\n    component: <VerticalLinearStepper />,\r\n    filename: './VerticalLinearStepper.txt',\r\n  },\r\n  {\r\n    label: 'Text',\r\n    link: 'text',\r\n    component: <TextMobileStepper />,\r\n    filename: './TextMobileStepper.txt',\r\n  },\r\n  {\r\n    label: 'Text with Carousel effect',\r\n    link: 'text-with-carousel-effect',\r\n    component: <SwipeableTextMobileStepper />,\r\n    filename: './SwipeableTextMobileStepper.txt',\r\n  },\r\n  {\r\n    label: 'Dots',\r\n    link: 'dots',\r\n    component: <DotsMobileStepper />,\r\n    filename: './DotsMobileStepper.txt',\r\n  },\r\n  {\r\n    label: 'Progress',\r\n    link: 'progress',\r\n    component: <ProgressMobileStepper />,\r\n    filename: './ProgressMobileStepper.txt',\r\n  },\r\n];\r\n\r\nexport default function Stepper() {\r\n  const classes = useStyles();\r\n  return (\r\n    <MuiComponentDemo pageTitle=\"Stepper\" menus={demos}>\r\n      {demos.map((menu, index) => (\r\n        <Box key={index} id={menu.link} className={classes.section}>\r\n          <Typography component=\"h3\" variant=\"inherit\" className={classes.sectionHeading}>\r\n            {menu.label}\r\n          </Typography>\r\n          <CodeViewerCard code={requireRaw(menu.filename).default} language=\"jsx\">\r\n            {menu.component}\r\n          </CodeViewerCard>\r\n        </Box>\r\n      ))}\r\n    </MuiComponentDemo>\r\n  );\r\n}\r\n"],"sourceRoot":""}