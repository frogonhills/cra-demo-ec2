{"version":3,"sources":["@coremat/CmtObjectSummary/CmtObjectSummary.style.js","@coremat/CmtObjectSummary/index.js","@coremat/CmtAvatarGroup/index.js","@jumbo/components/Common/formElements/AppCheckBox.js","@coremat/CmtList/ListEmptyResult.js","@jumbo/components/Common/ColorPickerPopup/index.js","@jumbo/components/Common/LabelForm/index.js","routes/Apps/TaskList/index.style.js","redux/actions/TaskList.js","routes/Apps/TaskList/Sidebar/SidebarHeader.js","routes/Apps/TaskList/Sidebar/TaskListCell.js","routes/Apps/TaskList/Sidebar/TaskFilterCell.js","routes/Apps/TaskList/Sidebar/AddTaskList.style.js","routes/Apps/TaskList/Sidebar/AddTaskList.js","routes/Apps/TaskList/Sidebar/index.js","routes/Apps/TaskList/ContentHeader.js","routes/Apps/TaskList/TaskListView/TaskCell.style.js","routes/Apps/TaskList/TaskListView/TaskCell.js","routes/Apps/TaskList/AddTask/SubTask/SubTaskCell.js","routes/Apps/TaskList/AddTask/SubTask/index.js","routes/Apps/TaskList/AddTask/index.style.js","routes/Apps/TaskList/AddTask/AssignTo.js","routes/Apps/TaskList/TaskListSelector.js","routes/Apps/TaskList/Attachments/AttachmentCell.js","routes/Apps/TaskList/Attachments/index.js","routes/Apps/TaskList/AddTask/AddTaskButton.js","routes/Apps/TaskList/AddTask/index.js","routes/Apps/TaskList/TaskListView/TaskListEmptyComponent.js","routes/Apps/TaskList/TaskListView/index.js","routes/Apps/TaskList/TaskListContainer.js","routes/Apps/TaskList/Collaborators/AddCollaborators.js","routes/Apps/TaskList/Collaborators/index.js","routes/Apps/TaskList/CommentView/CommentCell.js","routes/Apps/TaskList/CommentView/index.js","routes/Apps/TaskList/TaskDetail/DetailView.js","routes/Apps/TaskList/AssignTaskList/index.js","routes/Apps/TaskList/TaskDetail/TaskOptions.js","routes/Apps/TaskList/TaskDetail/DetailHeader.js","routes/Apps/TaskList/CommentView/AddComment.js","routes/Apps/TaskList/TaskDetail/index.js","routes/Apps/TaskList/index.js"],"names":["useStyles","makeStyles","theme","root","display","alignItems","flexDirection","textAlign","marginLeft","marginTop","badgeRoot","backgroundColor","boxShadow","borderRadius","padding","badgeAvatarRoot","position","top","left","transform","marginBottom","paddingBottom","bottom","userInfo","title","fontSize","color","palette","text","primary","margin","subTitle","secondary","CmtObjectSummary","align","anchorOrigin","showItemBadge","avatar","avatarProps","badge","badgeProps","titleProps","subTitleProps","classes","badgeContent","node","className","clsx","componentContent","CmtAvatar","src","alt","Box","component","RenderBadge","children","Badge","vertical","horizontal","prototype","PropTypes","oneOfType","string","element","object","bool","defaultProps","React","memo","rootAvatarGroup","props","borderColor","avatarStyle","outlineColor","borderWidth","outlineThickness","spacing","transition","avatarActiveStyle","main","elevation","zIndex","totalRecords","getPlaceholderChar","str","phCharLength","substr","toUpperCase","CmtAvatarGroup","items","max","srcKey","titleKey","avatarSize","onItemClick","onMoreClick","expandable","renderItemSummary","renderMore","moreVisibleOn","itemStyle","activeItemStyle","tooltipProps","rest","length","visibleItems","slice","restItems","useState","openMoreTooltip","setOpenMoreTooltip","renderedMoreItems","setRenderedMoreItems","ttProps","open","useEffect","handleItemClick","item","index","event","map","key","size","onClick","style","cursor","toString","onClickAway","array","isRequired","number","oneOf","func","AppCheckbox","name","id","value","label","labelPlacement","checked","onChange","required","error","helperText","icon","checkedIcon","control","emptyListContainer","minHeight","height","justifyContent","background","paper","border","alpha","common","black","flexRow","ListEmptyResult","loader","placeholder","loading","actionTitle","content","Fragment","mb","variant","minWidth","actionRoot","marginRight","ColorPickerPopup","setColor","anchorEl","setAnchorEl","tempColor","setTempColor","onCancel","Boolean","undefined","p","currentTarget","width","Popover","onClose","transformOrigin","hex","Button","inputBoxRoot","letterSpacing","dark","LabelForm","saveLabel","setName","nameError","setNameError","dispatch","useDispatch","validateForm","labelName","requiredMessage","closeFormPopup","handleSubmitLabel","clone","InputLabel","htmlFor","AppTextInput","target","ml","pb","mr","inBuildAppContainer","flex","flexWrap","opacity","visibility","overflow","breakpoints","down","perfectScrollbarTaskListCon","perfectScrollbarTaskListSidebar","inBuildAppSidebar","borderRight","inBuildAppMainContent","appNav","appNavItem","fontWeight","typography","fontWeightBold","whiteSpace","borderTopRightRadius","borderBottomRightRadius","appTaskNavItem","appNavHeaderItem","textTransform","appContentHeader","borderBottom","taskListSelectorRoot","up","taskTitle","searchAction","searchActionBar","right","updateTask","task","fetchStart","axios","put","then","data","status","fetchSuccess","type","UPDATE_TASK","payload","fetchError","onTaskSelect","SET_TASK_DETAIL","setFilterData","filterData","SET_FILTER_DATA","addTaskList","taskList","post","ADD_TASK_LIST","updateTaskLIst","UPDATE_TASK_LIST","userTitle","SidebarHeader","currentUser","useSelector","CmtDropdownMenu","TriggerComponent","profilePic","Typography","TaskListCell","count","onTaskListChange","isEdit","setEdit","anchorEditEl","setAnchorEditEl","ListRef","useRef","handleClose","e","stopPropagation","current","blur","ListItem","ref","button","active","ListItemIcon","ListItemText","Menu","keepMounted","MenuItem","delete","params","DELETE_TASK_LIST","deleteTaskLIst","TaskFilterCell","filterType","onTaskFilterChange","lineHeight","AddTaskList","withWidth","showFooter","useContext","AppContext","taskLists","isSideBarCollapsed","counter","tasks","setFilterType","setTaskList","get","SET_TASK_LIST_DATA","GET_TASKS_COUNTS","isCollapsed","getTaskListSidebarHeight","List","myTasks","all","important","CmtList","renderRow","lists","ContentHeader","search","setSearch","IconButton","TOGGLE_SIDEBAR_COLLAPSED","pl","find","getFilterType","CmtSearch","onlyIcon","taskCellItem","taskCellContent","taskCellContentAction","taskCellAction","titleRoot","textOverflow","verticalAlign","starIcon","arrowIconRoot","arrowIcon","dots","TaskCell","currentTask","assignedTaskList","completed","isCompleted","selected","mt","Checkbox","subTasks","filter","TaskStatus","COMPLETED","moment","dueDate","calendar","Tooltip","assigned","imgRoot","isStared","subTaskCelItem","textFieldRoot","SubTaskCell","removeSubTask","onSubTaskAssign","defaultValue","addSubTask","disabled","addTaskText","SubTask","onChangeSubTaskTile","onAddSubTask","alignCenter","addTaskView","addTaskFooter","borderTop","chipRoot","borderLeft","paddingLeft","TaskListSelectorView","btnRoot","dialogRoot","listItemRoot","paddingTop","avatarRoot","btnDisablColor","listItemTitleRoot","fontWeightRegular","listItemMailRoot","dialogActionsRoot","paddingRight","AssignTo","onAssignTo","assignedTo","setAssignedTo","Dialog","aria-labelledby","DialogTitle","users","email","AppRadioButton","DialogActions","selecBoxRoot","TaskListSelector","selectedTaskList","onTaskListSelect","Select","labelId","attachmentCellItem","AttachmentCell","attachment","mx","Attachments","attachments","setSize","HtmlTooltip","withStyles","tooltip","pointerEvents","white","maxWidth","pxToRem","AddTaskButton","onStartAddTask","openTooltip","setTooltipOpen","onAddButtonClick","py","px","placement","arrow","AddTask","isAddTaskView","setSubTasks","setTaskTitle","setSelectedTaskList","openAssignedTo","setOpenAssignedTo","assignFor","setAssignFor","setAttachments","useDropzone","onDrop","acceptedFiles","concat","file","metaData","getRootProps","getInputProps","sm","Date","getTime","assignTo","collaborators","Chip","Avatar","comments","getTodayDate","ADD_TASK","TaskListEmptyComponent","CmtImage","TaskListView","setAddTaskView","SET_TASKS_DATA","getTasks","getHeaderTitle","difference","diff","ListEmptyComponent","taskListWithHeader","currentHeaderTitle","headerTitle","header","generateHeaderList","onEndReached","getTaskListContainerHeight","AddCollaborators","updateCollaborators","selectedCollaborator","setSelectedCollaborator","some","subTaskTitle","RenderRow","placeholderLength","RenderMore","Collaborators","openCollaborator","setOpenCollaborator","commentCellItem","alignSelf","CommentCell","comment","CmtMediaObject","avatarPos","user","message","contentProps","CommentView","showingComments","setShowingComments","pt","titleView","starIconRoot","warning","subTaskRoot","DetailView","setTitle","subTasksNo","setSubTasksNo","xs","multiline","rowsMax","onBlur","my","AssignTaskList","menuItemsRoot","TaskOptions","onClickFullScreen","openAssignTaskList","setOpenAssignTaskList","DELETE_TASK","deleteTask","DetailHeader","onCloseDetail","commentField","textFieldArea","attachIconRoot","AddComment","commentText","setCommentText","SEND_MESSAGE","taskDetailRoot","cardRoot","perfectScrollbarTaskDetail","showFullView","setShowFullView","getTaskDetailContainerHeight","handleCloseFullView","Card","TaskList","SET_TASK_CURRENT_USER"],"mappings":"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","file":"static/js/156.01c38a07.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    '&.vertical': {\r\n      flexDirection: 'column',\r\n      textAlign: 'center',\r\n    },\r\n    '&.horizontal': {\r\n      '& $userInfo': {\r\n        marginLeft: 15,\r\n        marginTop: 0,\r\n      },\r\n    },\r\n  },\r\n  badgeRoot: {\r\n    backgroundColor: 'white',\r\n    boxShadow: '0 1px 3px 0 rgba(0, 0, 0, 0.15)',\r\n    borderRadius: 30,\r\n    padding: '4px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  badgeAvatarRoot: {\r\n    position: 'relative',\r\n    '&.top.center': {\r\n      marginTop: 14,\r\n    },\r\n    '&.top.center .MuiBadge-badge': {\r\n      top: 0,\r\n      left: '50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n    '&.bottom.left, &.bottom.center, &.bottom.right': {\r\n      marginBottom: 14,\r\n      '& .vertical': {\r\n        paddingBottom: 16,\r\n      },\r\n    },\r\n    '&.bottom.center .MuiBadge-badge': {\r\n      bottom: 0,\r\n      left: '50%',\r\n      transform: 'translate(-50%, 50%)',\r\n    },\r\n  },\r\n  userInfo: {\r\n    position: 'relative',\r\n    marginTop: 6,\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    color: theme.palette.text.primary,\r\n    margin: 0,\r\n  },\r\n  subTitle: {\r\n    fontSize: 12,\r\n    color: theme.palette.text.secondary,\r\n    margin: 0,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Box, Badge } from '@material-ui/core';\r\n\r\nimport CmtAvatar from '../CmtAvatar';\r\nimport useStyles from './CmtObjectSummary.style';\r\n\r\nconst CmtObjectSummary = ({\r\n  align,\r\n  anchorOrigin,\r\n  showItemBadge,\r\n  avatar,\r\n  avatarProps,\r\n  badge,\r\n  badgeProps,\r\n  title,\r\n  titleProps,\r\n  subTitle,\r\n  subTitleProps,\r\n}) => {\r\n  const classes = useStyles({ align, anchorOrigin });\r\n\r\n  let badgeContent = {\r\n    badgeContent: badge,\r\n    color: 'secondary',\r\n    ...badgeProps,\r\n  };\r\n\r\n  if (typeof badge !== 'string') {\r\n    const node = <div className={clsx(classes.badgeRoot, 'Cmt-badge')}>{badge}</div>;\r\n    badgeContent = { badgeContent: node, ...badgeProps };\r\n  }\r\n\r\n  const getAvatarComponent = () => {\r\n    if (showItemBadge) {\r\n      if (typeof avatar === 'string') {\r\n        return <CmtAvatar src={avatar} alt={title} {...avatarProps} />;\r\n      }\r\n      return avatar;\r\n    }\r\n\r\n    return (\r\n      <RenderBadge {...{ badge, anchorOrigin, badgeContent, classes }}>\r\n        {typeof avatar === 'string' ? <CmtAvatar src={avatar} alt={title} {...avatarProps} /> : avatar}\r\n      </RenderBadge>\r\n    );\r\n  };\r\n\r\n  const componentContent = () => {\r\n    return (\r\n      <div className={clsx(classes.root, align)}>\r\n        {getAvatarComponent()}\r\n        <div className={clsx(classes.userInfo, 'Cmt-user-info')}>\r\n          <Box component=\"p\" className={clsx(classes.title, 'Cmt-title')} {...titleProps}>\r\n            {title}\r\n          </Box>\r\n          <Box component=\"p\" className={clsx(classes.subTitle, 'Cmt-sub-title')} {...subTitleProps}>\r\n            {subTitle}\r\n          </Box>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const getComponent = () => {\r\n    if (showItemBadge) {\r\n      return <RenderBadge {...{ badge, anchorOrigin, badgeContent, classes }}>{componentContent()}</RenderBadge>;\r\n    }\r\n    return componentContent();\r\n  };\r\n\r\n  return getComponent();\r\n};\r\n\r\nconst RenderBadge = ({ badge, badgeContent, anchorOrigin, classes, children }) => {\r\n  return badge ? (\r\n    <Badge\r\n      className={clsx(classes.badgeAvatarRoot, 'Cmt-badge-avatar', anchorOrigin.vertical, anchorOrigin.horizontal)}\r\n      {...badgeContent}\r\n      anchorOrigin={anchorOrigin}>\r\n      {children}\r\n    </Badge>\r\n  ) : (\r\n    children\r\n  );\r\n};\r\n\r\nCmtObjectSummary.prototype = {\r\n  avatar: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  badge: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  subTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  avatarProps: PropTypes.object,\r\n  badgeProps: PropTypes.object,\r\n  showItemBadge: PropTypes.bool,\r\n  align: PropTypes.string,\r\n  anchorOrigin: PropTypes.object,\r\n  titleProps: PropTypes.object,\r\n  subTitleProps: PropTypes.object,\r\n};\r\n\r\nCmtObjectSummary.defaultProps = {\r\n  align: 'horizontal',\r\n  showItemBadge: false,\r\n  anchorOrigin: {\r\n    vertical: 'top',\r\n    horizontal: 'left',\r\n  },\r\n};\r\n\r\nexport default React.memo(CmtObjectSummary);\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { AvatarGroup } from '@material-ui/lab';\r\nimport { ClickAwayListener, makeStyles, Tooltip } from '@material-ui/core';\r\n\r\nimport CmtAvatar from '../CmtAvatar';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  rootAvatarGroup: props => ({\r\n    '& .MuiAvatar-root': {\r\n      borderColor: props.avatarStyle.outlineColor,\r\n      borderWidth: props.avatarStyle.outlineThickness,\r\n      marginLeft: -props.spacing,\r\n      transition: 'all 0.30s ease',\r\n      '&:first-child': {\r\n        marginLeft: 0,\r\n      },\r\n      '&:hover': {\r\n        borderColor: props.avatarActiveStyle.outlineColor\r\n          ? props.avatarActiveStyle.outlineColor\r\n          : theme.palette.primary.main,\r\n        borderWidth: props.avatarActiveStyle.outlineThickness,\r\n        boxShadow: `rgba(0,0,0,0.2) 0px 2px ${props.avatarActiveStyle.elevation}px -1px`,\r\n        zIndex: `${props.totalRecords} !important`,\r\n      },\r\n    },\r\n    '&:hover .Cmt-hoverEffect': {\r\n      marginLeft: 0,\r\n    },\r\n  }),\r\n}));\r\n\r\nconst getPlaceholderChar = (str, phCharLength) => {\r\n  if (str && phCharLength > 0) {\r\n    return str.substr(0, phCharLength).toUpperCase();\r\n  }\r\n};\r\n\r\nconst CmtAvatarGroup = ({\r\n  items,\r\n  max,\r\n  srcKey,\r\n  titleKey,\r\n  phCharLength,\r\n  avatarSize,\r\n  onItemClick,\r\n  onMoreClick,\r\n  spacing,\r\n  expandable,\r\n  renderItemSummary,\r\n  renderMore,\r\n  moreVisibleOn,\r\n  itemStyle,\r\n  activeItemStyle,\r\n  tooltipProps,\r\n  ...rest\r\n}) => {\r\n  const avatarStyle = () => ({\r\n    outlineColor: '#fafafa',\r\n    outlineThickness: 2,\r\n    ...itemStyle,\r\n  });\r\n\r\n  const avatarActiveStyle = () => ({\r\n    outlineColor: '',\r\n    outlineThickness: 2,\r\n    elevation: 3,\r\n    ...activeItemStyle,\r\n  });\r\n\r\n  const totalRecords = items.length;\r\n\r\n  const visibleItems = items.slice(0, max < totalRecords ? max - 1 : max);\r\n  const restItems = max < totalRecords ? items.slice(max - 1, totalRecords) : [];\r\n\r\n  const [openMoreTooltip, setOpenMoreTooltip] = useState(false);\r\n  const [renderedMoreItems, setRenderedMoreItems] = useState(\r\n    moreVisibleOn && moreVisibleOn !== 'click' && restItems.length && renderMore ? renderMore(restItems) : '',\r\n  );\r\n\r\n  const ttProps = moreVisibleOn === 'click' ? { open: openMoreTooltip } : {};\r\n\r\n  useEffect(() => {\r\n    if (openMoreTooltip) {\r\n      setRenderedMoreItems(renderMore(restItems));\r\n    } else if (moreVisibleOn === 'click') {\r\n      setRenderedMoreItems('');\r\n    }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [openMoreTooltip]);\r\n\r\n  const classes = useStyles({\r\n    spacing,\r\n    avatarStyle,\r\n    avatarActiveStyle,\r\n    totalRecords,\r\n  });\r\n\r\n  const handleItemClick = (item, index, event) => {\r\n    if (onItemClick) onItemClick(item, index, event);\r\n  };\r\n\r\n  return (\r\n    <AvatarGroup className={clsx(classes.rootAvatarGroup, 'Cmt-root-avatar-group')} max={max} {...rest}>\r\n      {visibleItems.map((item, index) => {\r\n        return renderItemSummary ? (\r\n          <Tooltip title={renderItemSummary(item, index)} key={index} {...tooltipProps}>\r\n            <CmtAvatar\r\n              className={expandable ? 'Cmt-hoverEffect' : ''}\r\n              alt={item[titleKey]}\r\n              src={item[srcKey]}\r\n              size={avatarSize}\r\n              onClick={event => handleItemClick(item, index, event)}\r\n              style={{ cursor: 'pointer', zIndex: index }}>\r\n              {getPlaceholderChar(item[titleKey], phCharLength)}\r\n            </CmtAvatar>\r\n          </Tooltip>\r\n        ) : (\r\n          <CmtAvatar\r\n            key={index}\r\n            className={expandable ? 'Cmt-hoverEffect' : ''}\r\n            alt={item[titleKey]}\r\n            src={item[srcKey]}\r\n            size={avatarSize}\r\n            onClick={event => handleItemClick(item, index, event)}\r\n            style={{ cursor: 'pointer', zIndex: index }}>\r\n            {getPlaceholderChar(item[titleKey], phCharLength)}\r\n          </CmtAvatar>\r\n        );\r\n      })}\r\n\r\n      {max < totalRecords && (\r\n        <Tooltip title={renderedMoreItems} {...ttProps}>\r\n          <CmtAvatar\r\n            className={clsx('Cmt-avatar-more', expandable ? 'Cmt-hoverEffect' : '')}\r\n            alt={restItems.length.toString()}\r\n            size={avatarSize}\r\n            style={{ cursor: 'pointer', zIndex: max }}\r\n            onClick={event => {\r\n              if ((onMoreClick && typeof onMoreClick) === 'function') onMoreClick(event);\r\n\r\n              if (moreVisibleOn === 'click') {\r\n                setOpenMoreTooltip(!openMoreTooltip);\r\n              }\r\n            }}>\r\n            <ClickAwayListener onClickAway={() => setOpenMoreTooltip(false)}>\r\n              <div>+{restItems.length}</div>\r\n            </ClickAwayListener>\r\n          </CmtAvatar>\r\n        </Tooltip>\r\n      )}\r\n    </AvatarGroup>\r\n  );\r\n};\r\n\r\nCmtAvatarGroup.prototype = {\r\n  items: PropTypes.array.isRequired,\r\n  max: PropTypes.number,\r\n  spacing: PropTypes.number,\r\n  srcKey: PropTypes.string,\r\n  titleKey: PropTypes.string,\r\n  phCharLength: PropTypes.number,\r\n  avatarSize: PropTypes.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.number]),\r\n  onItemClick: PropTypes.func,\r\n  onMoreClick: PropTypes.func,\r\n  expandable: PropTypes.bool,\r\n  renderItemSummary: PropTypes.func,\r\n  renderMore: PropTypes.func,\r\n  moreVisibleOn: PropTypes.oneOf(['hover', 'click']),\r\n  itemStyle: PropTypes.object,\r\n  activeItemStyle: PropTypes.object,\r\n  tooltipProps: PropTypes.object,\r\n};\r\n\r\nCmtAvatarGroup.defaultProps = {\r\n  items: [],\r\n  max: 5,\r\n  spacing: 8,\r\n  srcKey: 'src',\r\n  titleKey: 'title',\r\n  phCharLength: 1,\r\n  avatarSize: 'medium',\r\n  expandable: false,\r\n  moreVisibleOn: 'hover',\r\n  itemStyle: { outlineColor: '#fafafa', outlineThickness: 2 },\r\n  activeItemStyle: { outlineColor: '', outlineThickness: 2, elevation: 1 },\r\n};\r\n\r\nexport default CmtAvatarGroup;\r\n","import React from 'react';\r\nimport { Checkbox, FormControl, FormControlLabel, FormHelperText } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AppCheckbox = ({\r\n  name,\r\n  id,\r\n  value,\r\n  label,\r\n  labelPlacement,\r\n  checked,\r\n  onChange,\r\n  color,\r\n  required,\r\n  error,\r\n  helperText,\r\n  icon,\r\n  checkedIcon,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <FormControl required={required} error={error} component=\"fieldset\" {...rest}>\r\n      <FormControlLabel\r\n        value={value}\r\n        control={\r\n          <Checkbox\r\n            checked={checked}\r\n            name={name}\r\n            id={id || name}\r\n            onChange={onChange}\r\n            color={color}\r\n            icon={icon}\r\n            checkedIcon={checkedIcon}\r\n          />\r\n        }\r\n        label={label}\r\n        labelPlacement={labelPlacement}\r\n      />\r\n\r\n      {helperText && <FormHelperText error={error || helperText !== ''}>{helperText}</FormHelperText>}\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nAppCheckbox.prototype = {\r\n  name: PropTypes.string,\r\n  id: PropTypes.string,\r\n  checked: PropTypes.bool,\r\n  value: PropTypes.string,\r\n  label: PropTypes.string,\r\n  color: PropTypes.string,\r\n  labelPlacement: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  error: PropTypes.bool,\r\n  helperText: PropTypes.bool,\r\n  icon: PropTypes.element,\r\n  checkedIcon: PropTypes.element,\r\n};\r\n\r\nAppCheckbox.defaultProps = {\r\n  checked: false,\r\n  color: 'primary',\r\n  labelPlacement: 'end',\r\n  error: false,\r\n  helperText: '',\r\n};\r\n\r\nexport default AppCheckbox;\r\n","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { Box, Button, CircularProgress } from '@material-ui/core';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  emptyListContainer: {\r\n    flexDirection: 'column',\r\n    minHeight: 250,\r\n    height: '100%',\r\n    display: 'flex',\r\n    padding: 20,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: `1px solid ${alpha(theme.palette.common.black, 0.12)}`,\r\n    borderRadius: 4,\r\n    textAlign: 'center',\r\n  },\r\n  flexRow: {\r\n    flexDirection: 'row',\r\n  },\r\n}));\r\n\r\nconst ListEmptyResult = ({ loader, placeholder, loading, title, actionTitle, content, onClick, children }) => {\r\n  const classes = useStyles();\r\n  if (loading || loader) {\r\n    return (\r\n      <React.Fragment>\r\n        {placeholder ? (\r\n          placeholder\r\n        ) : (\r\n          <div className={clsx(classes.emptyListContainer, classes.flexRow, 'CmtList-EmptyResult')}>\r\n            <CircularProgress size={16} />\r\n            <span className=\"ml-2\">Loading...</span>\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className={clsx(classes.emptyListContainer, 'CmtList-EmptyResult')}>\r\n        {children ? (\r\n          children\r\n        ) : (\r\n          <React.Fragment>\r\n            {title && (\r\n              <Box component=\"h4\" fontSize={28} color=\"text.primary\" mb={3}>\r\n                {title}\r\n              </Box>\r\n            )}\r\n            <Box fontSize={18} component=\"p\" color=\"text.secondary\">\r\n              {content}\r\n            </Box>\r\n\r\n            {actionTitle && (\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                style={{ marginTop: 30, height: 45, minWidth: 150 }}\r\n                onClick={onClick}>\r\n                {actionTitle}\r\n              </Button>\r\n            )}\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ListEmptyResult;\r\n","import React, { useState } from 'react';\r\nimport { SketchPicker } from 'react-color';\r\nimport { Box, Button, Popover } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    '& .sketch-picker': {\r\n      boxShadow: 'none !important',\r\n    },\r\n  },\r\n  actionRoot: {\r\n    padding: 10,\r\n    '& .MuiButton-root:not(:last-child)': {\r\n      marginRight: 8,\r\n    },\r\n  },\r\n});\r\n\r\nconst ColorPickerPopup = ({ color, setColor }) => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [tempColor, setTempColor] = useState(color ? color : '#333333');\r\n\r\n  const openPicker = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const onCancel = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const onColorSelect = color => {\r\n    setTempColor(color.hex);\r\n  };\r\n\r\n  const onUpdate = () => {\r\n    setColor(tempColor);\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Box display=\"inline-block\" p=\"3px\" border={1} onClick={openPicker}>\r\n        <Box height={27} width={27} style={{ backgroundColor: color }} />\r\n      </Box>\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        className={classes.root}\r\n        onClose={onCancel}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}>\r\n        <SketchPicker color={tempColor} onChange={onColorSelect} />\r\n\r\n        <Box className={classes.actionRoot}>\r\n          <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={onUpdate}>\r\n            Done\r\n          </Button>\r\n          <Button size=\"small\" onClick={onCancel}>\r\n            Cancel\r\n          </Button>\r\n        </Box>\r\n      </Popover>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ColorPickerPopup;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Box, Button, InputLabel, makeStyles, Popover } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\nimport { requiredMessage } from '../../../constants/ErrorMessages';\r\nimport AppTextInput from '../formElements/AppTextInput';\r\nimport ColorPickerPopup from '../ColorPickerPopup';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  inputBoxRoot: {\r\n    '& .MuiInputBase-input': {\r\n      paddingBottom: 12,\r\n      fontSize: 14,\r\n      letterSpacing: 0.25,\r\n      color: theme.palette.common.dark,\r\n    },\r\n  },\r\n}));\r\n\r\nconst LabelForm = ({ title, anchorEl, onClose, label, saveLabel }) => {\r\n  const classes = useStyles();\r\n  const [color, setColor] = useState(label ? label.color : '#333333');\r\n  const [name, setName] = useState(label ? label.name : '');\r\n  const [nameError, setNameError] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (label) {\r\n      setName(label.name);\r\n      setColor(label.color);\r\n    }\r\n  }, [label]);\r\n\r\n  const validateForm = labelName => {\r\n    if (!labelName) {\r\n      setNameError(requiredMessage);\r\n    } else {\r\n      setNameError('');\r\n    }\r\n  };\r\n\r\n  const onLabelChange = event => {\r\n    const label = event.target.value;\r\n    setName(label);\r\n    validateForm(label);\r\n  };\r\n\r\n  const submitForm = () => {\r\n    validateForm(name);\r\n    if (name) {\r\n      handleSubmitLabel();\r\n    }\r\n  };\r\n\r\n  const closeFormPopup = () => {\r\n    setColor('#333333');\r\n    setName('');\r\n    if (onClose) onClose();\r\n  };\r\n\r\n  const handleSubmitLabel = () => {\r\n    dispatch(\r\n      saveLabel({\r\n        ...label,\r\n        name,\r\n        color,\r\n      }),\r\n    );\r\n    closeFormPopup();\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  return (\r\n    <Popover\r\n      id={id}\r\n      open={open}\r\n      anchorEl={anchorEl}\r\n      onClose={onClose}\r\n      anchorOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'center',\r\n      }}\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'center',\r\n      }}>\r\n      <Box p={4}>\r\n        <Box fontSize={12} color=\"text.secondary\" mb={2} clone>\r\n          <InputLabel htmlFor=\"my-input\">{title || 'Label Name'}</InputLabel>\r\n        </Box>\r\n        <Box display=\"flex\" alignItems=\"center\" mb={5}>\r\n          <AppTextInput\r\n            className={classes.inputBoxRoot}\r\n            value={name}\r\n            onChange={onLabelChange}\r\n            required\r\n            helperText={nameError}\r\n          />\r\n\r\n          <Box ml={4} pb={nameError ? '23px' : ''}>\r\n            <ColorPickerPopup color={color} setColor={setColor} />\r\n          </Box>\r\n        </Box>\r\n\r\n        <Box>\r\n          <Box mr={3} clone>\r\n            <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={submitForm}>\r\n              Apply\r\n            </Button>\r\n          </Box>\r\n          <Button size=\"small\" onClick={closeFormPopup}>\r\n            Cancel\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default LabelForm;\r\n","import { alpha, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  inBuildAppContainer: {\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    minWidth: 400,\r\n    flex: '0 1 1440px',\r\n    backgroundColor: theme.palette.background.paper,\r\n    borderRadius: 4,\r\n    flexDirection: 'row',\r\n    flexWrap: 'nowrap',\r\n    position: 'relative',\r\n    boxShadow: '0px 1px 3px rgba(0, 0, 0, 0.2), 0px 2px 1px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14)',\r\n    '&.collapsed': {\r\n      '& $inBuildAppSidebar': {\r\n        width: 72,\r\n      },\r\n      '& $inBuildAppMainContent': {\r\n        width: 'calc(100% - 72px)',\r\n      },\r\n      '& .Cmt-user-info, & .Cmt-nav-text, & .Cmt-nav-count, & .Cmt-more-vert-icon': {\r\n        opacity: 0,\r\n        visibility: 'hidden',\r\n      },\r\n      '& $appNavItem': {\r\n        marginLeft: 12,\r\n        marginRight: 11,\r\n        padding: '8px 16px',\r\n        borderRadius: '50%',\r\n        overflow: 'hidden',\r\n        width: 48,\r\n        height: 48,\r\n      },\r\n      '& $appNavHeaderItem': {\r\n        display: 'none',\r\n      },\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      minWidth: 240,\r\n    },\r\n  },\r\n  perfectScrollbarTaskListCon: {\r\n    height: props => `calc(100vh - ${props.height}px)`,\r\n  },\r\n  perfectScrollbarTaskListSidebar: {\r\n    height: props => `calc(100vh - ${props.height}px)`,\r\n  },\r\n  inBuildAppSidebar: {\r\n    width: 256,\r\n    transition: 'all 0.3s ease',\r\n    borderRight: `solid 1px ${theme.palette.borderColor.main}`,\r\n    overflow: 'hidden',\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: 72,\r\n      '& .Cmt-user-info, & .Cmt-nav-text, & .Cmt-nav-count, & .Cmt-more-vert-icon': {\r\n        opacity: 0,\r\n        visibility: 'hidden',\r\n      },\r\n    },\r\n  },\r\n  inBuildAppMainContent: {\r\n    width: 'calc(100% - 256px)',\r\n    transition: 'all 0.3s ease',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: 'calc(100% - 72px)',\r\n    },\r\n  },\r\n  appNav: {\r\n    padding: 0,\r\n  },\r\n  appNavItem: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '9px 16px 10px 20px',\r\n    marginRight: 16,\r\n    fontSize: 14,\r\n    fontWeight: theme.typography.fontWeightBold,\r\n    width: 'auto',\r\n    whiteSpace: 'nowrap',\r\n    borderTopRightRadius: 30,\r\n    borderBottomRightRadius: 30,\r\n    color: theme.palette.text.secondary,\r\n    transition: 'all 0.3s ease',\r\n    position: 'relative',\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginLeft: 12,\r\n      marginRight: 11,\r\n      padding: '8px 16px',\r\n      borderRadius: '50%',\r\n      overflow: 'hidden',\r\n      width: 48,\r\n      height: 48,\r\n    },\r\n    '& .Cmt-icon-root': {\r\n      minWidth: 10,\r\n    },\r\n    '& .MuiSvgIcon-root': {\r\n      fontSize: 18,\r\n    },\r\n    '& .Cmt-nav-text': {\r\n      marginLeft: 20,\r\n      transition: 'all 0.3s ease',\r\n      opacity: 1,\r\n      visibility: 'visible',\r\n      whiteSpace: 'nowrap',\r\n      '& .MuiTypography-body1': {\r\n        fontSize: 14,\r\n        fontWeight: theme.typography.fontWeightBold,\r\n      },\r\n    },\r\n    '& .Cmt-nav-count': {\r\n      transition: 'all 0.3s ease',\r\n      opacity: 1,\r\n      visibility: 'visible',\r\n    },\r\n    '&:hover, &:focus': {\r\n      color: theme.palette.text.primary,\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.1),\r\n      '& .Cmt-icon-root': {\r\n        color: theme.palette.text.primary,\r\n      },\r\n    },\r\n    '&.active': {\r\n      color: theme.palette.primary.main,\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.1),\r\n      '& .Cmt-icon-root': {\r\n        color: theme.palette.primary.main,\r\n      },\r\n      '&:hover, &:focus': {\r\n        '& .Cmt-icon-root': {\r\n          color: theme.palette.primary.main,\r\n        },\r\n      },\r\n    },\r\n  },\r\n  appTaskNavItem: {\r\n    '& .Cmt-more-vert-icon': {\r\n      transition: 'all 0.3s ease',\r\n      display: 'none',\r\n      '& .MuiSvgIcon-root': {\r\n        display: 'block',\r\n      },\r\n    },\r\n    '&:hover, &:focus': {\r\n      '& .Cmt-more-vert-icon': {\r\n        display: 'block',\r\n      },\r\n      '& .Cmt-nav-count': {\r\n        display: 'none',\r\n      },\r\n    },\r\n  },\r\n  appNavHeaderItem: {\r\n    position: 'relative',\r\n    padding: '24px 16px 20px 16px',\r\n    textTransform: 'uppercase',\r\n    fontSize: 10,\r\n    color: theme.palette.text.secondary,\r\n    letterSpacing: 1.5,\r\n    whiteSpace: 'nowrap',\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  appContentHeader: {\r\n    padding: '11px 16px 10px 16px',\r\n    borderBottom: `1px solid ${alpha(theme.palette.common.dark, 0.1)}`,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    height: 70,\r\n    [theme.breakpoints.down('sm')]: {\r\n      '& .icon-btn': {\r\n        display: 'none',\r\n      },\r\n    },\r\n  },\r\n  taskListSelectorRoot: {\r\n    fontSize: 18,\r\n    [theme.breakpoints.up('lg')]: {\r\n      fontSize: 20,\r\n    },\r\n  },\r\n  taskTitle: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginLeft: 16,\r\n    color: theme.palette.common.dark,\r\n    cursor: 'pointer',\r\n    '& .MuiSvgIcon-root': {\r\n      marginLeft: 20,\r\n      fontSize: 16,\r\n    },\r\n  },\r\n  searchAction: {\r\n    position: 'relative',\r\n    width: 38,\r\n    height: 38,\r\n    marginRight: 10,\r\n  },\r\n  searchActionBar: {\r\n    position: 'absolute',\r\n    right: 0,\r\n    top: 2,\r\n    zIndex: 1,\r\n    '& .MuiInputBase-root': {\r\n      border: '0 none !important',\r\n    },\r\n    '& .MuiInputBase-input': {\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import axios from 'axios';\r\nimport { fetchError, fetchStart, fetchSuccess } from './Common';\r\nimport {\r\n  ADD_TASK,\r\n  ADD_TASK_LIST,\r\n  DELETE_TASK,\r\n  DELETE_TASK_LIST,\r\n  GET_TASKS_COUNTS,\r\n  SEND_MESSAGE,\r\n  SET_FILTER_DATA,\r\n  SET_TASK_CURRENT_USER,\r\n  SET_TASK_DETAIL,\r\n  SET_TASK_LIST_DATA,\r\n  SET_TASKS_DATA,\r\n  TOGGLE_SIDEBAR_COLLAPSED,\r\n  UPDATE_TASK,\r\n  UPDATE_TASK_LIST,\r\n} from '../../@jumbo/constants/ActionTypes';\r\n\r\nexport const getTasks = filterData => {\r\n  return dispatch => {\r\n    dispatch(fetchStart());\r\n    axios.get('/tasks', { params: { filterData: filterData } }).then(data => {\r\n      if (data.status === 200) {\r\n        dispatch(fetchSuccess());\r\n        dispatch({\r\n          type: SET_TASKS_DATA,\r\n          payload: data.data,\r\n        });\r\n      } else {\r\n        dispatch(fetchError('Something went wrong'));\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport const addTask = task => {\r\n  return dispatch => {\r\n    dispatch(fetchStart());\r\n    axios.post('/tasks', { task }).then(data => {\r\n      if (data.status === 200) {\r\n        dispatch(fetchSuccess());\r\n        dispatch({\r\n          type: ADD_TASK,\r\n          payload: data.data,\r\n        });\r\n      } else {\r\n        dispatch(fetchError('Something went wrong'));\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport const updateTask = task => {\r\n  return dispatch => {\r\n    dispatch(fetchStart());\r\n    axios.put('/tasks', { task }).then(data => {\r\n      if (data.status === 200) {\r\n        dispatch(fetchSuccess());\r\n        dispatch({\r\n          type: UPDATE_TASK,\r\n          payload: task,\r\n        });\r\n      } else {\r\n        dispatch(fetchError('Something went wrong'));\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport const onTaskSelect = task => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: SET_TASK_DETAIL,\r\n      payload: task,\r\n    });\r\n  };\r\n};\r\n\r\nexport const deleteTask = task => {\r\n  return dispatch => {\r\n    dispatch(fetchStart());\r\n    axios.delete('/tasks', { params: { task } }).then(data => {\r\n      if (data.status === 200) {\r\n        dispatch(fetchSuccess());\r\n        dispatch({\r\n          type: DELETE_TASK,\r\n          payload: task,\r\n        });\r\n      } else {\r\n        dispatch(fetchError('Something went wrong'));\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport const setFilterData = filterData => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: SET_FILTER_DATA,\r\n      payload: filterData,\r\n    });\r\n  };\r\n};\r\n\r\nexport const sendMessage = message => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: SEND_MESSAGE,\r\n      payload: message,\r\n    });\r\n  };\r\n};\r\n\r\nexport const setCurrentUser = message => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: SET_TASK_CURRENT_USER,\r\n      payload: message,\r\n    });\r\n  };\r\n};\r\n\r\nexport const toggleExpandSidebar = () => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: TOGGLE_SIDEBAR_COLLAPSED,\r\n    });\r\n  };\r\n};\r\n\r\nexport const getTaskList = () => {\r\n  return dispatch => {\r\n    dispatch(fetchStart());\r\n    axios.get('/task_list').then(data => {\r\n      if (data.status === 200) {\r\n        dispatch(fetchSuccess());\r\n        dispatch({\r\n          type: SET_TASK_LIST_DATA,\r\n          payload: data.data.taskList,\r\n        });\r\n      } else {\r\n        dispatch(fetchError('Something went wrong'));\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport const addTaskList = taskList => {\r\n  return dispatch => {\r\n    dispatch(fetchStart());\r\n    axios.post('/task_list', { taskList }).then(data => {\r\n      if (data.status === 200) {\r\n        dispatch(fetchSuccess());\r\n        dispatch({\r\n          type: ADD_TASK_LIST,\r\n          payload: data.data,\r\n        });\r\n      } else {\r\n        dispatch(fetchError('Something went wrong'));\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport const updateTaskLIst = taskList => {\r\n  return dispatch => {\r\n    dispatch(fetchStart());\r\n    axios.put('/task_list', { taskList }).then(data => {\r\n      if (data.status === 200) {\r\n        dispatch(fetchSuccess());\r\n        dispatch({\r\n          type: UPDATE_TASK_LIST,\r\n          payload: taskList,\r\n        });\r\n      } else {\r\n        dispatch(fetchError('Something went wrong'));\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport const deleteTaskLIst = taskList => {\r\n  return dispatch => {\r\n    dispatch(fetchStart());\r\n    axios.delete('/task_list', { params: { taskList } }).then(data => {\r\n      if (data.status === 200) {\r\n        dispatch(fetchSuccess());\r\n        dispatch({\r\n          type: DELETE_TASK_LIST,\r\n          payload: taskList,\r\n        });\r\n      } else {\r\n        dispatch(fetchError('Something went wrong'));\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport const getTasksCounts = () => {\r\n  return dispatch => {\r\n    axios.get('/tasks/counter').then(data => {\r\n      if (data.status === 200) {\r\n        dispatch({ type: GET_TASKS_COUNTS, payload: data.data });\r\n      } else {\r\n        dispatch(fetchError('Something went wrong'));\r\n      }\r\n    });\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport CmtAvatar from '../../../../@coremat/CmtAvatar';\r\nimport clsx from 'clsx';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport { useSelector } from 'react-redux';\r\nimport CmtDropdownMenu from '../../../../@coremat/CmtDropdownMenu';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    padding: '15px 16px',\r\n  },\r\n  userInfo: {\r\n    marginLeft: 16,\r\n    transition: 'all 0.3s ease',\r\n    opacity: 1,\r\n    visibility: 'visible',\r\n  },\r\n  userTitle: {\r\n    color: theme.palette.text.primary,\r\n    marginBottom: 0,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    whiteSpace: 'nowrap',\r\n    '& .MuiSvgIcon-root': {\r\n      marginLeft: 16,\r\n    },\r\n  },\r\n}));\r\n\r\nconst items = [{ label: 'Account' }, { label: 'Setting' }, { label: 'Logout' }];\r\n\r\nconst SidebarHeader = () => {\r\n  const classes = useStyles();\r\n  const { currentUser } = useSelector(({ taskList }) => taskList);\r\n\r\n  return (\r\n    <CmtDropdownMenu\r\n      items={items}\r\n      TriggerComponent={\r\n        <Box className={classes.root}>\r\n          <CmtAvatar size={40} src={currentUser.profilePic} />\r\n          <Box className={clsx(classes.userInfo, 'Cmt-user-info')}>\r\n            <Typography className={classes.userTitle} component=\"h3\" variant=\"h6\">\r\n              {currentUser.name} <ArrowDropDownIcon />\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default SidebarHeader;\r\n","import React, { useRef, useState } from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport clsx from 'clsx';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport LabelIcon from '@material-ui/icons/Label';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Box from '@material-ui/core/Box';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteTaskLIst, updateTaskLIst } from '../../../../redux/actions/TaskList';\r\nimport LabelForm from '../../../../@jumbo/components/Common/LabelForm';\r\n\r\nconst TaskListCell = ({ taskList, count, item, onTaskListChange, classes }) => {\r\n  const [isEdit, setEdit] = React.useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const dispatch = useDispatch();\r\n  const [anchorEditEl, setAnchorEditEl] = useState(null);\r\n  const ListRef = useRef(null);\r\n\r\n  const handleClick = event => {\r\n    event.stopPropagation();\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = e => {\r\n    e.stopPropagation();\r\n    setAnchorEl(null);\r\n    ListRef.current.blur();\r\n  };\r\n  const onClickEdit = event => {\r\n    setEdit(true);\r\n    handleClose(event);\r\n    setAnchorEditEl(ListRef.current);\r\n  };\r\n\r\n  const handleEditClose = () => {\r\n    setAnchorEditEl(null);\r\n  };\r\n\r\n  const onClickDelete = e => {\r\n    handleClose(e);\r\n    dispatch(deleteTaskLIst(item));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ListItem\r\n        ref={ListRef}\r\n        button\r\n        className={clsx(classes.appNavItem, classes.appTaskNavItem, {\r\n          active: taskList === item.id,\r\n        })}\r\n        onClick={e => onTaskListChange(item.id)}>\r\n        <ListItemIcon className=\"Cmt-icon-root\">\r\n          <LabelIcon style={{ color: item.color }} />\r\n        </ListItemIcon>\r\n        <ListItemText className=\"Cmt-nav-text\" primary={item.name} />\r\n        {count > 0 && (\r\n          <Box component=\"span\" className=\"Cmt-nav-count\">\r\n            {count}\r\n          </Box>\r\n        )}\r\n\r\n        <Box className=\"Cmt-more-vert-icon\">\r\n          <MoreVertIcon onClick={handleClick} />\r\n        </Box>\r\n        <Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\r\n          <MenuItem onClick={onClickEdit}>Edit</MenuItem>\r\n          <MenuItem onClick={onClickDelete}>Delete</MenuItem>\r\n        </Menu>\r\n      </ListItem>\r\n\r\n      {isEdit && (\r\n        <LabelForm\r\n          anchorEl={anchorEditEl}\r\n          onClose={handleEditClose}\r\n          label={item}\r\n          setEdit={setEdit}\r\n          saveLabel={updateTaskLIst}\r\n        />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TaskListCell;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Box from '@material-ui/core/Box';\r\nimport ListItem from '@material-ui/core/ListItem';\r\n\r\nconst TaskFilterCell = ({ id, title, count, icon, classes, filterType, onTaskFilterChange }) => {\r\n  return (\r\n    <ListItem\r\n      button\r\n      className={clsx(classes.appNavItem, {\r\n        active: filterType === id,\r\n      })}\r\n      onClick={() => onTaskFilterChange(id)}>\r\n      <ListItemIcon className=\"Cmt-icon-root\">{icon}</ListItemIcon>\r\n      <ListItemText className=\"Cmt-nav-text\" primary={title} />\r\n      {count > 0 && (\r\n        <Box component=\"span\" className=\"Cmt-nav-count\">\r\n          {count}\r\n        </Box>\r\n      )}\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default TaskFilterCell;\r\n","import { alpha, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appNavItem: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '9px 16px 10px 20px',\r\n    marginRight: 16,\r\n    fontSize: 14,\r\n    fontWeight: theme.typography.fontWeightBold,\r\n    width: 'auto',\r\n    whiteSpace: 'nowrap',\r\n    borderTopRightRadius: 30,\r\n    borderBottomRightRadius: 30,\r\n    color: theme.palette.text.secondary,\r\n    transition: 'all 0.3s ease',\r\n    position: 'relative',\r\n    cursor: 'pointer',\r\n    '& .Cmt-icon-root': {\r\n      minWidth: 18,\r\n    },\r\n    '& .MuiSvgIcon-root': {\r\n      fontSize: 18,\r\n      display: 'block',\r\n    },\r\n    '& .Cmt-nav-text': {\r\n      marginTop: 4,\r\n      marginBottom: 4,\r\n      marginLeft: 20,\r\n      transition: 'all 0.3s ease',\r\n      opacity: 1,\r\n      visibility: 'visible',\r\n      fontSize: 14,\r\n      fontWeight: theme.typography.fontWeightBold,\r\n      lineHeight: 1.5,\r\n    },\r\n    '&:hover, &:focus': {\r\n      color: theme.palette.text.primary,\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.1),\r\n      '& .Cmt-icon-root': {\r\n        color: theme.palette.text.primary,\r\n      },\r\n    },\r\n    '&.active': {\r\n      color: theme.palette.primary.main,\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.1),\r\n      '& .Cmt-icon-root': {\r\n        color: theme.palette.primary.main,\r\n      },\r\n      '&:hover, &:focus': {\r\n        '& .Cmt-icon-root': {\r\n          color: theme.palette.primary.main,\r\n        },\r\n      },\r\n    },\r\n    '.collapsed &': {\r\n      padding: '8px 16px',\r\n      marginLeft: 12,\r\n      marginRight: 11,\r\n      borderRadius: '50%',\r\n      overflow: 'hidden',\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: '8px 16px',\r\n      marginLeft: 12,\r\n      marginRight: 11,\r\n      borderRadius: '50%',\r\n      overflow: 'hidden',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useState } from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport useStyles from './AddTaskList.style';\r\nimport { addTaskList } from '../../../../redux/actions/TaskList';\r\nimport LabelForm from '../../../../@jumbo/components/Common/LabelForm';\r\n\r\nconst AddTaskList = () => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Box className={classes.appNavItem} onClick={handleClick}>\r\n        <Box className=\"Cmt-icon-root\">\r\n          <AddIcon />\r\n        </Box>\r\n        <Box component=\"span\" className=\"Cmt-nav-text\">\r\n          Create Task list\r\n        </Box>\r\n      </Box>\r\n\r\n      <LabelForm title=\"Task List\" anchorEl={anchorEl} onClose={handleClose} saveLabel={addTaskList} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AddTaskList;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport useStyles from '../index.style';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { getTaskList, getTasksCounts, setFilterData } from '../../../../redux/actions/TaskList';\r\nimport CmtList from '../../../../@coremat/CmtList';\r\nimport SidebarHeader from './SidebarHeader';\r\nimport TaskListCell from './TaskListCell';\r\nimport TaskFilterCell from './TaskFilterCell';\r\nimport AddTaskList from './AddTaskList';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { getTaskListSidebarHeight } from '../../../../@jumbo/constants/AppConstants';\r\nimport { withWidth } from '@material-ui/core';\r\nimport AppContext from '../../../../@jumbo/components/contextProvider/AppContextProvider/AppContext';\r\n\r\nconst Sidebar = ({ width }) => {\r\n  const { showFooter } = useContext(AppContext);\r\n  const { taskLists, filterData, isSideBarCollapsed, counter, tasks } = useSelector(({ taskList }) => taskList);\r\n  const dispatch = useDispatch();\r\n  const [filterType, setFilterType] = useState(filterData.filterType ? filterData.filterType : 0);\r\n  const [taskList, setTaskList] = useState(filterData.taskList ? filterData.taskList : 0);\r\n\r\n  useEffect(() => {\r\n    dispatch(getTaskList());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(setFilterData({ filterType, taskList }));\r\n  }, [dispatch, filterType, taskList]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getTasksCounts());\r\n  }, [dispatch, filterType, taskList, tasks]);\r\n\r\n  const onTaskFilterChange = value => {\r\n    setFilterType(value);\r\n    setTaskList(null);\r\n  };\r\n  const onTaskListChange = value => {\r\n    setTaskList(value);\r\n    setFilterType(null);\r\n  };\r\n\r\n  const classes = useStyles({\r\n    isCollapsed: isSideBarCollapsed,\r\n    height: getTaskListSidebarHeight(width, showFooter),\r\n  });\r\n\r\n  return (\r\n    <Box className={classes.inBuildAppSidebar}>\r\n      <SidebarHeader />\r\n      <PerfectScrollbar className={classes.perfectScrollbarTaskListSidebar}>\r\n        <List component=\"nav\" className={classes.appNav}>\r\n          <TaskFilterCell\r\n            key={1}\r\n            id={1}\r\n            title=\"Assigned to me\"\r\n            classes={classes}\r\n            filterType={filterType}\r\n            onTaskFilterChange={onTaskFilterChange}\r\n            icon={<PersonIcon />}\r\n            count={counter ? counter.myTasks : 0}\r\n          />\r\n          <TaskFilterCell\r\n            key={2}\r\n            id={2}\r\n            title=\"All Tasks\"\r\n            classes={classes}\r\n            filterType={filterType}\r\n            onTaskFilterChange={onTaskFilterChange}\r\n            icon={<FormatListBulletedIcon />}\r\n            count={counter ? counter.all : 0}\r\n          />\r\n          <TaskFilterCell\r\n            key={3}\r\n            id={3}\r\n            title=\"Important\"\r\n            classes={classes}\r\n            filterType={filterType}\r\n            onTaskFilterChange={onTaskFilterChange}\r\n            icon={<StarBorderIcon />}\r\n            count={counter ? counter.important : 0}\r\n          />\r\n\r\n          <ListItem component=\"div\" key={5} className={classes.appNavHeaderItem}>\r\n            Task List\r\n          </ListItem>\r\n\r\n          <CmtList\r\n            data={taskLists}\r\n            renderRow={(item, index) => (\r\n              <TaskListCell\r\n                key={index}\r\n                taskList={taskList}\r\n                item={item}\r\n                count={counter ? counter.lists[item.id] : 0}\r\n                classes={classes}\r\n                onTaskListChange={onTaskListChange}\r\n              />\r\n            )}\r\n          />\r\n          <AddTaskList />\r\n        </List>\r\n      </PerfectScrollbar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default withWidth()(Sidebar);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport useStyles from './index.style';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { setFilterData, toggleExpandSidebar } from '../../../redux/actions/TaskList';\r\nimport CmtSearch from '../../../@coremat/CmtSearch';\r\n\r\nconst ContentHeader = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [search, setSearch] = useState('');\r\n  const { taskLists, filterData } = useSelector(({ taskList }) => taskList);\r\n  useEffect(() => {\r\n    dispatch(setFilterData({ search }));\r\n  }, [dispatch, search]);\r\n\r\n  const onSearchTask = e => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  const getFilterType = e => {\r\n    if (filterData.taskList && filterData.taskList > 0) {\r\n      const selectedTaskList = taskLists.find(data => data.id === filterData.taskList);\r\n      return selectedTaskList.name;\r\n    } else if (filterData.filterType && filterData.filterType > 0) {\r\n      switch (filterData.filterType) {\r\n        case 1: {\r\n          return 'My Tasks';\r\n        }\r\n        case 3: {\r\n          return 'Important';\r\n        }\r\n        default: {\r\n          return 'All Tasks';\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.appContentHeader}>\r\n      <IconButton className=\"icon-btn\" onClick={() => dispatch(toggleExpandSidebar())}>\r\n        <MenuIcon />\r\n      </IconButton>\r\n      <Box pl={3} className={classes.taskListSelectorRoot}>\r\n        {getFilterType()}\r\n      </Box>\r\n      <Box ml=\"auto\" display=\"flex\" alignItems=\"center\">\r\n        <Box className={classes.searchAction}>\r\n          <Box className={classes.searchActionBar}>\r\n            <CmtSearch onlyIcon onChange={onSearchTask} />\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ContentHeader;\r\n","import { alpha, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  badgeRoot: {\r\n    fontSize: 14,\r\n    letterSpacing: 0.5,\r\n    borderRadius: 4,\r\n    marginBottom: 5,\r\n    padding: '4px 12px',\r\n    whiteSpace: 'nowrap',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: 10,\r\n      marginBottom: 0,\r\n    },\r\n  },\r\n  taskCellItem: {\r\n    color: theme.palette.text.secondary,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    padding: '16px 18px',\r\n    width: '100%',\r\n    position: 'relative',\r\n    overflow: 'hidden',\r\n    cursor: 'pointer',\r\n    transition: 'all .2s',\r\n    '&:hover, &.selected': {\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.04),\r\n      '& $titleRoot': {\r\n        color: theme.palette.text.primary,\r\n      },\r\n      '& $arrowIconRoot': {\r\n        width: 40,\r\n        opacity: 1,\r\n        visibility: 'visible',\r\n        marginLeft: 4,\r\n      },\r\n    },\r\n    '&:hover': {\r\n      transform: 'translateY(-4px)',\r\n      boxShadow: `0 3px 10px 0 ${alpha(theme.palette.common.dark, 0.2)}`,\r\n    },\r\n    '&.completed': {\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.08),\r\n      '& $titleRoot': {\r\n        color: theme.palette.text.primary,\r\n      },\r\n    },\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      right: 0,\r\n      left: 70,\r\n      bottom: 0,\r\n      height: 1,\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.08),\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n    },\r\n  },\r\n  taskCellContent: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    alignItems: 'flex-start',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 'calc(100% - 155px)',\r\n    },\r\n  },\r\n  taskCellContentAction: {\r\n    width: 'calc(100% - 55px)',\r\n  },\r\n  taskCellAction: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    marginLeft: 54,\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: 8,\r\n      width: 150,\r\n      justifyContent: 'flex-end',\r\n    },\r\n  },\r\n  titleRoot: {\r\n    marginBottom: 4,\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    whiteSpace: 'nowrap',\r\n    width: '100%',\r\n    display: 'inline-block',\r\n    verticalAlign: 'middle',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 'calc(100% - 135px)',\r\n    },\r\n  },\r\n  starIcon: {\r\n    '& .MuiSvgIcon-root': {\r\n      fontSize: 20,\r\n    },\r\n  },\r\n  arrowIconRoot: {\r\n    width: 0,\r\n    opacity: 0,\r\n    marginLeft: 0,\r\n    visibility: 'hidden',\r\n    transition: 'all 0.3s ease',\r\n  },\r\n  arrowIcon: {\r\n    '& .MuiSvgIcon-root': {\r\n      fontSize: 16,\r\n    },\r\n  },\r\n  dots: {\r\n    marginLeft: 8,\r\n    marginRight: 6,\r\n    width: 4,\r\n    height: 4,\r\n    backgroundColor: theme.palette.text.secondary,\r\n    borderRadius: '50%',\r\n    display: 'inline-block',\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport Box from '@material-ui/core/Box';\r\nimport { TaskStatus } from '../../../../@fake-db/apps/todo';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { onTaskSelect, updateTask } from '../../../../redux/actions/TaskList';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport clsx from 'clsx';\r\n\r\nimport useStyles from './TaskCell.style';\r\nimport CmtAvatar from '../../../../@coremat/CmtAvatar';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { alpha } from '@material-ui/core/styles';\r\n\r\nconst TaskCell = ({ data }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { taskLists, currentTask } = useSelector(({ taskList }) => taskList);\r\n\r\n  const assignedTaskList = taskLists.find(item => item.id === data.taskList);\r\n\r\n  const onClickStarredIcon = status => {\r\n    dispatch(updateTask({ ...data, isStared: status }));\r\n    if (currentTask.id === data.id) {\r\n      dispatch(onTaskSelect({ ...data, isStared: status }));\r\n    }\r\n  };\r\n\r\n  const onToggleMarkComplete = event => {\r\n    dispatch(updateTask({ ...data, isCompleted: event.target.checked }));\r\n    if (currentTask && currentTask.id === data.id) {\r\n      dispatch(onTaskSelect({ ...data, isCompleted: event.target.checked }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      className={clsx(classes.taskCellItem, {\r\n        completed: data.isCompleted,\r\n        selected: currentTask && data.id === currentTask.id,\r\n      })}\r\n      onClick={() => dispatch(onTaskSelect(data))}>\r\n      <Box className={classes.taskCellContent}>\r\n        <Box mt={-1} mr={3} onClick={e => e.stopPropagation()}>\r\n          <Checkbox\r\n            color=\"primary\"\r\n            checked={data.isCompleted}\r\n            onChange={onToggleMarkComplete}\r\n            icon={<RadioButtonUncheckedIcon />}\r\n            checkedIcon={<CheckCircleIcon />}\r\n          />\r\n        </Box>\r\n\r\n        <Box className={classes.taskCellContentAction}>\r\n          <Typography className={classes.titleRoot} component=\"span\" variant=\"h4\">\r\n            {data.title}\r\n          </Typography>\r\n          {assignedTaskList && (\r\n            <Box\r\n              component=\"span\"\r\n              className={classes.badgeRoot}\r\n              style={{\r\n                backgroundColor: alpha(assignedTaskList.color, 0.1),\r\n                color: assignedTaskList.color,\r\n              }}>\r\n              {assignedTaskList.name}\r\n            </Box>\r\n          )}\r\n          <Box mt={1} display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\" component=\"p\" color=\"text.disabled\" fontSize={12}>\r\n            {data.subTasks && data.subTasks.filter(data => data.status === TaskStatus.COMPLETED).length} {' of '}\r\n            {data.subTasks.length}\r\n            {' Completed'}\r\n            <Box component=\"span\" className={classes.dots} />\r\n            {' Due on: '} {moment(data.dueDate).calendar()}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Box className={classes.taskCellAction}>\r\n        <Tooltip title={data.assigned ? data.assigned.name : 'Unassigned'}>\r\n          <CmtAvatar\r\n            className={classes.imgRoot}\r\n            src={data.assigned ? data.assigned.profilePic : null}\r\n            size={40}\r\n            alt={data.assigned ? data.assigned.name : 'Unassigned'}\r\n          />\r\n        </Tooltip>\r\n        <Box ml={2} onClick={e => e.stopPropagation()}>\r\n          <Checkbox\r\n            icon={<StarBorderIcon />}\r\n            checkedIcon={<StarIcon style={{ color: '#FF8C00' }} />}\r\n            checked={data.isStared}\r\n            onChange={e => onClickStarredIcon(e.target.checked)}\r\n            size=\"small\"\r\n          />\r\n        </Box>\r\n        <Box className={classes.arrowIconRoot}>\r\n          <IconButton className={classes.arrowIcon}>\r\n            <ArrowForwardIosIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TaskCell;\r\n","import React from 'react';\r\nimport { Box, Checkbox, Tooltip } from '@material-ui/core';\r\nimport { alpha } from '@material-ui/core/styles';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport clsx from 'clsx';\r\nimport CmtAvatar from '../../../../../@coremat/CmtAvatar';\r\nimport AppTextInput from '../../../../../@jumbo/components/Common/formElements/AppTextInput';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  subTaskCelItem: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    backgroundColor: alpha(theme.palette.common.dark, 0.05),\r\n    borderRadius: 4,\r\n    marginBottom: 1,\r\n    marginTop: 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      alignItems: 'center',\r\n      flexDirection: 'row',\r\n    },\r\n  },\r\n  textFieldRoot: {\r\n    marginLeft: 6,\r\n    width: '100%',\r\n    '& .MuiInput-underline': {\r\n      '&:before': {\r\n        display: 'none',\r\n      },\r\n    },\r\n  },\r\n  imgRoot: {\r\n    borderRadius: '50%',\r\n    display: 'block',\r\n  },\r\n}));\r\n\r\nconst SubTaskCell = ({ data, index, onChange, removeSubTask, onSubTaskAssign }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={clsx(classes.subTaskCelItem, 'subtask-cellitem')}>\r\n      <Box flex={1} display=\"flex\" alignItems=\"center\">\r\n        <Checkbox color=\"primary\" icon={<RadioButtonUncheckedIcon />} checkedIcon={<RadioButtonCheckedIcon />} />\r\n        <AppTextInput\r\n          id=\"standard-basic\"\r\n          className={classes.textFieldRoot}\r\n          placeholder=\"Add a SubTask\"\r\n          defaultValue={data.title}\r\n          onChange={e => onChange(e.target.value, index)}\r\n        />\r\n      </Box>\r\n      <Box ml={2} display=\"flex\" alignItems=\"center\">\r\n        {data.assigned ? (\r\n          <Box mr={2}>\r\n            <Tooltip title={data.assigned.name}>\r\n              <CmtAvatar\r\n                onClick={() => onSubTaskAssign(data, index)}\r\n                className={classes.imgRoot}\r\n                src={data.assigned.profilePic}\r\n                size={35}\r\n                alt={data.assigned.name}\r\n              />\r\n            </Tooltip>\r\n          </Box>\r\n        ) : (\r\n          <IconButton onClick={() => onSubTaskAssign(data, index)}>\r\n            <PersonAddIcon />\r\n          </IconButton>\r\n        )}\r\n        <IconButton onClick={() => removeSubTask(data)}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SubTaskCell;\r\n","import React from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CmtList from '../../../../../@coremat/CmtList';\r\nimport SubTaskCell from './SubTaskCell';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  addSubTask: {\r\n    color: theme.palette.text.disabled,\r\n    display: 'flex',\r\n    padding: '5px 12px',\r\n    cursor: 'pointer',\r\n  },\r\n  addTaskText: {\r\n    fontSize: 14,\r\n    letterSpacing: 0.5,\r\n    [theme.breakpoints.up('sm')]: {\r\n      fontSize: 16,\r\n    },\r\n  },\r\n}));\r\n\r\nconst SubTask = ({ subTasks, onChangeSubTaskTile, onAddSubTask, removeSubTask, onSubTaskAssign }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\">\r\n      <Box onClick={onAddSubTask} className={clsx(classes.addSubTask, 'add-subtask')}>\r\n        <AddIcon />\r\n        <Box component=\"span\" ml={4} className={classes.addTaskText}>\r\n          Add a SubTask\r\n        </Box>\r\n      </Box>\r\n      <CmtList\r\n        data={subTasks}\r\n        renderRow={(data, index) => (\r\n          <SubTaskCell\r\n            data={data}\r\n            key={data.id}\r\n            index={index}\r\n            onSubTaskAssign={onSubTaskAssign}\r\n            onChange={onChangeSubTaskTile}\r\n            removeSubTask={removeSubTask}\r\n          />\r\n        )}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SubTask;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    color: theme.palette.text.disabled,\r\n    border: `1px solid ${theme.palette.borderColor.main}`,\r\n    padding: 16,\r\n    display: 'flex',\r\n    borderRadius: 4,\r\n  },\r\n  alignCenter: {\r\n    alignItems: 'center',\r\n  },\r\n  addTaskText: {\r\n    fontSize: 14,\r\n    letterSpacing: 0.5,\r\n    [theme.breakpoints.up('sm')]: {\r\n      fontSize: 16,\r\n    },\r\n  },\r\n  addTaskView: {\r\n    color: theme.palette.text.disabled,\r\n    border: `1px solid ${theme.palette.borderColor.main}`,\r\n    boxShadow: '0px 1px 3px rgba(0, 0, 0, 0.2), 0px 2px 1px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14)',\r\n    borderRadius: 4,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflow: 'hidden',\r\n  },\r\n  textFieldRoot: {\r\n    width: '100%',\r\n    '& .MuiInput-underline': {\r\n      '&:before': {\r\n        display: 'none',\r\n      },\r\n    },\r\n  },\r\n  addTaskFooter: {\r\n    borderTop: `1px solid ${theme.palette.borderColor.main}`,\r\n    padding: '4px 16px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.up('sm')]: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      flexWrap: 'wrap',\r\n    },\r\n  },\r\n  chipRoot: {\r\n    border: '0 none',\r\n    borderLeft: `1px solid ${theme.palette.borderColor.main}`,\r\n    paddingLeft: 16,\r\n    borderRadius: 0,\r\n    marginRight: 20,\r\n    height: 26,\r\n  },\r\n  TaskListSelectorView: {\r\n    borderLeft: `1px solid ${theme.palette.borderColor.main}`,\r\n    paddingLeft: 16,\r\n    height: 26,\r\n  },\r\n  btnRoot: {\r\n    color: theme.palette.text.disabled,\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React, { useState } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CmtList from '../../../../@coremat/CmtList';\r\nimport { users } from '../../../../@fake-db/apps/todo';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport CmtAvatar from '../../../../@coremat/CmtAvatar';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport AppRadioButton from '../../../../@jumbo/components/Common/formElements/AppRadioButton';\r\nimport AppTextInput from '../../../../@jumbo/components/Common/formElements/AppTextInput';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  dialogRoot: {\r\n    '& .MuiDialog-paperWidthSm': {\r\n      width: 340,\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: 440,\r\n      },\r\n    },\r\n  },\r\n  titleRoot: {\r\n    borderBottom: `1px solid ${theme.palette.borderColor.main}`,\r\n    paddingBottom: 16,\r\n  },\r\n  listItemRoot: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '8px 24px',\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingTop: 12,\r\n      paddingBottom: 12,\r\n    },\r\n  },\r\n  avatarRoot: {\r\n    marginRight: 10,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 56,\r\n      height: 56,\r\n      marginRight: 16,\r\n    },\r\n  },\r\n  btnDisablColor: {\r\n    color: theme.palette.text.disabled,\r\n  },\r\n  listItemTitleRoot: {\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    marginBottom: 5,\r\n    letterSpacing: 0.15,\r\n    marginLeft: 2,\r\n  },\r\n  listItemMailRoot: {\r\n    fontSize: 14,\r\n    color: theme.palette.text.secondary,\r\n    letterSpacing: 0.25,\r\n  },\r\n  dialogActionsRoot: {\r\n    paddingLeft: 24,\r\n    paddingRight: 24,\r\n  },\r\n}));\r\n\r\nconst AssignTo = ({ assigned, handleClose, open, onAssignTo }) => {\r\n  const [assignedTo, setAssignedTo] = useState(assigned ? assigned : {});\r\n  const classes = useStyles();\r\n  return (\r\n    <Dialog className={classes.dialogRoot} onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle id=\"simple-dialog-title\">\r\n        <Typography className={classes.titleRoot} component=\"div\" variant=\"body1\">\r\n          Assign to\r\n        </Typography>\r\n      </DialogTitle>\r\n      <CmtList\r\n        data={users}\r\n        renderRow={item => (\r\n          <Box component=\"div\" className={classes.listItemRoot} key={item.id}>\r\n            <CmtAvatar className={classes.avatarRoot} src={item.profilePic} />\r\n            <Box>\r\n              <Typography component=\"div\" variant=\"h4\" className={classes.listItemTitleRoot}>\r\n                {item.name}\r\n              </Typography>\r\n              <Typography component=\"div\" variant=\"h4\" className={classes.listItemMailRoot}>\r\n                {item.email}\r\n              </Typography>\r\n            </Box>\r\n\r\n            <Box ml=\"auto\">\r\n              <AppRadioButton checked={assignedTo.id === item.id} onChange={() => setAssignedTo(item)} />\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      />\r\n\r\n      <Box className={classes.listItemRoot}>\r\n        <CmtAvatar className={classes.avatarRoot}>\r\n          <PersonAddIcon />\r\n        </CmtAvatar>\r\n        <AppTextInput value=\"\" placeholder=\"Type name or email address to\" />\r\n      </Box>\r\n\r\n      <DialogActions className={classes.dialogActionsRoot}>\r\n        <Button onClick={handleClose} className={classes.btnDisablColor}>\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            handleClose();\r\n            onAssignTo(assignedTo);\r\n          }}\r\n          color=\"primary\">\r\n          Apply\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AssignTo;\r\n","import React from 'react';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  selecBoxRoot: {\r\n    '&.MuiInput-underline:before, &.MuiInput-underline:after': {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst TaskListSelector = ({ selectedTaskList = 1, taskLists, onTaskListSelect }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Select\r\n      className={clsx(classes.selecBoxRoot, 'select-box')}\r\n      labelId=\"demo-simple-select-label\"\r\n      id=\"demo-simple-select\"\r\n      value={selectedTaskList}\r\n      onChange={e => onTaskListSelect(e.target.value)}>\r\n      {taskLists.map(taskList => (\r\n        <MenuItem key={taskList.id} value={taskList.id}>\r\n          {taskList.name}\r\n        </MenuItem>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\n\r\nexport default TaskListSelector;\r\n","import React from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport { alpha } from '@material-ui/core/styles';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  attachmentCellItem: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    backgroundColor: alpha(theme.palette.common.dark, 0.05),\r\n    color: theme.palette.text.primary,\r\n    borderRadius: 30,\r\n    marginRight: 12,\r\n    marginBottom: 8,\r\n    padding: '5px 12px',\r\n    '& .MuiSvgIcon-root': {\r\n      fontSize: 18,\r\n    },\r\n  },\r\n}));\r\n\r\nconst AttachmentCell = ({ attachment }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.attachmentCellItem}>\r\n      <FolderIcon />\r\n      <Box mx={2}>{attachment.name} </Box>\r\n      <MoreHorizIcon />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AttachmentCell;\r\n","import React, { useState } from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport AttachmentCell from './AttachmentCell';\r\n\r\nconst Attachments = ({ attachments }) => {\r\n  const [size, setSize] = useState(2);\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\" mb={5}>\r\n      {attachments.slice(0, size).map(attachment => (\r\n        <AttachmentCell key={attachment.id} attachment={attachment} />\r\n      ))}\r\n      {attachments.length > size ? (\r\n        <Box component=\"span\" color=\"text.disabled\" className=\"pointer\" mb={2} onClick={() => setSize(attachments.length)}>\r\n          +{attachments.length - size} More\r\n        </Box>\r\n      ) : null}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Attachments;\r\n","import React from 'react';\r\nimport { Box, IconButton, Tooltip, Typography } from '@material-ui/core';\r\nimport { alpha, withStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport useStyles from './index.style';\r\n\r\nconst HtmlTooltip = withStyles(theme => ({\r\n  tooltip: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    pointerEvents: 'auto !important',\r\n    color: theme.palette.common.white,\r\n    maxWidth: 220,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    border: '1px solid #dadde9',\r\n    padding: 20,\r\n    position: 'relative',\r\n    '& .textColor': {\r\n      color: alpha(theme.palette.common.white, 0.74),\r\n    },\r\n    '& .closeBtn': {\r\n      position: 'absolute',\r\n      right: 0,\r\n      top: 0,\r\n      zIndex: 1,\r\n      '& .MuiSvgIcon-root': {\r\n        fontSize: 16,\r\n      },\r\n    },\r\n    '& .MuiTooltip-arrow': {\r\n      color: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(Tooltip);\r\n\r\nconst AddTaskButton = ({ onStartAddTask, openTooltip, setTooltipOpen }) => {\r\n  const classes = useStyles();\r\n\r\n  const onAddButtonClick = event => {\r\n    event.stopPropagation();\r\n    setTooltipOpen(false);\r\n    onStartAddTask();\r\n  };\r\n\r\n  const onTooltipCLoseButton = event => {\r\n    event.stopPropagation();\r\n    setTooltipOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Box py={6} px={8}>\r\n      <Box className={clsx(classes.root, classes.alignCenter)}>\r\n        <HtmlTooltip\r\n          open={openTooltip}\r\n          title={\r\n            <React.Fragment>\r\n              <IconButton className=\"closeBtn\" onClick={onTooltipCLoseButton}>\r\n                <CloseIcon />\r\n              </IconButton>\r\n              <Typography component=\"h6\">Create Task</Typography>\r\n              <Box component=\"p\" className=\"textColor\" mt={2} mb={3}>\r\n                Click here to add your first task or subtask.\r\n              </Box>\r\n              <Box display=\"flex\" alignItems=\"center\">\r\n                <PlayCircleOutlineIcon />\r\n                <Box component=\"span\" ml={3}>\r\n                  How It Works\r\n                </Box>\r\n              </Box>\r\n            </React.Fragment>\r\n          }\r\n          placement=\"bottom-start\"\r\n          arrow>\r\n          <AddIcon className=\"pointer\" onClick={onAddButtonClick} />\r\n        </HtmlTooltip>\r\n        <Box component=\"span\" ml={6} className={clsx(classes.addTaskText, 'pointer')} onClick={onAddButtonClick}>\r\n          Add a Task\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddTaskButton;\r\n","import React, { useState } from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\r\n\r\nimport SubTasks from './SubTask';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport useStyles from './index.style';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport AssignTo from './AssignTo';\r\nimport TaskListSelector from '../TaskListSelector';\r\nimport Attachments from '../Attachments';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addTask } from '../../../../redux/actions/TaskList';\r\nimport { getTodayDate } from '../../../../@jumbo/utils/dateHelper';\r\nimport AppTextInput from '../../../../@jumbo/components/Common/formElements/AppTextInput';\r\nimport AddTaskButton from './AddTaskButton';\r\n\r\nconst AddTask = ({ isAddTaskView, onStartAddTask }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [subTasks, setSubTasks] = useState([]);\r\n  const [taskTitle, setTaskTitle] = useState('');\r\n  const { taskLists } = useSelector(({ taskList }) => taskList);\r\n  const [selectedTaskList, setSelectedTaskList] = useState(1);\r\n  const [openAssignedTo, setOpenAssignedTo] = useState(false);\r\n  const [openTooltip, setTooltipOpen] = useState(true);\r\n\r\n  const [assignedTo, setAssignedTo] = useState(null);\r\n  const [assignFor, setAssignFor] = useState(-1);\r\n  const [attachments, setAttachments] = useState([]);\r\n  const removeSubTask = task => {\r\n    setSubTasks(subTasks.filter(data => data.id !== task.id));\r\n  };\r\n\r\n  const onAssignedTo = data => {\r\n    if (assignFor === -1) {\r\n      setAssignedTo(data);\r\n    } else {\r\n      subTasks[assignFor].assigned = data;\r\n      setSubTasks(subTasks);\r\n    }\r\n  };\r\n\r\n  const onSubTaskAssign = (data, index) => {\r\n    setAssignFor(index);\r\n    setOpenAssignedTo(true);\r\n  };\r\n\r\n  const onAddSubTask = () => {\r\n    setSubTasks(\r\n      subTasks.concat({\r\n        id: new Date().getTime(),\r\n        title: '',\r\n        completed: false,\r\n        assignTo: null,\r\n        collaborators: [],\r\n      }),\r\n    );\r\n  };\r\n\r\n  const onAddTask = () => {\r\n    dispatch(\r\n      addTask({\r\n        id: new Date().getTime(),\r\n        title: taskTitle,\r\n        taskList: selectedTaskList,\r\n        assigned: assignedTo,\r\n        subTasks: subTasks,\r\n        isStared: false,\r\n        isCompleted: false,\r\n        attachments: attachments,\r\n        collaborators: [],\r\n        comments: [],\r\n        dueDate: getTodayDate('MMM DD, YYYY'),\r\n      }),\r\n    );\r\n\r\n    setSubTasks([]);\r\n    setTaskTitle('');\r\n    setSelectedTaskList(1);\r\n    setOpenAssignedTo(false);\r\n    setAssignedTo(null);\r\n    setAssignFor(-1);\r\n    setAttachments([]);\r\n    onStartAddTask(false);\r\n  };\r\n\r\n  const onChangeSubTaskTile = (title, index) => {\r\n    subTasks[index].title = title;\r\n    setSubTasks(subTasks);\r\n  };\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    onDrop: acceptedFiles => {\r\n      setAttachments(\r\n        attachments.concat(\r\n          acceptedFiles.map((file, index) => {\r\n            return {\r\n              id: index + attachments.length,\r\n              name: file.name,\r\n              ...file,\r\n              metaData: { type: file.type, size: file.size },\r\n            };\r\n          }),\r\n        ),\r\n      );\r\n    },\r\n  });\r\n\r\n  return isAddTaskView ? (\r\n    <Box py={6} px={8}>\r\n      <Box className={classes.addTaskView}>\r\n        <Box p={4}>\r\n          <Box display=\"flex\" alignItems=\"center\" mb={2}>\r\n            <Box mr={2}>\r\n              <Checkbox color=\"primary\" icon={<RadioButtonUncheckedIcon />} checkedIcon={<RadioButtonCheckedIcon />} />\r\n            </Box>\r\n            <AppTextInput\r\n              placeholder=\"Add a Task\"\r\n              value={taskTitle}\r\n              className={classes.textFieldRoot}\r\n              id=\"standard-basic\"\r\n              onChange={e => setTaskTitle(e.target.value)}\r\n            />\r\n          </Box>\r\n          <Box ml={{ sm: 11 }}>\r\n            <SubTasks\r\n              subTasks={subTasks}\r\n              onSubTaskAssign={onSubTaskAssign}\r\n              onAddSubTask={onAddSubTask}\r\n              onChangeSubTaskTile={onChangeSubTaskTile}\r\n              removeSubTask={removeSubTask}\r\n            />\r\n          </Box>\r\n        </Box>\r\n        <Box px={4}>\r\n          <Attachments attachments={attachments} />\r\n        </Box>\r\n        <Box className={classes.addTaskFooter}>\r\n          <Box flex={1} display=\"flex\" alignItems=\"center\">\r\n            <Box ml={-1} mr={3} {...getRootProps()}>\r\n              <input {...getInputProps()} />\r\n              <IconButton>\r\n                <AttachFileIcon />\r\n              </IconButton>\r\n            </Box>\r\n\r\n            <Chip\r\n              className={classes.chipRoot}\r\n              onClick={() => {\r\n                setAssignFor(-1);\r\n                setOpenAssignedTo(true);\r\n              }}\r\n              variant=\"outlined\"\r\n              size=\"medium\"\r\n              avatar={<Avatar alt=\"Natacha\" src={assignedTo ? assignedTo.profilePic : 'https://via.placeholder.com/150'} />}\r\n              label={assignedTo ? assignedTo.name : 'Unassigned'}\r\n            />\r\n            <Box className={classes.TaskListSelectorView}>\r\n              <TaskListSelector\r\n                selectedTaskList={selectedTaskList}\r\n                taskLists={taskLists}\r\n                onTaskListSelect={setSelectedTaskList}\r\n              />\r\n            </Box>\r\n          </Box>\r\n          <Box ml=\"2\" display=\"flex\" alignItems=\"center\">\r\n            <Button onClick={onAddTask} variant=\"contained\" color=\"primary\" disabled={!taskTitle}>\r\n              Save\r\n            </Button>\r\n\r\n            <Box ml={2}>\r\n              <Button onClick={onStartAddTask} className={classes.btnRoot}>\r\n                Cancel\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <AssignTo\r\n        assigned={assignedTo}\r\n        onAssignTo={onAssignedTo}\r\n        open={openAssignedTo}\r\n        handleClose={() => setOpenAssignedTo(false)}\r\n      />\r\n    </Box>\r\n  ) : (\r\n    <AddTaskButton onStartAddTask={onStartAddTask} openTooltip={openTooltip} setTooltipOpen={setTooltipOpen} />\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import React from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 24,\r\n    paddingTop: 0,\r\n  },\r\n  titleRoot: {\r\n    color: theme.palette.text.disabled,\r\n  },\r\n}));\r\n\r\nconst TaskListEmptyComponent = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box mb={3}>\r\n        <CmtImage width={50} src={'/images/icon_task.png'} />\r\n      </Box>\r\n      <Typography className={classes.titleRoot}> No Task Found, Get Started Now</Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TaskListEmptyComponent;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport CmtList from '../../../../@coremat/CmtList';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport TaskCell from './TaskCell';\r\nimport { getTasks } from '../../../../redux/actions/TaskList';\r\nimport AddTask from '../AddTask';\r\nimport TaskListEmptyComponent from './TaskListEmptyComponent';\r\nimport moment from 'moment';\r\nimport ListEmptyResult from '../../../../@coremat/CmtList/ListEmptyResult';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    '& .CmtList-EmptyResult': {\r\n      backgroundColor: 'transparent',\r\n      border: '0 none',\r\n      borderRadius: 0,\r\n    },\r\n  },\r\n}));\r\n\r\nconst TaskListView = () => {\r\n  const { tasks, filterData } = useSelector(({ taskList }) => taskList);\r\n  const { loading } = useSelector(({ common }) => common);\r\n  const [isAddTaskView, setAddTaskView] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    dispatch(getTasks(filterData));\r\n  }, [dispatch, filterData]);\r\n\r\n  const onStartAddTask = () => {\r\n    setAddTaskView(!isAddTaskView);\r\n  };\r\n\r\n  const headerTitle = (task, index) => {\r\n    return (\r\n      <Box\r\n        key={index}\r\n        ml={8}\r\n        py={4}\r\n        fontSize={10}\r\n        color=\"text.secondary\"\r\n        style={{\r\n          textTransform: 'uppercase',\r\n        }}>\r\n        {task.title}\r\n      </Box>\r\n    );\r\n  };\r\n  const getHeaderTitle = task => {\r\n    const difference = moment().diff(task.dueDate, 'days');\r\n\r\n    if (difference === 0) {\r\n      return 'Today';\r\n    } else if (difference < 0) {\r\n      return 'UpComing';\r\n    } else {\r\n      return 'Over Due';\r\n    }\r\n  };\r\n  const generateHeaderList = () => {\r\n    if (tasks.length === 0) {\r\n      return [];\r\n    }\r\n    let taskListWithHeader = [];\r\n\r\n    let currentHeaderTitle = getHeaderTitle(tasks[0]);\r\n    let headerTitle = currentHeaderTitle;\r\n    taskListWithHeader = [{ id: 'header-0', header: true, title: headerTitle }];\r\n\r\n    tasks.map(task => {\r\n      currentHeaderTitle = getHeaderTitle(task);\r\n      if (headerTitle !== currentHeaderTitle) {\r\n        taskListWithHeader = taskListWithHeader.concat({\r\n          id: 'header-' + taskListWithHeader.length,\r\n          header: true,\r\n          title: currentHeaderTitle,\r\n        });\r\n        headerTitle = currentHeaderTitle;\r\n      }\r\n      taskListWithHeader = taskListWithHeader.concat(task);\r\n\r\n      return task;\r\n    });\r\n    return taskListWithHeader;\r\n  };\r\n\r\n  const onEndReached = () => {};\r\n\r\n  return (\r\n    <Box height={1} display=\"flex\" flexDirection=\"column\">\r\n      <AddTask isAddTaskView={isAddTaskView} onStartAddTask={onStartAddTask} />\r\n      <Box className={classes.root}>\r\n        <CmtList\r\n          style={{ flex: 1, display: 'flex', flexDirection: 'column' }}\r\n          ListEmptyComponent={\r\n            <ListEmptyResult loader={loading}>\r\n              <TaskListEmptyComponent />\r\n            </ListEmptyResult>\r\n          }\r\n          data={generateHeaderList()}\r\n          renderRow={(data, index) => {\r\n            if (data.header) {\r\n              return headerTitle(data, index);\r\n            } else {\r\n              return <TaskCell key={index} data={data} />;\r\n            }\r\n          }}\r\n          onEndReached={onEndReached}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TaskListView;\r\n","import React, { useContext } from 'react';\r\nimport { Box, withWidth } from '@material-ui/core';\r\nimport ContentHeader from './ContentHeader';\r\nimport useStyles from './index.style';\r\nimport TaskListView from './TaskListView';\r\nimport { getTaskListContainerHeight } from '../../../@jumbo/constants/AppConstants';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport AppContext from '../../../@jumbo/components/contextProvider/AppContextProvider/AppContext';\r\n\r\nconst TaskListContainer = ({ width }) => {\r\n  const { showFooter } = useContext(AppContext);\r\n  const classes = useStyles({\r\n    height: getTaskListContainerHeight(width, showFooter),\r\n  });\r\n  return (\r\n    <Box className={classes.inBuildAppMainContent}>\r\n      <ContentHeader />\r\n      <PerfectScrollbar className={classes.perfectScrollbarTaskListCon}>\r\n        <TaskListView />\r\n      </PerfectScrollbar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default withWidth()(TaskListContainer);\r\n","import React, { useState } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CmtList from '../../../../@coremat/CmtList';\r\nimport { users } from '../../../../@fake-db/apps/todo';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport CmtAvatar from '../../../../@coremat/CmtAvatar';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport AppTextInput from '../../../../@jumbo/components/Common/formElements/AppTextInput';\r\nimport AppCheckbox from '../../../../@jumbo/components/Common/formElements/AppCheckBox';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  dialogRoot: {\r\n    '& .MuiDialog-paperWidthSm': {\r\n      width: 340,\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: 440,\r\n      },\r\n    },\r\n  },\r\n  titleRoot: {\r\n    borderBottom: `1px solid ${theme.palette.borderColor.main}`,\r\n    paddingBottom: 16,\r\n  },\r\n  listItemRoot: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '8px 24px',\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingTop: 12,\r\n      paddingBottom: 12,\r\n    },\r\n  },\r\n  avatarRoot: {\r\n    marginRight: 10,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 56,\r\n      height: 56,\r\n      marginRight: 16,\r\n    },\r\n  },\r\n  btnDisablColor: {\r\n    color: theme.palette.text.disabled,\r\n  },\r\n  listItemTitleRoot: {\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    marginBottom: 5,\r\n    letterSpacing: 0.15,\r\n  },\r\n  listItemMailRoot: {\r\n    fontSize: 14,\r\n    color: theme.palette.text.secondary,\r\n    letterSpacing: 0.25,\r\n  },\r\n  dialogActionsRoot: {\r\n    paddingLeft: 24,\r\n    paddingRight: 24,\r\n  },\r\n}));\r\n\r\nconst AddCollaborators = ({ collaborators, handleClose, open, updateCollaborators }) => {\r\n  const [selectedCollaborator, setSelectedCollaborator] = useState(collaborators ? collaborators : []);\r\n  const classes = useStyles();\r\n  const onSetSelectedCollaborator = data => {\r\n    if (selectedCollaborator.some(item => item.id === data.id)) {\r\n      setSelectedCollaborator(selectedCollaborator.filter(item => item.id !== data.id));\r\n    } else {\r\n      setSelectedCollaborator(selectedCollaborator.concat(data));\r\n    }\r\n  };\r\n  return (\r\n    <Dialog className={classes.dialogRoot} onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle id=\"simple-dialog-title\">\r\n        <Typography className={classes.titleRoot} component=\"div\" variant=\"body1\">\r\n          Invite Collaborators\r\n        </Typography>\r\n      </DialogTitle>\r\n      <CmtList\r\n        data={users}\r\n        renderRow={item => (\r\n          <Box component=\"div\" className={classes.listItemRoot} key={item.id}>\r\n            <CmtAvatar className={classes.avatarRoot} src={item.profilePic} />\r\n            <Box>\r\n              <Typography component=\"div\" variant=\"h4\" className={classes.listItemTitleRoot}>\r\n                {item.name}\r\n              </Typography>\r\n              <Typography component=\"div\" variant=\"h4\" className={classes.listItemMailRoot}>\r\n                {item.email}\r\n              </Typography>\r\n            </Box>\r\n\r\n            <Box ml=\"auto\">\r\n              <AppCheckbox\r\n                checked={selectedCollaborator.some(data => data.id === item.id)}\r\n                onChange={() => onSetSelectedCollaborator(item)}\r\n              />\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      />\r\n\r\n      <Box className={classes.listItemRoot}>\r\n        <CmtAvatar className={classes.avatarRoot}>\r\n          <PersonAddIcon />\r\n        </CmtAvatar>\r\n        <AppTextInput value=\"\" placeholder=\"Type name or email address to\" />\r\n      </Box>\r\n\r\n      <DialogActions className={classes.dialogActionsRoot}>\r\n        <Button onClick={handleClose} className={classes.btnDisablColor}>\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            handleClose();\r\n            updateCollaborators(selectedCollaborator);\r\n          }}\r\n          color=\"primary\">\r\n          Apply\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddCollaborators;\r\n","import React, { useState } from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport CmtAvatarGroup from '../../../../@coremat/CmtAvatarGroup';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddCollaborators from './AddCollaborators';\r\nimport CmtList from '../../../../@coremat/CmtList';\r\nimport CmtObjectSummary from '../../../../@coremat/CmtObjectSummary';\r\nimport CmtAvatar from '../../../../@coremat/CmtAvatar';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  subTaskTitle: {\r\n    textTransform: 'uppercase',\r\n    fontSize: 12,\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    color: theme.palette.text.secondary,\r\n    marginBottom: 12,\r\n  },\r\n}));\r\n\r\nconst Collaborators = ({ collaborators, updateCollaborators }) => {\r\n  const [openCollaborator, setOpenCollaborator] = useState(false);\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Box p={6}>\r\n      <Typography component=\"div\" variant=\"h6\" className={classes.subTaskTitle}>\r\n        Collaborators\r\n      </Typography>\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <CmtAvatarGroup\r\n          max={3}\r\n          items={collaborators}\r\n          srcKey=\"profilePic\"\r\n          titleKey=\"name\"\r\n          renderMore={restItems => <RenderMore items={restItems} />}\r\n          renderItemSummary={(item, index) => <RenderRow key={index} item={item} />}\r\n        />\r\n        <IconButton onClick={() => setOpenCollaborator(true)}>\r\n          <PersonAddIcon />\r\n        </IconButton>\r\n      </Box>\r\n      <AddCollaborators\r\n        collaborators={collaborators}\r\n        updateCollaborators={updateCollaborators}\r\n        open={openCollaborator}\r\n        handleClose={() => setOpenCollaborator(false)}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\nconst RenderRow = ({ item, placeholderLength }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Typography color=\"inherit\">{item.name}</Typography>\r\n      <Box pb={2} component=\"p\">\r\n        {item.email}\r\n      </Box>\r\n      <CmtAvatar src={item.profilePic} alt={item.name} variant=\"rounded\" size={125} phCharLength={placeholderLength} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst RenderMore = ({ items, placeholderLength }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CmtList\r\n      data={items}\r\n      renderRow={(item, index) => {\r\n        return (\r\n          <CmtObjectSummary\r\n            key={index}\r\n            avatar={\r\n              <CmtAvatar\r\n                className={classes.avatarRoot}\r\n                color=\"orange\"\r\n                size={40}\r\n                src={item.profilePic}\r\n                alt={item.name}\r\n                phCharLength={placeholderLength}\r\n              />\r\n            }\r\n            title={item.name}\r\n            titleProps={{ className: classes.titleRoot }}\r\n          />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Collaborators;\r\n","import React from 'react';\r\nimport CmtMediaObject from '../../../../@coremat/CmtMediaObject';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport CmtAvatar from '../../../../@coremat/CmtAvatar';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  commentCellItem: {\r\n    marginBottom: 15,\r\n    display: 'flex',\r\n    alignItems: 'flex-start',\r\n    '& .Cmt-media-image': {\r\n      alignSelf: 'flex-start',\r\n    },\r\n  },\r\n}));\r\n\r\nconst CommentCell = ({ comment }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <CmtMediaObject\r\n      className={classes.commentCellItem}\r\n      avatarPos=\"center\"\r\n      avatar={<CmtAvatar src={comment.user.profilePic} size={40} alt={comment.user.name} />}\r\n      title={comment.user.name}\r\n      titleProps={{\r\n        variant: 'h4',\r\n        component: 'div',\r\n      }}\r\n      content={comment.message}\r\n      contentProps={{\r\n        component: 'p',\r\n        style: {\r\n          fontSize: 14,\r\n          letterSpacing: 0.25,\r\n        },\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CommentCell;\r\n","import React from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport CmtList from '../../../../@coremat/CmtList';\r\nimport CommentCell from './CommentCell';\r\n\r\nconst CommentView = ({ currentTask, showingComments, setShowingComments }) => {\r\n  const { comments } = currentTask;\r\n\r\n  return (\r\n    <Box>\r\n      <Box px={6} pb={6} pt={2}>\r\n        {comments.length - showingComments > 0 ? (\r\n          <Box\r\n            className=\"pointer\"\r\n            color=\"primary.main\"\r\n            component=\"span\"\r\n            fontSize={16}\r\n            mb={4}\r\n            display=\"inline-block\"\r\n            onClick={() => setShowingComments(comments.length)}>\r\n            +{comments.length - showingComments} Earlier Comments\r\n          </Box>\r\n        ) : null}\r\n        <CmtList\r\n          data={comments.slice(comments.length - showingComments, comments.length)}\r\n          renderRow={comment => <CommentCell key={comment.id} comment={comment} />}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CommentView;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Attachments from '../Attachments';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SubTask from '../AddTask/SubTask';\r\nimport Collaborators from '../Collaborators';\r\nimport CommentView from '../CommentView';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { onTaskSelect, updateTask } from '../../../../redux/actions/TaskList';\r\nimport AssignTo from '../AddTask/AssignTo';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport AppTextInput from '../../../../@jumbo/components/Common/formElements/AppTextInput';\r\nimport CmtAvatar from '../../../../@coremat/CmtAvatar';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  titleView: {\r\n    marginBottom: 20,\r\n  },\r\n  textFieldRoot: {\r\n    width: '100%',\r\n    '& .MuiInput-underline': {\r\n      '&:before': {\r\n        display: 'none',\r\n      },\r\n    },\r\n    '& .MuiInputBase-root': {\r\n      fontSize: 18,\r\n      fontWeight: theme.typography.fontWeightBold,\r\n      [theme.breakpoints.up('lg')]: {\r\n        fontSize: 20,\r\n      },\r\n    },\r\n  },\r\n  badgeRoot: {\r\n    fontSize: 14,\r\n    letterSpacing: 0.5,\r\n    borderRadius: 4,\r\n    padding: '4px 12px',\r\n    marginRight: 5,\r\n  },\r\n  starIconRoot: {\r\n    color: theme.palette.warning.main,\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: 12,\r\n    },\r\n  },\r\n  subTaskTitle: {\r\n    textTransform: 'uppercase',\r\n    fontSize: 12,\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    color: theme.palette.text.secondary,\r\n    marginBottom: 12,\r\n  },\r\n  subTaskRoot: {\r\n    '& .add-subtask': {\r\n      borderBottom: `1px solid ${theme.palette.borderColor.main}`,\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    '& .subtask-cellitem': {\r\n      backgroundColor: 'transparent',\r\n      borderBottom: `1px solid ${theme.palette.borderColor.main}`,\r\n      marginBottom: 0,\r\n      borderRadius: 0,\r\n    },\r\n  },\r\n}));\r\n\r\nconst DetailView = ({ showingComments, setShowingComments }) => {\r\n  const classes = useStyles();\r\n  const { currentTask, taskLists } = useSelector(({ taskList }) => taskList);\r\n  const [title, setTitle] = useState(currentTask ? currentTask.title : '');\r\n  const [subTasksNo, setSubTasksNo] = useState(2);\r\n  const [assignedTo, setAssignedTo] = useState(null);\r\n  const [openAssignedTo, setOpenAssignedTo] = useState(false);\r\n  const [assignFor, setAssignFor] = useState(-1);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setTitle(currentTask ? currentTask.title : '');\r\n  }, [currentTask]);\r\n\r\n  const onTaskTitleChange = event => {\r\n    setTitle(event.target.value);\r\n  };\r\n\r\n  const onTaskTitleBlur = event => {\r\n    dispatch(updateTask({ ...currentTask, title: event.target.value }));\r\n  };\r\n\r\n  const onChangeSubTaskTile = (value, index) => {\r\n    currentTask.subTasks[index].title = value;\r\n    dispatch(onTaskSelect(currentTask));\r\n    dispatch(updateTask(currentTask));\r\n  };\r\n\r\n  const onSubTaskAssign = (data, index) => {\r\n    setAssignFor(index);\r\n    setAssignedTo(data.assigned);\r\n    setOpenAssignedTo(true);\r\n  };\r\n\r\n  const updateCollaborators = data => {\r\n    currentTask.collaborators = data;\r\n    dispatch(updateTask(currentTask));\r\n    dispatch(onTaskSelect(currentTask));\r\n  };\r\n\r\n  const onAssignedTo = data => {\r\n    if (assignFor === -1) {\r\n      currentTask.assigned = data;\r\n    } else {\r\n      currentTask.subTasks[assignFor].assigned = data;\r\n    }\r\n\r\n    dispatch(updateTask(currentTask));\r\n    dispatch(onTaskSelect(currentTask));\r\n  };\r\n\r\n  const onAddSubTask = () => {\r\n    currentTask.subTasks = currentTask.subTasks.concat({\r\n      id: new Date().getTime(),\r\n      subTaskTitle: '',\r\n      completed: false,\r\n      assignTo: null,\r\n      collaborators: [],\r\n    });\r\n    dispatch(onTaskSelect(currentTask));\r\n  };\r\n\r\n  const removeSubTask = item => {\r\n    currentTask.subTasks = currentTask.subTasks.filter(data => data.id !== item.id);\r\n    dispatch(onTaskSelect(currentTask));\r\n  };\r\n\r\n  const onClickStarredIcon = e => {\r\n    dispatch(updateTask({ ...currentTask, isStared: e.target.checked }));\r\n    dispatch(onTaskSelect({ ...currentTask, isStared: e.target.checked }));\r\n  };\r\n\r\n  const assignedTaskList = taskLists.find(item => item.id === currentTask.taskList);\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\">\r\n      <Box px={6} pb={6} pt={1}>\r\n        <Box\r\n          display=\"flex\"\r\n          alignItems={{ xs: 'flex-start', sm: 'center' }}\r\n          flexDirection={{ xs: 'column', sm: 'row' }}\r\n          mb={3}>\r\n          {assignedTaskList && (\r\n            <Box\r\n              component=\"span\"\r\n              className={classes.badgeRoot}\r\n              style={{\r\n                backgroundColor: alpha(assignedTaskList.color, 0.1),\r\n                color: assignedTaskList.color,\r\n              }}>\r\n              {assignedTaskList.name}\r\n            </Box>\r\n          )}\r\n          <Box ml={{ sm: 'auto' }} display=\"flex\" alignItems=\"center\">\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              className=\"pointer\"\r\n              onClick={() => {\r\n                setAssignedTo(currentTask.assigned);\r\n                setAssignFor(-1);\r\n                setOpenAssignedTo(true);\r\n              }}>\r\n              <CmtAvatar\r\n                className={classes.imgRoot}\r\n                src={currentTask.assigned ? currentTask.assigned.profilePic : null}\r\n                size={30}\r\n                alt={currentTask.assigned ? currentTask.assigned.name : 'Unassigned'}\r\n              />\r\n              <Box mx={2}>{currentTask.assigned ? currentTask.assigned.name : 'Unassigned'}</Box>\r\n            </Box>\r\n\r\n            <Checkbox\r\n              icon={<StarBorderIcon />}\r\n              checkedIcon={<StarIcon style={{ color: '#FF8C00' }} />}\r\n              checked={currentTask.isStared}\r\n              onChange={onClickStarredIcon}\r\n              size=\"small\"\r\n            />\r\n          </Box>\r\n        </Box>\r\n\r\n        <Box className={classes.titleView}>\r\n          <AppTextInput\r\n            value={title}\r\n            className={classes.textFieldRoot}\r\n            id=\"standard-basic\"\r\n            multiline\r\n            rowsMax={4}\r\n            label=\"\"\r\n            onChange={onTaskTitleChange}\r\n            onBlur={onTaskTitleBlur}\r\n          />\r\n        </Box>\r\n        <Attachments attachments={currentTask.attachments} />\r\n        <Typography component=\"div\" variant=\"h6\" className={classes.subTaskTitle}>\r\n          Subtask\r\n        </Typography>\r\n        <Box className={classes.subTaskRoot}>\r\n          <SubTask\r\n            subTasks={currentTask.subTasks.slice(0, subTasksNo)}\r\n            onSubTaskAssign={onSubTaskAssign}\r\n            onChangeSubTaskTile={onChangeSubTaskTile}\r\n            onAddSubTask={onAddSubTask}\r\n            removeSubTask={removeSubTask}\r\n          />\r\n          {currentTask.subTasks.length - subTasksNo > 0 ? (\r\n            <Box\r\n              className=\"pointer\"\r\n              color=\"primary.main\"\r\n              component=\"span\"\r\n              fontSize={16}\r\n              my={3}\r\n              display=\"inline-block\"\r\n              onClick={() => setSubTasksNo(currentTask.subTasks.length)}>\r\n              +{currentTask.subTasks.length - subTasksNo} More\r\n            </Box>\r\n          ) : null}\r\n        </Box>\r\n      </Box>\r\n      <AssignTo\r\n        assigned={assignedTo}\r\n        onAssignTo={onAssignedTo}\r\n        open={openAssignedTo}\r\n        handleClose={() => setOpenAssignedTo(false)}\r\n      />\r\n\r\n      <Collaborators collaborators={currentTask.collaborators} updateCollaborators={updateCollaborators} />\r\n      <CommentView currentTask={currentTask} showingComments={showingComments} setShowingComments={setShowingComments} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DetailView;\r\n","import React, { useState } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CmtList from '../../../../@coremat/CmtList';\r\nimport Box from '@material-ui/core/Box';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { onTaskSelect, updateTask } from '../../../../redux/actions/TaskList';\r\nimport AppRadioButton from '../../../../@jumbo/components/Common/formElements/AppRadioButton';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  dialogRoot: {\r\n    '& .MuiDialog-paperWidthSm': {\r\n      width: 340,\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: 440,\r\n      },\r\n    },\r\n  },\r\n  titleRoot: {\r\n    borderBottom: `1px solid ${theme.palette.borderColor.main}`,\r\n    paddingBottom: 16,\r\n  },\r\n  listItemRoot: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  dialogActionsRoot: {\r\n    paddingLeft: 24,\r\n    paddingRight: 24,\r\n  },\r\n}));\r\n\r\nconst AssignTaskList = ({ handleClose, open, currentTask }) => {\r\n  const classes = useStyles();\r\n  const [taskList, setTaskList] = useState(currentTask.taskList);\r\n  const { taskLists } = useSelector(({ taskList }) => taskList);\r\n  const dispatch = useDispatch();\r\n\r\n  const assignTaskList = () => {\r\n    dispatch(updateTask({ ...currentTask, taskList }));\r\n    dispatch(onTaskSelect({ ...currentTask, taskList }));\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog className={classes.dialogRoot} onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle id=\"simple-dialog-title\">\r\n        <Typography className={classes.titleRoot} component=\"div\" variant=\"body1\">\r\n          Assign Task List\r\n        </Typography>\r\n      </DialogTitle>\r\n      <CmtList\r\n        data={taskLists}\r\n        renderRow={(item, index) => (\r\n          <Box component=\"div\" className={classes.listItemRoot} key={index} px={6}>\r\n            <AppRadioButton label={item.name} checked={taskList === item.id} onChange={() => setTaskList(item.id)} />\r\n            {/*<Typography component=\"div\" variant=\"h4\" className={classes.listItemTitleRoot}>\r\n              {item.name}\r\n            </Typography>*/}\r\n          </Box>\r\n        )}\r\n      />\r\n\r\n      <DialogActions className={classes.dialogActionsRoot}>\r\n        <Button onClick={handleClose} className={classes.btnDisablColor}>\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={assignTaskList} color=\"primary\">\r\n          Apply\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AssignTaskList;\r\n","import IconButton from '@material-ui/core/IconButton';\r\nimport React, { useState } from 'react';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport { Box } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteTask } from '../../../../redux/actions/TaskList';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport AssignTaskList from '../AssignTaskList';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  menuItemsRoot: {\r\n    fontSize: 14,\r\n    '&:hover': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n    '& .MuiTouchRipple-root': {\r\n      display: 'none',\r\n    },\r\n    '& .MuiSvgIcon-root': {\r\n      display: 'block',\r\n      fontSize: 18,\r\n    },\r\n  },\r\n}));\r\n\r\nconst TaskOptions = ({ task, onClickFullScreen }) => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [openAssignTaskList, setOpenAssignTaskList] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const onDeleteTask = () => {\r\n    setAnchorEl(null);\r\n    dispatch(deleteTask(task));\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleFullScreenView = () => {\r\n    if (onClickFullScreen) onClickFullScreen();\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const onTaskListClick = () => {\r\n    handleClose();\r\n    setOpenAssignTaskList(true);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <IconButton onClick={handleClick}>\r\n        <MoreHorizIcon />\r\n      </IconButton>\r\n      <Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\r\n        <MenuItem className={classes.menuItemsRoot} onClick={onTaskListClick}>\r\n          <Box display=\"flex\" alignItems=\"center\" width={1}>\r\n            <EditIcon />\r\n            <Box ml={4} component=\"span\">\r\n              Task List\r\n            </Box>\r\n          </Box>\r\n        </MenuItem>\r\n        {onClickFullScreen && (\r\n          <MenuItem className={classes.menuItemsRoot} onClick={handleFullScreenView}>\r\n            <Box display=\"flex\" alignItems=\"center\" width={1}>\r\n              <FullscreenIcon />\r\n              <Box ml={4} component=\"span\">\r\n                Full Screen\r\n              </Box>\r\n            </Box>\r\n          </MenuItem>\r\n        )}\r\n        <MenuItem className={classes.menuItemsRoot} onClick={onDeleteTask}>\r\n          <Box display=\"flex\" alignItems=\"center\" width={1}>\r\n            <DeleteOutlineIcon />\r\n            <Box ml={4} component=\"span\">\r\n              Delete\r\n            </Box>\r\n          </Box>\r\n        </MenuItem>\r\n      </Menu>\r\n\r\n      <AssignTaskList currentTask={task} open={openAssignTaskList} handleClose={() => setOpenAssignTaskList(false)} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TaskOptions;\r\n","import React from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport TaskOptions from './TaskOptions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { onTaskSelect, updateTask } from '../../../../redux/actions/TaskList';\r\nimport { useDispatch } from 'react-redux';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst DetailHeader = ({ currentTask, onClickFullScreen, onCloseDetail }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onToggleMarkComplete = event => {\r\n    dispatch(updateTask({ ...currentTask, isCompleted: event.target.checked }));\r\n    dispatch(onTaskSelect({ ...currentTask, isCompleted: event.target.checked }));\r\n  };\r\n\r\n  const onCloseClick = () => {\r\n    if (onCloseDetail) onCloseDetail();\r\n    else dispatch(onTaskSelect(null));\r\n  };\r\n\r\n  return (\r\n    <Box px={6} pt={6} display=\"flex\">\r\n      <Box ml={-3} display=\"flex\" alignItems=\"center\">\r\n        <Checkbox\r\n          color=\"primary\"\r\n          checked={currentTask.isCompleted}\r\n          icon={<RadioButtonUncheckedIcon />}\r\n          checkedIcon={<CheckCircleIcon />}\r\n          onChange={onToggleMarkComplete}\r\n        />\r\n        {currentTask.isCompleted ? 'Completed' : 'Mark as Complete'}\r\n      </Box>\r\n      <Box ml=\"auto\" display=\"flex\" alignItems=\"center\">\r\n        <TaskOptions task={currentTask} onClickFullScreen={onClickFullScreen} onCloseDetail={onCloseDetail} />\r\n        <IconButton onClick={onCloseClick}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DetailHeader;\r\n","import React, { useState } from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport CmtAvatar from '../../../../@coremat/CmtAvatar';\r\nimport AppTextInput from '../../../../@jumbo/components/Common/formElements/AppTextInput';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport { sendMessage } from '../../../../redux/actions/TaskList';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  commentField: {\r\n    backgroundColor: alpha(theme.palette.common.dark, 0.05),\r\n    padding: '16px 24px 16px 16px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  textFieldArea: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    position: 'relative',\r\n    width: '100%',\r\n    '& .MuiInputBase-input': {\r\n      backgroundColor: theme.palette.background.paper,\r\n      color: theme.palette.text.primary,\r\n      paddingRight: 40,\r\n      borderRadius: 4,\r\n    },\r\n  },\r\n  imgRoot: {\r\n    marginRight: 16,\r\n  },\r\n  attachIconRoot: {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    right: 10,\r\n    zIndex: 1,\r\n    transform: 'translateY(-50%)',\r\n    cursor: 'pointer',\r\n  },\r\n}));\r\n\r\nconst AddComment = ({ setShowingComments, showingComments }) => {\r\n  const classes = useStyles();\r\n  const { currentUser } = useSelector(({ taskList }) => taskList);\r\n  const [commentText, setCommentText] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const onSendMessage = () => {\r\n    setShowingComments(showingComments + 1);\r\n    dispatch(sendMessage(commentText));\r\n    setCommentText('');\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.commentField}>\r\n      <CmtAvatar className={classes.imgRoot} src={currentUser.profilePic} size={40} alt={currentUser.name} />\r\n      <Box className={classes.textFieldArea}>\r\n        <AppTextInput value={commentText} variant=\"outlined\" onChange={e => setCommentText(e.target.value)} />\r\n        {commentText ? (\r\n          <SendIcon className={classes.attachIconRoot} onClick={onSendMessage} />\r\n        ) : (\r\n          <AttachFileIcon className={classes.attachIconRoot} />\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddComment;\r\n","import React, { useContext, useState } from 'react';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport Card from '@material-ui/core/Card';\r\nimport { useSelector } from 'react-redux';\r\nimport DetailView from './DetailView';\r\nimport Box from '@material-ui/core/Box';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { getTaskDetailContainerHeight } from '../../../../@jumbo/constants/AppConstants';\r\nimport DetailHeader from './DetailHeader';\r\nimport AddComment from '../CommentView/AddComment';\r\nimport { withWidth } from '@material-ui/core';\r\nimport AppContext from '../../../../@jumbo/components/contextProvider/AppContextProvider/AppContext';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  taskDetailRoot: {\r\n    marginLeft: 24,\r\n    transition: 'all 0.3s ease',\r\n    minWidth: 300,\r\n    flex: '0 1 530px',\r\n    '@media screen and (min-width: 1500px)': {\r\n      minWidth: 380,\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      minWidth: 530,\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      position: 'absolute',\r\n      left: 72,\r\n      right: 0,\r\n      top: 0,\r\n      bottom: 0,\r\n      zIndex: 1,\r\n      marginLeft: 0,\r\n      minWidth: 240,\r\n      '& > div': {\r\n        height: '100%',\r\n      },\r\n    },\r\n  },\r\n  cardRoot: {\r\n    position: 'relative',\r\n  },\r\n  perfectScrollbarTaskDetail: {\r\n    height: props => `calc(100vh - ${props.height}px)`,\r\n  },\r\n  dialogRoot: {\r\n    '& .MuiDialog-paperWidthSm': {\r\n      width: '100%',\r\n      maxWidth: 980,\r\n    },\r\n  },\r\n}));\r\n\r\nconst TaskDetail = ({ width }) => {\r\n  const { showFooter } = useContext(AppContext);\r\n  const { currentTask } = useSelector(({ taskList }) => taskList);\r\n  const [showingComments, setShowingComments] = useState(2);\r\n  const [showFullView, setShowFullView] = useState(false);\r\n\r\n  const classes = useStyles({\r\n    height: getTaskDetailContainerHeight(width, showFooter),\r\n  });\r\n\r\n  const handleCloseFullView = () => {\r\n    setShowFullView(false);\r\n  };\r\n\r\n  const handleFullScreenView = () => {\r\n    setShowFullView(true);\r\n  };\r\n\r\n  return currentTask ? (\r\n    <React.Fragment>\r\n      <Box className={classes.taskDetailRoot}>\r\n        <Card className={classes.cardRoot}>\r\n          <DetailHeader currentTask={currentTask} onClickFullScreen={handleFullScreenView} />\r\n          <PerfectScrollbar className={classes.perfectScrollbarTaskDetail}>\r\n            <DetailView showingComments={showingComments} setShowingComments={setShowingComments} />\r\n          </PerfectScrollbar>\r\n          <AddComment showingComments={showingComments} setShowingComments={setShowingComments} />\r\n        </Card>\r\n      </Box>\r\n\r\n      <Dialog className={classes.dialogRoot} onClose={handleCloseFullView} aria-labelledby=\"task-detail\" open={showFullView}>\r\n        <Card className={classes.cardRoot}>\r\n          <DetailHeader currentTask={currentTask} onCloseDetail={handleCloseFullView} />\r\n          <PerfectScrollbar className={classes.perfectScrollbarTaskDetail}>\r\n            <DetailView />\r\n          </PerfectScrollbar>\r\n          <AddComment showingComments={showingComments} setShowingComments={setShowingComments} />\r\n        </Card>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  ) : null;\r\n};\r\n\r\nexport default withWidth()(TaskDetail);\r\n","import React, { useEffect } from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport Sidebar from './Sidebar';\r\nimport TaskListContainer from './TaskListContainer';\r\nimport useStyles from './index.style';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport clsx from 'clsx';\r\nimport TaskDetail from './TaskDetail';\r\nimport { users } from '../../../@fake-db/apps/todo';\r\nimport { setCurrentUser } from '../../../redux/actions/TaskList';\r\n\r\nconst TaskList = () => {\r\n  const classes = useStyles();\r\n  const { isSideBarCollapsed } = useSelector(({ taskList }) => taskList);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(setCurrentUser(users[0]));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Box display=\"flex\" position=\"relative\">\r\n      <Box className={clsx(classes.inBuildAppContainer, isSideBarCollapsed ? 'collapsed' : '')}>\r\n        <Sidebar />\r\n        <TaskListContainer />\r\n      </Box>\r\n      <TaskDetail />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"sourceRoot":""}