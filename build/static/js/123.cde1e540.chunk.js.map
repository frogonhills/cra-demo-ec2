{"version":3,"sources":["@jumbo/components/PageComponents/layouts/PageContainer.js","@jumbo/components/PageComponents/PageHeader.js","@jumbo/components/PageComponents/PageBreadcrumbs/index.js","@jumbo/components/PageComponents/layouts/CorematComponentDemo.js","@jumbo/components/PageComponents/layouts/MuiComponentDemo.js","@jumbo/components/PageComponents/layouts/ComponentsDemo.js","../node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js","../node_modules/@material-ui/icons/Favorite.js","../node_modules/@material-ui/icons/Info.js","@jumbo/utils/corematDemoHelper.js","@coremat/CmtCardExpendableContent/index.js","../node_modules/@material-ui/icons/AllInclusive.js","routes/Components/CorematComponents/ExpendableCardDemo/DemoSettings.js","routes/Components/CorematComponents/ExpendableCardDemo/ExpendableCardView.js","routes/Components/CorematComponents/ExpendableCardDemo/ExpendableCardContextProvider.js","routes/Components/CorematComponents/ExpendableCardDemo/DemoSourceCode.js","routes/Components/CorematComponents/ExpendableCardDemo/index.js"],"names":["useStyles","makeStyles","pageFull","width","PageContainer","heading","breadcrumbs","children","className","restProps","classes","in","direction","mountOnEnter","unmountOnExit","clsx","breadcrumbComponent","items","theme","pageHeaderRoot","display","flexDirection","breakpoints","up","alignItems","titleRoot","down","marginBottom","PageHeader","rest","Box","mb","xs","md","lg","Typography","component","variant","ml","sm","textSm","fontSize","linkBlock","color","PageBreadcrumbs","Breadcrumbs","aria-label","map","item","index","isActive","key","label","to","link","CorematComponentDemo","SourceCodeComponent","SettingsComponent","GridContainer","Grid","CmtCard","MuiComponentDemo","pageTitle","menus","ComponentsDemo","root","flexWrap","contentArea","paddingRight","typography","pxToRem","contentSidebar","height","position","top","overflowY","flexShrink","xsDown","menu","dense","button","href","primary","createSvgIcon","React","d","withStyles","marginLeft","spacing","marginRight","backgroundColor","palette","grey","borderRadius","cursor","boxShadow","shadows","emphasize","icon","name","props","other","_objectWithoutProperties","ButtonBase","_extends","focusRipple","MoreHorizIcon","ref","_props$component","Component","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","separator","_React$useState","expanded","setExpanded","allItems","toArray","filter","child","li","concat","ol","reduce","acc","current","length","push","insertSeparators","_toConsumableArray","slice","BreadcrumbCollapsed","onClick","event","focusable","currentTarget","parentNode","querySelector","focus","renderItemsBeforeAndAfter","padding","margin","listStyle","userSelect","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","_default","createElement","getBackground","showBackground","backgroundStyle","background","gradientColors","backgroundImage","image","getOverlay","showOverlay","overlayStyle","overlay","colors","opacity","getBackgroundSourceCode","bgColor1","bgColor2","getOverlaySourceCode","zIndex","expand","transform","transition","transitions","create","duration","shortest","expandOpen","CmtCardExpendableContent","actionsComponent","actionsClasses","contentClass","useState","disableSpacing","aria-expanded","timeout","defaultProps","DemoSettings","useContext","CorematContext","extraActions","setExtraActions","avatarType","setAvatarType","showAvatar","setShowAvatar","showMainContent","setMainContent","showExpendableContent","setExpendableContent","showSocialButtons","setSocialButtonsVisibility","title","open","AppSwitch","checked","onChange","target","AppRadioButton","displayAsColumn","cardRoot","text","secondary","borderTop","borderColor","dark","textWhite","common","white","borderTopColor","actions","ExpendableCardView","overlayOpacity","basicCard","coremat","header","content","expendableContent","textDyanimicClass","CmtCardHeader","avatar","CmtAvatar","size","src","alt","subTitle","actionHandleIcon","Button","CmtCardContent","description","Fragment","IconButton","paragraph","text1","text2","text3","text4","ExpendableCardContextProvider","setBackgroundVisibility","setBackgroundStyle","setOverlayVisibility","setOverlayStyle","setOverlayOpacity","Provider","DemoSourceCode","headerSourceCode","getAvatarType","expendableContentSourceCode","sourceCode","CmtExpendableCardDemo"],"mappings":"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","file":"static/js/123.cde1e540.chunk.js","sourcesContent":["import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { PageBreadcrumbs, PageHeader } from '../index';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  pageFull: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst PageContainer = ({ heading, breadcrumbs, children, className, restProps }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Slide in={true} direction=\"up\" mountOnEnter unmountOnExit>\r\n      <Box className={clsx(classes.pageFull, className)} {...restProps}>\r\n        {(heading || breadcrumbs) && (\r\n          <PageHeader heading={heading} breadcrumbComponent={breadcrumbs && <PageBreadcrumbs items={breadcrumbs} />} />\r\n        )}\r\n        {children}\r\n      </Box>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default PageContainer;\r\n","import React from 'react';\r\nimport { Box, makeStyles, Typography } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageHeaderRoot: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.up('sm')]: {\r\n      alignItems: 'center',\r\n      flexDirection: 'row',\r\n    },\r\n  },\r\n  titleRoot: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginBottom: 10,\r\n    },\r\n  },\r\n}));\r\n\r\nconst PageHeader = ({ heading, breadcrumbComponent, children, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={clsx(classes.pageHeaderRoot, 'page-header')} mb={{ xs: 5, md: 6, lg: 8 }} {...rest}>\r\n      <Typography component=\"div\" variant=\"h1\" className={clsx(classes.titleRoot, 'title')}>\r\n        {heading}\r\n      </Typography>\r\n      <Box ml={{ sm: 'auto' }}>{breadcrumbComponent}</Box>\r\n\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import React from 'react';\r\nimport { Breadcrumbs, makeStyles } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { NavLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  textSm: {\r\n    fontSize: 12,\r\n  },\r\n  linkBlock: {\r\n    display: 'block',\r\n    color: 'inherit',\r\n  },\r\n}));\r\n\r\nconst PageBreadcrumbs = ({ items, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Breadcrumbs className=\"bread-crumbs\" aria-label=\"breadcrumb {...rest}\">\r\n      {items.map((item, index) =>\r\n        item.isActive ? (\r\n          <Typography key={index} className={classes.textSm} color=\"textPrimary\">\r\n            {item.label}\r\n          </Typography>\r\n        ) : (\r\n          <NavLink key={index} className={clsx(classes.textSm, classes.linkBlock)} color=\"inherit\" to={item.link || '/'}>\r\n            {item.label}\r\n          </NavLink>\r\n        ),\r\n      )}\r\n    </Breadcrumbs>\r\n  );\r\n};\r\n\r\nexport default PageBreadcrumbs;\r\n","import React from 'react';\r\nimport { Box, Grid } from '@material-ui/core';\r\nimport CmtCard from '../../../../@coremat/CmtCard';\r\nimport { PageHeader } from '../index';\r\nimport GridContainer from '../../GridContainer';\r\nimport PageContainer from './PageContainer';\r\n\r\nconst CorematComponentDemo = ({ SourceCodeComponent, SettingsComponent, children }) => {\r\n  return (\r\n    <PageContainer>\r\n      <GridContainer>\r\n        <Grid item xs={12} md={7}>\r\n          <PageHeader heading=\"Preview\" />\r\n          <Box mb={8}>{children}</Box>\r\n          <CmtCard>{SourceCodeComponent}</CmtCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={5}>\r\n          {SettingsComponent}\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default CorematComponentDemo;\r\n","import React from 'react';\r\nimport ComponentsDemo from './ComponentsDemo';\r\n\r\nconst MuiComponentDemo = ({ pageTitle, menus, children }) => {\r\n  const breadcrumbs = [\r\n    { label: 'Home', link: '/' },\r\n    { label: 'Material UI Components', link: '/components/mui' },\r\n    { label: pageTitle, isActive: true },\r\n  ];\r\n  return (\r\n    <ComponentsDemo pageTitle={pageTitle} breadcrumbs={breadcrumbs} menus={menus}>\r\n      {children}\r\n    </ComponentsDemo>\r\n  );\r\n};\r\nexport default MuiComponentDemo;\r\n","import React from 'react';\r\nimport { Box, Hidden, List, ListItem, ListItemText, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PageContainer from './PageContainer';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  contentArea: {\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingRight: theme.typography.pxToRem(30),\r\n      width: `calc(100% - ${theme.typography.pxToRem(175)})`,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingRight: theme.typography.pxToRem(54),\r\n    },\r\n  },\r\n  contentSidebar: {\r\n    width: theme.typography.pxToRem(175),\r\n    height: `calc(100vh - ${theme.typography.pxToRem(102)})`,\r\n    position: 'sticky',\r\n    top: 30,\r\n    overflowY: 'auto',\r\n    flexShrink: 0,\r\n  },\r\n}));\r\n\r\nconst ComponentsDemo = ({ pageTitle, menus, breadcrumbs, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <PageContainer heading={pageTitle} breadcrumbs={breadcrumbs}>\r\n      <Box className={classes.root}>\r\n        <Box className={classes.contentArea}>{children}</Box>\r\n        <Hidden xsDown>\r\n          <Box className={classes.contentSidebar}>\r\n            <Typography component=\"h4\" variant=\"h4\">\r\n              Contents\r\n            </Typography>\r\n            <List>\r\n              {menus.map((menu, index) => (\r\n                <ListItem key={index} dense button component=\"a\" href={`#${menu.link}`}>\r\n                  <ListItemText primary={menu.label} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Box>\r\n        </Hidden>\r\n      </Box>\r\n    </PageContainer>\r\n  );\r\n};\r\nexport default ComponentsDemo;\r\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand(event) {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n\n      var focusable = event.currentTarget.parentNode.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"\n}), 'Favorite');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\"\n}), 'Info');\n\nexports.default = _default;","export const getBackground = (showBackground, backgroundStyle, background) => {\r\n  if (showBackground) {\r\n    if (backgroundStyle === 'color') {\r\n      return { backgroundColor: background.color };\r\n    } else if (backgroundStyle === 'gradient') {\r\n      return { backgroundColor: background.gradientColors };\r\n    } else if (backgroundStyle === 'image') {\r\n      return { backgroundImage: background.image };\r\n    }\r\n  }\r\n\r\n  return {};\r\n};\r\n\r\nexport const getOverlay = (showOverlay, overlayStyle, overlay) => {\r\n  if (showOverlay) {\r\n    if (overlayStyle === 'color') {\r\n      return { overlay: { colors: overlay.color, opacity: overlay.opacity } };\r\n    } else if (overlayStyle === 'gradient') {\r\n      return {\r\n        overlay: { colors: overlay.gradientColors, opacity: overlay.opacity },\r\n      };\r\n    }\r\n  }\r\n\r\n  return {};\r\n};\r\n\r\nexport const getBackgroundSourceCode = (showBackground, backgroundStyle, background) => {\r\n  if (showBackground) {\r\n    if (backgroundStyle === 'color') {\r\n      return ` backgroundColor={'${background.color}'}`;\r\n    } else if (backgroundStyle === 'gradient') {\r\n      const [bgColor1, bgColor2] = background.gradientColors;\r\n      return ` backgroundColor={['${bgColor1}','${bgColor2}']}`;\r\n    } else if (backgroundStyle === 'image') {\r\n      return ` backgroundImage={'${background.image}'}`;\r\n    }\r\n  }\r\n\r\n  return '';\r\n};\r\n\r\nexport const getOverlaySourceCode = (showOverlay, overlayStyle, overlay) => {\r\n  if (showOverlay) {\r\n    if (overlayStyle === 'color') {\r\n      return ` overlay={{ colors: '${overlay.color}', opacity: ${overlay.opacity} }}`;\r\n    } else if (overlayStyle === 'gradient') {\r\n      const [bgColor1, bgColor2] = overlay.gradientColors;\r\n      return ` overlay={{ colors: ['${bgColor1}','${bgColor2}'], opacity: ${overlay.opacity} }}`;\r\n    }\r\n  }\r\n\r\n  return '';\r\n};\r\n","import React, { useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Box, Collapse, makeStyles } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport CmtCardContent from '../CmtCard/CmtCardContent';\r\nimport CmtCardActions from '../CmtCard/CmtCardActions';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    position: 'relative',\r\n    zIndex: 1,\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n}));\r\n\r\nconst CmtCardExpendableContent = ({ actionsComponent, className, actionsClasses, contentClass, children, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n    <Box className={clsx(classes.root, className)} {...rest}>\r\n      <CmtCardActions classes={actionsClasses} disableSpacing>\r\n        {actionsComponent}\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\">\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CmtCardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CmtCardContent className={contentClass}>{children}</CmtCardContent>\r\n      </Collapse>\r\n    </Box>\r\n  );\r\n};\r\n\r\nCmtCardExpendableContent.propTypes = {\r\n  actionsComponent: PropTypes.node,\r\n  actionsClasses: PropTypes.object,\r\n  contentClass: PropTypes.string,\r\n};\r\n\r\nCmtCardExpendableContent.defaultProps = {\r\n  actionsClasses: {},\r\n  contentClass: '',\r\n};\r\n\r\nexport default CmtCardExpendableContent;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M18.6 6.62c-1.44 0-2.8.56-3.77 1.53L12 10.66 10.48 12h.01L7.8 14.39c-.64.64-1.49.99-2.4.99-1.87 0-3.39-1.51-3.39-3.38S3.53 8.62 5.4 8.62c.91 0 1.76.35 2.44 1.03l1.13 1 1.51-1.34L9.22 8.2C8.2 7.18 6.84 6.62 5.4 6.62 2.42 6.62 0 9.04 0 12s2.42 5.38 5.4 5.38c1.44 0 2.8-.56 3.77-1.53l2.83-2.5.01.01L13.52 12h-.01l2.69-2.39c.64-.64 1.49-.99 2.4-.99 1.87 0 3.39 1.51 3.39 3.38s-1.52 3.38-3.39 3.38c-.9 0-1.76-.35-2.44-1.03l-1.14-1.01-1.51 1.34 1.27 1.12c1.02 1.01 2.37 1.57 3.82 1.57 2.98 0 5.4-2.41 5.4-5.38s-2.42-5.37-5.4-5.37z\"\n}), 'AllInclusive');\n\nexports.default = _default;","import React, { useContext } from 'react';\r\nimport CorematContext from '../../../../@jumbo/components/contextProvider/CorematContext';\r\nimport AppRadioButton from '../../../../@jumbo/components/Common/formElements/AppRadioButton';\r\nimport {\r\n  BackgroundSettingSection,\r\n  CollapsibleSection,\r\n  OverlaySettingSection,\r\n  SectionLegend,\r\n  SettingsComponent,\r\n} from '../../../../@jumbo/components/CorematDemosComponents';\r\nimport AppSwitch from '../../../../@jumbo/components/Common/formElements/AppSwitch';\r\n\r\nconst DemoSettings = () => {\r\n  const {\r\n    extraActions,\r\n    setExtraActions,\r\n    avatarType,\r\n    setAvatarType,\r\n    showAvatar,\r\n    setShowAvatar,\r\n    showMainContent,\r\n    setMainContent,\r\n    showExpendableContent,\r\n    setExpendableContent,\r\n    showSocialButtons,\r\n    setSocialButtonsVisibility,\r\n  } = useContext(CorematContext);\r\n\r\n  return (\r\n    <SettingsComponent title=\"Cmt Expendable Card\">\r\n      <CollapsibleSection heading=\"Header\" open={true}>\r\n        <SectionLegend>\r\n          <AppSwitch\r\n            label=\"Show Avatar or Icon\"\r\n            checked={showAvatar}\r\n            onChange={event => setShowAvatar(event.target.checked)}\r\n          />\r\n        </SectionLegend>\r\n\r\n        <SectionLegend title=\"Avatar Style\">\r\n          <AppRadioButton\r\n            name=\"avatar-type\"\r\n            label=\"Avatar\"\r\n            checked={avatarType === 'avatar'}\r\n            value=\"avatar\"\r\n            onChange={event => setAvatarType(event.target.value)}\r\n          />\r\n\r\n          <AppRadioButton\r\n            name=\"avatar-type\"\r\n            label=\"Icon\"\r\n            checked={avatarType === 'icon'}\r\n            value=\"icon\"\r\n            onChange={event => setAvatarType(event.target.value)}\r\n          />\r\n\r\n          <AppRadioButton\r\n            name=\"avatar-type\"\r\n            label=\"Icon Avatar\"\r\n            checked={avatarType === 'icon-avatar'}\r\n            value=\"icon-avatar\"\r\n            onChange={event => setAvatarType(event.target.value)}\r\n          />\r\n        </SectionLegend>\r\n\r\n        <SectionLegend>\r\n          <AppSwitch\r\n            label=\"Show Extra Actions\"\r\n            checked={extraActions}\r\n            onChange={event => setExtraActions(event.target.checked)}\r\n          />\r\n        </SectionLegend>\r\n      </CollapsibleSection>\r\n\r\n      <CollapsibleSection heading=\"Content\" open={true}>\r\n        <SectionLegend title=\"Data\" displayAsColumn>\r\n          <AppSwitch\r\n            label=\"Show Main Content\"\r\n            checked={showMainContent}\r\n            onChange={event => setMainContent(event.target.checked)}\r\n          />\r\n\r\n          <AppSwitch\r\n            label=\"Show Expendable Content\"\r\n            checked={showExpendableContent}\r\n            onChange={event => setExpendableContent(event.target.checked)}\r\n          />\r\n\r\n          <AppSwitch\r\n            label=\"Show Social Buttons\"\r\n            checked={showSocialButtons}\r\n            onChange={event => setSocialButtonsVisibility(event.target.checked)}\r\n          />\r\n        </SectionLegend>\r\n      </CollapsibleSection>\r\n\r\n      <BackgroundSettingSection />\r\n      <OverlaySettingSection />\r\n    </SettingsComponent>\r\n  );\r\n};\r\n\r\nexport default DemoSettings;\r\n","import React, { useContext } from 'react';\r\nimport CmtCardHeader from '../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport CmtAvatar from '../../../../@coremat/CmtAvatar';\r\nimport { Button } from '@material-ui/core';\r\nimport CmtCardContent from '../../../../@coremat/CmtCard/CmtCardContent';\r\nimport CmtCard from '../../../../@coremat/CmtCard';\r\nimport CorematContext from '../../../../@jumbo/components/contextProvider/CorematContext';\r\nimport { coremat } from '../../../../@fake-db';\r\nimport { getBackground, getOverlay } from '../../../../@jumbo/utils/corematDemoHelper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CmtCardExpendableContent from '../../../../@coremat/CmtCardExpendableContent';\r\nimport AllInclusiveIcon from '@material-ui/icons/AllInclusive';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardRoot: {\r\n    color: theme.palette.text.secondary,\r\n    '& .Cmt-title': {\r\n      color: theme.palette.text.primary,\r\n    },\r\n    '& .MuiCollapse-entered': {\r\n      borderTop: `solid 1px ${theme.palette.borderColor.dark}`,\r\n    },\r\n  },\r\n  textWhite: {\r\n    color: theme.palette.common.white,\r\n    '& .Cmt-sub-title, & .Cmt-title, & .MuiIconButton-root': {\r\n      color: theme.palette.common.white,\r\n    },\r\n    '& .MuiCollapse-entered': {\r\n      borderTop: 'solid 1px rgba(255, 255, 255, 0.12)',\r\n    },\r\n    '& .Cmtfooter-root': {\r\n      borderTopColor: 'rgba(255, 255, 255, 0.12)',\r\n    },\r\n  },\r\n}));\r\n\r\nconst actions = [\r\n  {\r\n    icon: <InfoIcon />,\r\n    label: 'More Detail',\r\n  },\r\n  {\r\n    icon: <CloseIcon />,\r\n    label: 'Close',\r\n  },\r\n];\r\n\r\nconst ExpendableCardView = () => {\r\n  const classes = useStyles();\r\n  const {\r\n    extraActions,\r\n    avatarType,\r\n    showAvatar,\r\n    showBackground,\r\n    backgroundStyle,\r\n    showOverlay,\r\n    overlayStyle,\r\n    overlayOpacity,\r\n    showMainContent,\r\n    showExpendableContent,\r\n    showSocialButtons,\r\n  } = useContext(CorematContext);\r\n\r\n  const { basicCard, background, overlay } = coremat;\r\n  const { header, content, expendableContent } = basicCard;\r\n  overlay.opacity = overlayOpacity;\r\n\r\n  const textDyanimicClass = () => {\r\n    if ((showBackground && backgroundStyle !== 'color') || (showOverlay && overlayOpacity > 0.5)) {\r\n      return classes.textWhite;\r\n    }\r\n  };\r\n\r\n  const headerView = () => {\r\n    return (\r\n      <CmtCardHeader\r\n        avatar={\r\n          showAvatar && avatarType === 'icon-avatar' ? (\r\n            <CmtAvatar color=\"primary\" size=\"large\">\r\n              <AllInclusiveIcon fontSize=\"small\" />\r\n            </CmtAvatar>\r\n          ) : showAvatar && avatarType === 'avatar' ? (\r\n            <CmtAvatar src={header.avatar} alt=\"Avatar\" size=\"large\" />\r\n          ) : null\r\n        }\r\n        icon={showAvatar && avatarType === 'icon' ? <AllInclusiveIcon /> : null}\r\n        title={header.title}\r\n        subTitle={header.subTitle}\r\n        actions={actions}\r\n        actionHandleIcon={<MoreVertIcon />}>\r\n        {extraActions && <Button color=\"primary\">View Demo</Button>}\r\n      </CmtCardHeader>\r\n    );\r\n  };\r\n\r\n  const expendableContentView = () => {\r\n    return (\r\n      <CmtCardExpendableContent\r\n        actionsComponent={\r\n          showSocialButtons && (\r\n            <React.Fragment>\r\n              <IconButton aria-label=\"add to favorites\">\r\n                <FavoriteIcon />\r\n              </IconButton>\r\n              <IconButton aria-label=\"share\">\r\n                <ShareIcon />\r\n              </IconButton>\r\n            </React.Fragment>\r\n          )\r\n        }>\r\n        <Typography paragraph variant=\"body2\">\r\n          Method:\r\n        </Typography>\r\n        <Typography paragraph variant=\"body2\">\r\n          {expendableContent.text1}\r\n        </Typography>\r\n        <Typography paragraph variant=\"body2\">\r\n          {expendableContent.text2}\r\n        </Typography>\r\n        <Typography paragraph variant=\"body2\">\r\n          {expendableContent.text3}\r\n        </Typography>\r\n        <Typography variant=\"body2\">{expendableContent.text4}</Typography>\r\n      </CmtCardExpendableContent>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <CmtCard\r\n      className={clsx(classes.cardRoot, textDyanimicClass())}\r\n      {...getBackground(showBackground, backgroundStyle, background)}\r\n      {...getOverlay(showOverlay, overlayStyle, overlay)}>\r\n      {headerView()}\r\n      {showMainContent && (\r\n        <CmtCardContent>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            {content.description}\r\n          </Typography>\r\n        </CmtCardContent>\r\n      )}\r\n      {showExpendableContent && expendableContentView()}\r\n    </CmtCard>\r\n  );\r\n};\r\n\r\nexport default ExpendableCardView;\r\n","import React, { useState } from 'react';\r\nimport CorematContext from '../../../../@jumbo/components/contextProvider/CorematContext';\r\n\r\nconst ExpendableCardContextProvider = ({ children }) => {\r\n  const [showAvatar, setShowAvatar] = useState(true);\r\n  const [avatarType, setAvatarType] = useState('avatar');\r\n  const [showBackground, setBackgroundVisibility] = useState(false);\r\n  const [backgroundStyle, setBackgroundStyle] = useState('color');\r\n  const [showOverlay, setOverlayVisibility] = useState(false);\r\n  const [overlayStyle, setOverlayStyle] = useState('color');\r\n  const [overlayOpacity, setOverlayOpacity] = useState(0.3);\r\n  const [extraActions, setExtraActions] = useState(false);\r\n  const [showMainContent, setMainContent] = useState(true);\r\n  const [showExpendableContent, setExpendableContent] = useState(true);\r\n  const [showSocialButtons, setSocialButtonsVisibility] = useState(true);\r\n\r\n  return (\r\n    <CorematContext.Provider\r\n      value={{\r\n        showAvatar,\r\n        setShowAvatar,\r\n        avatarType,\r\n        setAvatarType,\r\n        showBackground,\r\n        setBackgroundVisibility,\r\n        backgroundStyle,\r\n        setBackgroundStyle,\r\n        showOverlay,\r\n        setOverlayVisibility,\r\n        overlayStyle,\r\n        setOverlayStyle,\r\n        overlayOpacity,\r\n        setOverlayOpacity,\r\n        extraActions,\r\n        setExtraActions,\r\n        showMainContent,\r\n        setMainContent,\r\n        showExpendableContent,\r\n        setExpendableContent,\r\n        showSocialButtons,\r\n        setSocialButtonsVisibility,\r\n      }}>\r\n      {children}\r\n    </CorematContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ExpendableCardContextProvider;\r\n","import React, { useContext } from 'react';\r\nimport CorematContext from '../../../../@jumbo/components/contextProvider/CorematContext';\r\nimport { coremat } from '../../../../@fake-db';\r\nimport { getBackgroundSourceCode, getOverlaySourceCode } from '../../../../@jumbo/utils/corematDemoHelper';\r\nimport { SourceCodeComponent } from '../../../../@jumbo/components/CorematDemosComponents';\r\n\r\nconst DemoSourceCode = () => {\r\n  const {\r\n    extraActions,\r\n    avatarType,\r\n    showAvatar,\r\n    showBackground,\r\n    backgroundStyle,\r\n    showOverlay,\r\n    overlayStyle,\r\n    showMainContent,\r\n    showExpendableContent,\r\n    showSocialButtons,\r\n  } = useContext(CorematContext);\r\n\r\n  const { basicCard, background, overlay } = coremat;\r\n  const { header, content, expendableContent } = basicCard;\r\n\r\n  const getAvatarType = () => {\r\n    if (showAvatar) {\r\n      if (avatarType === 'icon') {\r\n        return `icon={<AllInclusiveIcon fontSize=\"${'default'}\" />}\r\n    `;\r\n      } else if (avatarType === 'icon-avatar') {\r\n        return `avatar={\r\n      <CmtAvatar color=\"primary\" size=\"large\">\r\n        <AllInclusiveIcon fontSize=\"${'small'}\" />\r\n      </CmtAvatar>\r\n    }\r\n    `;\r\n      } else if (avatarType === 'avatar') {\r\n        return `avatar={<CmtAvatar src={'${header.avatar}'} size=\"large\" alt=\"Avatar\" />}\r\n    `;\r\n      }\r\n    }\r\n\r\n    return '';\r\n  };\r\n\r\n  const headerSourceCode = () => {\r\n    return (\r\n      ` <CmtCardHeader\r\n    ` +\r\n      getAvatarType() +\r\n      `title={'${header.title}'}\r\n    subTitle={'${header.subTitle}'}\r\n    actions={actions}\r\n    actionHandleIcon={<MoreVertIcon fontSize=\"${'default'}\" />}>${\r\n        extraActions\r\n          ? `\r\n    <Button color=\"primary\">View Demo</Button>\r\n  `\r\n          : ''\r\n      }</CmtCardHeader>`\r\n    );\r\n  };\r\n\r\n  const contentSourceCode = () => {\r\n    if (showMainContent) {\r\n      return `\r\n  <CmtCardContent>\r\n    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n      ${content.description}\r\n    </Typography>\r\n  </CmtCardContent>`;\r\n    }\r\n\r\n    return '';\r\n  };\r\n\r\n  const socialMediaButtons = () => {\r\n    if (showSocialButtons) {\r\n      return `\r\n    actionsComponent={\r\n      <React.Fragment>\r\n        <IconButton aria-label=\"${'add to favorites'}\">\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\">\r\n          <ShareIcon />\r\n        </IconButton>\r\n      </React.Fragment>\r\n    }`;\r\n    }\r\n\r\n    return '';\r\n  };\r\n\r\n  const expendableContentSourceCode = () => {\r\n    if (showExpendableContent) {\r\n      return (\r\n        `\r\n  <CmtCardExpendableContent` +\r\n        socialMediaButtons() +\r\n        `>\r\n    <Typography paragraph variant=\"body2\">Method:</Typography>\r\n    <Typography paragraph variant=\"body2\">${expendableContent.text1}</Typography>\r\n    <Typography paragraph variant=\"body2\">${expendableContent.text2}</Typography>\r\n    <Typography paragraph variant=\"body2\">${expendableContent.text3}</Typography>\r\n    <Typography variant=\"body2\">${expendableContent.text4}</Typography>\r\n  </CmtCardExpendableContent>`\r\n      );\r\n    }\r\n\r\n    return '';\r\n  };\r\n\r\n  const getSourceCode = () => {\r\n    return (\r\n      `\r\n<CmtCard` +\r\n      getBackgroundSourceCode(showBackground, backgroundStyle, background) +\r\n      getOverlaySourceCode(showOverlay, overlayStyle, overlay) +\r\n      `>\r\n ` +\r\n      headerSourceCode() +\r\n      contentSourceCode() +\r\n      expendableContentSourceCode() +\r\n      `  \r\n</CmtCard>\r\n`\r\n    );\r\n  };\r\n\r\n  return <SourceCodeComponent sourceCode={getSourceCode()} />;\r\n};\r\n\r\nexport default DemoSourceCode;\r\n","import React from 'react';\r\nimport { CorematComponentDemo } from '../../../../@jumbo/components/PageComponents';\r\nimport DemoSettings from './DemoSettings';\r\nimport ExpendableCardView from './ExpendableCardView';\r\nimport ExpendableCardContextProvider from './ExpendableCardContextProvider';\r\nimport DemoSourceCode from './DemoSourceCode';\r\n\r\nconst CmtExpendableCardDemo = () => {\r\n  return (\r\n    <ExpendableCardContextProvider>\r\n      <CorematComponentDemo SourceCodeComponent={<DemoSourceCode />} SettingsComponent={<DemoSettings />}>\r\n        <ExpendableCardView />\r\n      </CorematComponentDemo>\r\n    </ExpendableCardContextProvider>\r\n  );\r\n};\r\n\r\nexport default CmtExpendableCardDemo;\r\n"],"sourceRoot":""}