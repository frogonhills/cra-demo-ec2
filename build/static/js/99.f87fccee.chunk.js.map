{"version":3,"sources":["@jumbo/components/PageComponents/layouts/PageContainer.js","@jumbo/components/PageComponents/PageHeader.js","@jumbo/components/PageComponents/PageBreadcrumbs/index.js","@jumbo/components/PageComponents/layouts/CorematComponentDemo.js","@jumbo/components/PageComponents/layouts/MuiComponentDemo.js","@jumbo/components/PageComponents/layouts/ComponentsDemo.js","../node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js","../node_modules/@material-ui/core/esm/ListSubheader/ListSubheader.js","webpack:///./src/@fake-db/mui-components/selects sync nonrecursive ./node_modules/raw-loader/dist/cjs.js \\.(txt|js|md|tsx)$?eb76","@fake-db/mui-components/selects/ControlledOpenSelect.txt","@fake-db/mui-components/selects/CustomizedSelects.txt","@fake-db/mui-components/selects/DialogSelect.txt","@fake-db/mui-components/selects/GroupedSelect.txt","@fake-db/mui-components/selects/MultipleSelect.txt","@fake-db/mui-components/selects/NativeSelects.txt","@fake-db/mui-components/selects/SimpleSelect.txt","routes/Components/MuiComponents/Selects/demos/SimpleSelect.js","routes/Components/MuiComponents/Selects/demos/NativeSelects.js","routes/Components/MuiComponents/Selects/demos/CustomizedSelects.js","routes/Components/MuiComponents/Selects/demos/MultipleSelect.js","routes/Components/MuiComponents/Selects/demos/ControlledOpenSelect.js","routes/Components/MuiComponents/Selects/demos/DialogSelect.js","routes/Components/MuiComponents/Selects/demos/GroupedSelect.js","routes/Components/MuiComponents/Selects/index.js"],"names":["useStyles","makeStyles","pageFull","width","PageContainer","heading","breadcrumbs","children","className","restProps","classes","in","direction","mountOnEnter","unmountOnExit","clsx","breadcrumbComponent","items","theme","pageHeaderRoot","display","flexDirection","breakpoints","up","alignItems","titleRoot","down","marginBottom","PageHeader","rest","Box","mb","xs","md","lg","Typography","component","variant","ml","sm","textSm","fontSize","linkBlock","color","PageBreadcrumbs","Breadcrumbs","aria-label","map","item","index","isActive","key","label","to","link","CorematComponentDemo","SourceCodeComponent","SettingsComponent","GridContainer","Grid","CmtCard","MuiComponentDemo","pageTitle","menus","ComponentsDemo","root","flexWrap","contentArea","paddingRight","typography","pxToRem","contentSidebar","height","position","top","overflowY","flexShrink","xsDown","menu","dense","button","href","primary","createSvgIcon","React","d","withStyles","marginLeft","spacing","marginRight","backgroundColor","palette","grey","borderRadius","cursor","boxShadow","shadows","emphasize","icon","name","props","other","_objectWithoutProperties","ButtonBase","_extends","focusRipple","MoreHorizIcon","ref","_props$component","Component","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","separator","_React$useState","expanded","setExpanded","allItems","toArray","filter","child","li","concat","ol","reduce","acc","current","length","push","insertSeparators","_toConsumableArray","slice","BreadcrumbCollapsed","onClick","event","focusable","currentTarget","parentNode","querySelector","focus","renderItemsBeforeAndAfter","padding","margin","listStyle","userSelect","ListSubheader","_props$color","_props$disableGutters","disableGutters","_props$disableSticky","disableSticky","_props$inset","inset","capitalize","sticky","gutters","boxSizing","lineHeight","text","secondary","fontFamily","fontWeight","fontWeightMedium","colorPrimary","main","colorInherit","paddingLeft","zIndex","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","formControl","minWidth","selectEmpty","marginTop","SimpleSelect","useState","age","setAge","handleChange","target","value","FormControl","InputLabel","Select","labelId","onChange","MenuItem","FormHelperText","displayEmpty","inputProps","shrink","disabled","error","renderValue","readOnly","autoWidth","required","NativeSelects","state","setState","htmlFor","native","NativeSelect","defaultValue","BootstrapInput","input","background","paper","border","transition","transitions","create","join","borderColor","InputBase","CustomizedSelects","maxWidth","chips","chip","noLabel","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","names","getStyles","personName","indexOf","fontWeightRegular","MultipleSelect","useTheme","setPersonName","multiple","Input","selected","Checkbox","checked","ListItemText","Chip","options","i","l","ControlledOpenSelect","open","setOpen","handleOpen","Button","onClose","onOpen","container","DialogSelect","Number","handleClose","Dialog","disableBackdropClick","disableEscapeKeyDown","DialogTitle","DialogContent","DialogActions","GroupedSelect","section","sectionHeading","requireRaw","require","demos","filename","Selects","CodeViewerCard","default","language"],"mappings":"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","file":"static/js/99.f87fccee.chunk.js","sourcesContent":["import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { PageBreadcrumbs, PageHeader } from '../index';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  pageFull: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst PageContainer = ({ heading, breadcrumbs, children, className, restProps }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Slide in={true} direction=\"up\" mountOnEnter unmountOnExit>\r\n      <Box className={clsx(classes.pageFull, className)} {...restProps}>\r\n        {(heading || breadcrumbs) && (\r\n          <PageHeader heading={heading} breadcrumbComponent={breadcrumbs && <PageBreadcrumbs items={breadcrumbs} />} />\r\n        )}\r\n        {children}\r\n      </Box>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default PageContainer;\r\n","import React from 'react';\r\nimport { Box, makeStyles, Typography } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageHeaderRoot: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.up('sm')]: {\r\n      alignItems: 'center',\r\n      flexDirection: 'row',\r\n    },\r\n  },\r\n  titleRoot: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginBottom: 10,\r\n    },\r\n  },\r\n}));\r\n\r\nconst PageHeader = ({ heading, breadcrumbComponent, children, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={clsx(classes.pageHeaderRoot, 'page-header')} mb={{ xs: 5, md: 6, lg: 8 }} {...rest}>\r\n      <Typography component=\"div\" variant=\"h1\" className={clsx(classes.titleRoot, 'title')}>\r\n        {heading}\r\n      </Typography>\r\n      <Box ml={{ sm: 'auto' }}>{breadcrumbComponent}</Box>\r\n\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import React from 'react';\r\nimport { Breadcrumbs, makeStyles } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { NavLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  textSm: {\r\n    fontSize: 12,\r\n  },\r\n  linkBlock: {\r\n    display: 'block',\r\n    color: 'inherit',\r\n  },\r\n}));\r\n\r\nconst PageBreadcrumbs = ({ items, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Breadcrumbs className=\"bread-crumbs\" aria-label=\"breadcrumb {...rest}\">\r\n      {items.map((item, index) =>\r\n        item.isActive ? (\r\n          <Typography key={index} className={classes.textSm} color=\"textPrimary\">\r\n            {item.label}\r\n          </Typography>\r\n        ) : (\r\n          <NavLink key={index} className={clsx(classes.textSm, classes.linkBlock)} color=\"inherit\" to={item.link || '/'}>\r\n            {item.label}\r\n          </NavLink>\r\n        ),\r\n      )}\r\n    </Breadcrumbs>\r\n  );\r\n};\r\n\r\nexport default PageBreadcrumbs;\r\n","import React from 'react';\r\nimport { Box, Grid } from '@material-ui/core';\r\nimport CmtCard from '../../../../@coremat/CmtCard';\r\nimport { PageHeader } from '../index';\r\nimport GridContainer from '../../GridContainer';\r\nimport PageContainer from './PageContainer';\r\n\r\nconst CorematComponentDemo = ({ SourceCodeComponent, SettingsComponent, children }) => {\r\n  return (\r\n    <PageContainer>\r\n      <GridContainer>\r\n        <Grid item xs={12} md={7}>\r\n          <PageHeader heading=\"Preview\" />\r\n          <Box mb={8}>{children}</Box>\r\n          <CmtCard>{SourceCodeComponent}</CmtCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={5}>\r\n          {SettingsComponent}\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default CorematComponentDemo;\r\n","import React from 'react';\r\nimport ComponentsDemo from './ComponentsDemo';\r\n\r\nconst MuiComponentDemo = ({ pageTitle, menus, children }) => {\r\n  const breadcrumbs = [\r\n    { label: 'Home', link: '/' },\r\n    { label: 'Material UI Components', link: '/components/mui' },\r\n    { label: pageTitle, isActive: true },\r\n  ];\r\n  return (\r\n    <ComponentsDemo pageTitle={pageTitle} breadcrumbs={breadcrumbs} menus={menus}>\r\n      {children}\r\n    </ComponentsDemo>\r\n  );\r\n};\r\nexport default MuiComponentDemo;\r\n","import React from 'react';\r\nimport { Box, Hidden, List, ListItem, ListItemText, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PageContainer from './PageContainer';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  contentArea: {\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingRight: theme.typography.pxToRem(30),\r\n      width: `calc(100% - ${theme.typography.pxToRem(175)})`,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingRight: theme.typography.pxToRem(54),\r\n    },\r\n  },\r\n  contentSidebar: {\r\n    width: theme.typography.pxToRem(175),\r\n    height: `calc(100vh - ${theme.typography.pxToRem(102)})`,\r\n    position: 'sticky',\r\n    top: 30,\r\n    overflowY: 'auto',\r\n    flexShrink: 0,\r\n  },\r\n}));\r\n\r\nconst ComponentsDemo = ({ pageTitle, menus, breadcrumbs, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <PageContainer heading={pageTitle} breadcrumbs={breadcrumbs}>\r\n      <Box className={classes.root}>\r\n        <Box className={classes.contentArea}>{children}</Box>\r\n        <Hidden xsDown>\r\n          <Box className={classes.contentSidebar}>\r\n            <Typography component=\"h4\" variant=\"h4\">\r\n              Contents\r\n            </Typography>\r\n            <List>\r\n              {menus.map((menu, index) => (\r\n                <ListItem key={index} dense button component=\"a\" href={`#${menu.link}`}>\r\n                  <ListItemText primary={menu.label} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Box>\r\n        </Hidden>\r\n      </Box>\r\n    </PageContainer>\r\n  );\r\n};\r\nexport default ComponentsDemo;\r\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand(event) {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n\n      var focusable = event.currentTarget.parentNode.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      boxSizing: 'border-box',\n      lineHeight: '48px',\n      listStyle: 'none',\n      color: theme.palette.text.secondary,\n      fontFamily: theme.typography.fontFamily,\n      fontWeight: theme.typography.fontWeightMedium,\n      fontSize: theme.typography.pxToRem(14)\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the root element if `inset={true}`. */\n    inset: {\n      paddingLeft: 72\n    },\n\n    /* Styles applied to the root element if `disableSticky={false}`. */\n    sticky: {\n      position: 'sticky',\n      top: 0,\n      zIndex: 1,\n      backgroundColor: 'inherit'\n    }\n  };\n};\nvar ListSubheader = /*#__PURE__*/React.forwardRef(function ListSubheader(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$disableSticky = props.disableSticky,\n      disableSticky = _props$disableSticky === void 0 ? false : _props$disableSticky,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"disableGutters\", \"disableSticky\", \"inset\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, color !== 'default' && classes[\"color\".concat(capitalize(color))], inset && classes.inset, !disableSticky && classes.sticky, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListSubheader.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'inherit']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the List Subheader will not have gutters.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader will not stick to the top during scroll.\n   */\n  disableSticky: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader will be indented.\n   */\n  inset: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListSubheader'\n})(ListSubheader);","var map = {\n\t\"./ControlledOpenSelect.txt\": 2521,\n\t\"./CustomizedSelects.txt\": 2522,\n\t\"./DialogSelect.txt\": 2523,\n\t\"./GroupedSelect.txt\": 2524,\n\t\"./MultipleSelect.txt\": 2525,\n\t\"./NativeSelects.txt\": 2526,\n\t\"./SimpleSelect.txt\": 2527\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2520;","export default \"import React from 'react';\\r\\nimport { makeStyles } from '@material-ui/core/styles';\\r\\nimport InputLabel from '@material-ui/core/InputLabel';\\r\\nimport MenuItem from '@material-ui/core/MenuItem';\\r\\nimport FormControl from '@material-ui/core/FormControl';\\r\\nimport Select from '@material-ui/core/Select';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport { Box } from '@material-ui/core';\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  button: {\\r\\n    display: 'block',\\r\\n    marginTop: theme.spacing(4),\\r\\n  },\\r\\n  formControl: {\\r\\n    margin: theme.spacing(2),\\r\\n    minWidth: 120,\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function ControlledOpenSelect() {\\r\\n  const classes = useStyles();\\r\\n  const [age, setAge] = React.useState('');\\r\\n  const [open, setOpen] = React.useState(false);\\r\\n\\r\\n  const handleChange = event => {\\r\\n    setAge(event.target.value);\\r\\n  };\\r\\n\\r\\n  const handleClose = () => {\\r\\n    setOpen(false);\\r\\n  };\\r\\n\\r\\n  const handleOpen = () => {\\r\\n    setOpen(true);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box>\\r\\n      <Button className={classes.button} onClick={handleOpen}>\\r\\n        Open the select\\r\\n      </Button>\\r\\n      <FormControl className={classes.formControl}>\\r\\n        <InputLabel id=\\\"demo-controlled-open-select-label\\\">Age</InputLabel>\\r\\n        <Select\\r\\n          labelId=\\\"demo-controlled-open-select-label\\\"\\r\\n          id=\\\"demo-controlled-open-select\\\"\\r\\n          open={open}\\r\\n          onClose={handleClose}\\r\\n          onOpen={handleOpen}\\r\\n          value={age}\\r\\n          onChange={handleChange}>\\r\\n          <MenuItem value=\\\"\\\">\\r\\n            <em>None</em>\\r\\n          </MenuItem>\\r\\n          <MenuItem value={10}>Ten</MenuItem>\\r\\n          <MenuItem value={20}>Twenty</MenuItem>\\r\\n          <MenuItem value={30}>Thirty</MenuItem>\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\\r\\nimport InputLabel from '@material-ui/core/InputLabel';\\r\\nimport MenuItem from '@material-ui/core/MenuItem';\\r\\nimport FormControl from '@material-ui/core/FormControl';\\r\\nimport Select from '@material-ui/core/Select';\\r\\nimport NativeSelect from '@material-ui/core/NativeSelect';\\r\\nimport InputBase from '@material-ui/core/InputBase';\\r\\nimport { Box } from '@material-ui/core';\\r\\n\\r\\nconst BootstrapInput = withStyles(theme => ({\\r\\n  root: {\\r\\n    'label + &': {\\r\\n      marginTop: theme.spacing(6),\\r\\n    },\\r\\n  },\\r\\n  input: {\\r\\n    borderRadius: 4,\\r\\n    position: 'relative',\\r\\n    backgroundColor: theme.palette.background.paper,\\r\\n    border: '1px solid #ced4da',\\r\\n    fontSize: 16,\\r\\n    padding: '10px 26px 10px 12px',\\r\\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\\r\\n    // Use the system font instead of the default Roboto font.\\r\\n    fontFamily: [\\r\\n      '-apple-system',\\r\\n      'BlinkMacSystemFont',\\r\\n      '\\\"Segoe UI\\\"',\\r\\n      'Roboto',\\r\\n      '\\\"Helvetica Neue\\\"',\\r\\n      'Arial',\\r\\n      'sans-serif',\\r\\n      '\\\"Apple Color Emoji\\\"',\\r\\n      '\\\"Segoe UI Emoji\\\"',\\r\\n      '\\\"Segoe UI Symbol\\\"',\\r\\n    ].join(','),\\r\\n    '&:focus': {\\r\\n      borderRadius: 4,\\r\\n      borderColor: '#80bdff',\\r\\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\\r\\n    },\\r\\n  },\\r\\n}))(InputBase);\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  margin: {\\r\\n    margin: theme.spacing(2),\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function CustomizedSelects() {\\r\\n  const classes = useStyles();\\r\\n  const [age, setAge] = React.useState('');\\r\\n  const handleChange = event => {\\r\\n    setAge(event.target.value);\\r\\n  };\\r\\n  return (\\r\\n    <Box>\\r\\n      <FormControl className={classes.margin}>\\r\\n        <InputLabel htmlFor=\\\"demo-customized-textbox\\\">Age</InputLabel>\\r\\n        <BootstrapInput id=\\\"demo-customized-textbox\\\" />\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.margin}>\\r\\n        <InputLabel id=\\\"demo-customized-select-label\\\">Age</InputLabel>\\r\\n        <Select\\r\\n          labelId=\\\"demo-customized-select-label\\\"\\r\\n          id=\\\"demo-customized-select\\\"\\r\\n          value={age}\\r\\n          onChange={handleChange}\\r\\n          input={<BootstrapInput />}>\\r\\n          <MenuItem value=\\\"\\\">\\r\\n            <em>None</em>\\r\\n          </MenuItem>\\r\\n          <MenuItem value={10}>Ten</MenuItem>\\r\\n          <MenuItem value={20}>Twenty</MenuItem>\\r\\n          <MenuItem value={30}>Thirty</MenuItem>\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.margin}>\\r\\n        <InputLabel htmlFor=\\\"demo-customized-select-native\\\">Age</InputLabel>\\r\\n        <NativeSelect id=\\\"demo-customized-select-native\\\" value={age} onChange={handleChange} input={<BootstrapInput />}>\\r\\n          <option aria-label=\\\"None\\\" value=\\\"\\\" />\\r\\n          <option value={10}>Ten</option>\\r\\n          <option value={20}>Twenty</option>\\r\\n          <option value={30}>Thirty</option>\\r\\n        </NativeSelect>\\r\\n      </FormControl>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport { makeStyles } from '@material-ui/core/styles';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport Dialog from '@material-ui/core/Dialog';\\r\\nimport DialogActions from '@material-ui/core/DialogActions';\\r\\nimport DialogContent from '@material-ui/core/DialogContent';\\r\\nimport DialogTitle from '@material-ui/core/DialogTitle';\\r\\nimport InputLabel from '@material-ui/core/InputLabel';\\r\\nimport Input from '@material-ui/core/Input';\\r\\nimport MenuItem from '@material-ui/core/MenuItem';\\r\\nimport FormControl from '@material-ui/core/FormControl';\\r\\nimport Select from '@material-ui/core/Select';\\r\\nimport { Box } from '@material-ui/core';\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  container: {\\r\\n    display: 'flex',\\r\\n    flexWrap: 'wrap',\\r\\n  },\\r\\n  formControl: {\\r\\n    margin: theme.spacing(2),\\r\\n    minWidth: 120,\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function DialogSelect() {\\r\\n  const classes = useStyles();\\r\\n  const [open, setOpen] = React.useState(false);\\r\\n  const [age, setAge] = React.useState('');\\r\\n\\r\\n  const handleChange = event => {\\r\\n    setAge(Number(event.target.value) || '');\\r\\n  };\\r\\n\\r\\n  const handleClickOpen = () => {\\r\\n    setOpen(true);\\r\\n  };\\r\\n\\r\\n  const handleClose = () => {\\r\\n    setOpen(false);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box>\\r\\n      <Button onClick={handleClickOpen}>Open select dialog</Button>\\r\\n      <Dialog disableBackdropClick disableEscapeKeyDown open={open} onClose={handleClose}>\\r\\n        <DialogTitle>Fill the form</DialogTitle>\\r\\n        <DialogContent>\\r\\n          <form className={classes.container}>\\r\\n            <FormControl className={classes.formControl}>\\r\\n              <InputLabel htmlFor=\\\"demo-dialog-native\\\">Age</InputLabel>\\r\\n              <Select native value={age} onChange={handleChange} input={<Input id=\\\"demo-dialog-native\\\" />}>\\r\\n                <option aria-label=\\\"None\\\" value=\\\"\\\" />\\r\\n                <option value={10}>Ten</option>\\r\\n                <option value={20}>Twenty</option>\\r\\n                <option value={30}>Thirty</option>\\r\\n              </Select>\\r\\n            </FormControl>\\r\\n            <FormControl className={classes.formControl}>\\r\\n              <InputLabel id=\\\"demo-dialog-select-label\\\">Age</InputLabel>\\r\\n              <Select\\r\\n                labelId=\\\"demo-dialog-select-label\\\"\\r\\n                id=\\\"demo-dialog-select\\\"\\r\\n                value={age}\\r\\n                onChange={handleChange}\\r\\n                input={<Input />}>\\r\\n                <MenuItem value=\\\"\\\">\\r\\n                  <em>None</em>\\r\\n                </MenuItem>\\r\\n                <MenuItem value={10}>Ten</MenuItem>\\r\\n                <MenuItem value={20}>Twenty</MenuItem>\\r\\n                <MenuItem value={30}>Thirty</MenuItem>\\r\\n              </Select>\\r\\n            </FormControl>\\r\\n          </form>\\r\\n        </DialogContent>\\r\\n        <DialogActions>\\r\\n          <Button onClick={handleClose} color=\\\"primary\\\">\\r\\n            Cancel\\r\\n          </Button>\\r\\n          <Button onClick={handleClose} color=\\\"primary\\\">\\r\\n            Ok\\r\\n          </Button>\\r\\n        </DialogActions>\\r\\n      </Dialog>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport { makeStyles } from '@material-ui/core/styles';\\r\\nimport InputLabel from '@material-ui/core/InputLabel';\\r\\nimport MenuItem from '@material-ui/core/MenuItem';\\r\\nimport ListSubheader from '@material-ui/core/ListSubheader';\\r\\nimport FormControl from '@material-ui/core/FormControl';\\r\\nimport Select from '@material-ui/core/Select';\\r\\nimport { Box } from '@material-ui/core';\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  formControl: {\\r\\n    margin: theme.spacing(2),\\r\\n    minWidth: 120,\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function GroupedSelect() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  return (\\r\\n    <Box>\\r\\n      <FormControl className={classes.formControl}>\\r\\n        <InputLabel htmlFor=\\\"grouped-native-select\\\">Grouping</InputLabel>\\r\\n        <Select native defaultValue=\\\"\\\" id=\\\"grouped-native-select\\\">\\r\\n          <option aria-label=\\\"None\\\" value=\\\"\\\" />\\r\\n          <optgroup label=\\\"Category 1\\\">\\r\\n            <option value={1}>Option 1</option>\\r\\n            <option value={2}>Option 2</option>\\r\\n          </optgroup>\\r\\n          <optgroup label=\\\"Category 2\\\">\\r\\n            <option value={3}>Option 3</option>\\r\\n            <option value={4}>Option 4</option>\\r\\n          </optgroup>\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.formControl}>\\r\\n        <InputLabel htmlFor=\\\"grouped-select\\\">Grouping</InputLabel>\\r\\n        <Select defaultValue=\\\"\\\" id=\\\"grouped-select\\\">\\r\\n          <MenuItem value=\\\"\\\">\\r\\n            <em>None</em>\\r\\n          </MenuItem>\\r\\n          <ListSubheader>Category 1</ListSubheader>\\r\\n          <MenuItem value={1}>Option 1</MenuItem>\\r\\n          <MenuItem value={2}>Option 2</MenuItem>\\r\\n          <ListSubheader>Category 2</ListSubheader>\\r\\n          <MenuItem value={3}>Option 3</MenuItem>\\r\\n          <MenuItem value={4}>Option 4</MenuItem>\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport clsx from 'clsx';\\r\\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\\r\\nimport Input from '@material-ui/core/Input';\\r\\nimport InputLabel from '@material-ui/core/InputLabel';\\r\\nimport MenuItem from '@material-ui/core/MenuItem';\\r\\nimport FormControl from '@material-ui/core/FormControl';\\r\\nimport ListItemText from '@material-ui/core/ListItemText';\\r\\nimport Select from '@material-ui/core/Select';\\r\\nimport Checkbox from '@material-ui/core/Checkbox';\\r\\nimport Chip from '@material-ui/core/Chip';\\r\\nimport { Box } from '@material-ui/core';\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  formControl: {\\r\\n    margin: theme.spacing(2),\\r\\n    minWidth: 120,\\r\\n    maxWidth: 300,\\r\\n  },\\r\\n  chips: {\\r\\n    display: 'flex',\\r\\n    flexWrap: 'wrap',\\r\\n  },\\r\\n  chip: {\\r\\n    margin: 2,\\r\\n  },\\r\\n  noLabel: {\\r\\n    marginTop: theme.spacing(6),\\r\\n  },\\r\\n}));\\r\\n\\r\\nconst ITEM_HEIGHT = 48;\\r\\nconst ITEM_PADDING_TOP = 8;\\r\\nconst MenuProps = {\\r\\n  PaperProps: {\\r\\n    style: {\\r\\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\\r\\n      width: 250,\\r\\n    },\\r\\n  },\\r\\n};\\r\\n\\r\\nconst names = [\\r\\n  'Oliver Hansen',\\r\\n  'Van Henry',\\r\\n  'April Tucker',\\r\\n  'Ralph Hubbard',\\r\\n  'Omar Alexander',\\r\\n  'Carlos Abbott',\\r\\n  'Miriam Wagner',\\r\\n  'Bradley Wilkerson',\\r\\n  'Virginia Andrews',\\r\\n  'Kelly Snyder',\\r\\n];\\r\\n\\r\\nfunction getStyles(name, personName, theme) {\\r\\n  return {\\r\\n    fontWeight: personName.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium,\\r\\n  };\\r\\n}\\r\\n\\r\\nexport default function MultipleSelect() {\\r\\n  const classes = useStyles();\\r\\n  const theme = useTheme();\\r\\n  const [personName, setPersonName] = React.useState([]);\\r\\n\\r\\n  const handleChange = event => {\\r\\n    setPersonName(event.target.value);\\r\\n  };\\r\\n\\r\\n  const handleChangeMultiple = event => {\\r\\n    const { options } = event.target;\\r\\n    const value = [];\\r\\n    for (let i = 0, l = options.length; i < l; i += 1) {\\r\\n      if (options[i].selected) {\\r\\n        value.push(options[i].value);\\r\\n      }\\r\\n    }\\r\\n    setPersonName(value);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box>\\r\\n      <FormControl className={classes.formControl}>\\r\\n        <InputLabel id=\\\"demo-multiple-name-label\\\">Name</InputLabel>\\r\\n        <Select\\r\\n          labelId=\\\"demo-multiple-name-label\\\"\\r\\n          id=\\\"demo-multiple-name\\\"\\r\\n          multiple\\r\\n          value={personName}\\r\\n          onChange={handleChange}\\r\\n          input={<Input />}\\r\\n          MenuProps={MenuProps}>\\r\\n          {names.map(name => (\\r\\n            <MenuItem key={name} value={name} style={getStyles(name, personName, theme)}>\\r\\n              {name}\\r\\n            </MenuItem>\\r\\n          ))}\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.formControl}>\\r\\n        <InputLabel id=\\\"demo-multiple-checkbox-label\\\">Tag</InputLabel>\\r\\n        <Select\\r\\n          labelId=\\\"demo-multiple-checkbox-label\\\"\\r\\n          id=\\\"demo-multiple-checkbox\\\"\\r\\n          multiple\\r\\n          value={personName}\\r\\n          onChange={handleChange}\\r\\n          input={<Input />}\\r\\n          renderValue={selected => selected.join(', ')}\\r\\n          MenuProps={MenuProps}>\\r\\n          {names.map(name => (\\r\\n            <MenuItem key={name} value={name}>\\r\\n              <Checkbox checked={personName.indexOf(name) > -1} />\\r\\n              <ListItemText primary={name} />\\r\\n            </MenuItem>\\r\\n          ))}\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.formControl}>\\r\\n        <InputLabel id=\\\"demo-multiple-chip-label\\\">Chip</InputLabel>\\r\\n        <Select\\r\\n          labelId=\\\"demo-multiple-chip-label\\\"\\r\\n          id=\\\"demo-multiple-chip\\\"\\r\\n          multiple\\r\\n          value={personName}\\r\\n          onChange={handleChange}\\r\\n          input={<Input id=\\\"select-multiple-chip\\\" />}\\r\\n          renderValue={selected => (\\r\\n            <div className={classes.chips}>\\r\\n              {selected.map(value => (\\r\\n                <Chip key={value} label={value} className={classes.chip} />\\r\\n              ))}\\r\\n            </div>\\r\\n          )}\\r\\n          MenuProps={MenuProps}>\\r\\n          {names.map(name => (\\r\\n            <MenuItem key={name} value={name} style={getStyles(name, personName, theme)}>\\r\\n              {name}\\r\\n            </MenuItem>\\r\\n          ))}\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n      <FormControl className={clsx(classes.formControl, classes.noLabel)}>\\r\\n        <Select\\r\\n          multiple\\r\\n          displayEmpty\\r\\n          value={personName}\\r\\n          onChange={handleChange}\\r\\n          input={<Input />}\\r\\n          renderValue={selected => {\\r\\n            if (selected.length === 0) {\\r\\n              return <em>Placeholder</em>;\\r\\n            }\\r\\n\\r\\n            return selected.join(', ');\\r\\n          }}\\r\\n          MenuProps={MenuProps}\\r\\n          inputProps={{ 'aria-label': 'Without label' }}>\\r\\n          <MenuItem disabled value=\\\"\\\">\\r\\n            <em>Placeholder</em>\\r\\n          </MenuItem>\\r\\n          {names.map(name => (\\r\\n            <MenuItem key={name} value={name} style={getStyles(name, personName, theme)}>\\r\\n              {name}\\r\\n            </MenuItem>\\r\\n          ))}\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.formControl}>\\r\\n        <InputLabel shrink htmlFor=\\\"select-multiple-native\\\">\\r\\n          Native\\r\\n        </InputLabel>\\r\\n        <Select\\r\\n          multiple\\r\\n          native\\r\\n          value={personName}\\r\\n          onChange={handleChangeMultiple}\\r\\n          inputProps={{\\r\\n            id: 'select-multiple-native',\\r\\n          }}>\\r\\n          {names.map(name => (\\r\\n            <option key={name} value={name}>\\r\\n              {name}\\r\\n            </option>\\r\\n          ))}\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport { makeStyles } from '@material-ui/core/styles';\\r\\nimport InputLabel from '@material-ui/core/InputLabel';\\r\\nimport FormHelperText from '@material-ui/core/FormHelperText';\\r\\nimport FormControl from '@material-ui/core/FormControl';\\r\\nimport Select from '@material-ui/core/Select';\\r\\nimport NativeSelect from '@material-ui/core/NativeSelect';\\r\\nimport { Box } from '@material-ui/core';\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  formControl: {\\r\\n    margin: theme.spacing(2),\\r\\n    minWidth: 120,\\r\\n  },\\r\\n  selectEmpty: {\\r\\n    marginTop: theme.spacing(4),\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function NativeSelects() {\\r\\n  const classes = useStyles();\\r\\n  const [state, setState] = React.useState({\\r\\n    age: '',\\r\\n    name: 'hai',\\r\\n  });\\r\\n\\r\\n  const handleChange = event => {\\r\\n    const name = event.target.name;\\r\\n    setState({\\r\\n      ...state,\\r\\n      [name]: event.target.value,\\r\\n    });\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box>\\r\\n      <FormControl className={classes.formControl}>\\r\\n        <InputLabel htmlFor=\\\"age-native-simple\\\">Age</InputLabel>\\r\\n        <Select\\r\\n          native\\r\\n          value={state.age}\\r\\n          onChange={handleChange}\\r\\n          inputProps={{\\r\\n            name: 'age',\\r\\n            id: 'age-native-simple',\\r\\n          }}>\\r\\n          <option aria-label=\\\"None\\\" value=\\\"\\\" />\\r\\n          <option value={10}>Ten</option>\\r\\n          <option value={20}>Twenty</option>\\r\\n          <option value={30}>Thirty</option>\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.formControl}>\\r\\n        <InputLabel htmlFor=\\\"age-native-helper\\\">Age</InputLabel>\\r\\n        <NativeSelect\\r\\n          value={state.age}\\r\\n          onChange={handleChange}\\r\\n          inputProps={{\\r\\n            name: 'age',\\r\\n            id: 'age-native-helper',\\r\\n          }}>\\r\\n          <option aria-label=\\\"None\\\" value=\\\"\\\" />\\r\\n          <option value={10}>Ten</option>\\r\\n          <option value={20}>Twenty</option>\\r\\n          <option value={30}>Thirty</option>\\r\\n        </NativeSelect>\\r\\n        <FormHelperText>Some important helper text</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.formControl}>\\r\\n        <NativeSelect\\r\\n          value={state.age}\\r\\n          onChange={handleChange}\\r\\n          name=\\\"age\\\"\\r\\n          className={classes.selectEmpty}\\r\\n          inputProps={{ 'aria-label': 'age' }}>\\r\\n          <option value=\\\"\\\">None</option>\\r\\n          <option value={10}>Ten</option>\\r\\n          <option value={20}>Twenty</option>\\r\\n          <option value={30}>Thirty</option>\\r\\n        </NativeSelect>\\r\\n        <FormHelperText>With visually hidden label</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.formControl}>\\r\\n        <InputLabel shrink htmlFor=\\\"age-native-label-placeholder\\\">\\r\\n          Age\\r\\n        </InputLabel>\\r\\n        <NativeSelect\\r\\n          value={state.age}\\r\\n          onChange={handleChange}\\r\\n          inputProps={{\\r\\n            name: 'age',\\r\\n            id: 'age-native-label-placeholder',\\r\\n          }}>\\r\\n          <option value=\\\"\\\">None</option>\\r\\n          <option value={10}>Ten</option>\\r\\n          <option value={20}>Twenty</option>\\r\\n          <option value={30}>Thirty</option>\\r\\n        </NativeSelect>\\r\\n        <FormHelperText>Label + placeholder</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.formControl} disabled>\\r\\n        <InputLabel htmlFor=\\\"name-native-disabled\\\">Name</InputLabel>\\r\\n        <NativeSelect\\r\\n          value={state.name}\\r\\n          onChange={handleChange}\\r\\n          inputProps={{\\r\\n            name: 'name',\\r\\n            id: 'name-native-disabled',\\r\\n          }}>\\r\\n          <option value=\\\"\\\">None</option>\\r\\n          <optgroup label=\\\"Author\\\">\\r\\n            <option value=\\\"hai\\\">Hai</option>\\r\\n          </optgroup>\\r\\n          <optgroup label=\\\"Contributors\\\">\\r\\n            <option value=\\\"olivier\\\">Olivier</option>\\r\\n            <option value=\\\"kevin\\\">Kevin</option>\\r\\n          </optgroup>\\r\\n        </NativeSelect>\\r\\n        <FormHelperText>Disabled</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.formControl} error>\\r\\n        <InputLabel htmlFor=\\\"name-native-error\\\">Name</InputLabel>\\r\\n        <NativeSelect\\r\\n          value={state.name}\\r\\n          onChange={handleChange}\\r\\n          name=\\\"name\\\"\\r\\n          inputProps={{\\r\\n            id: 'name-native-error',\\r\\n          }}>\\r\\n          <optgroup label=\\\"Author\\\">\\r\\n            <option value=\\\"hai\\\">Hai</option>\\r\\n          </optgroup>\\r\\n          <optgroup label=\\\"Contributors\\\">\\r\\n            <option value=\\\"olivier\\\">Olivier</option>\\r\\n            <option value=\\\"kevin\\\">Kevin</option>\\r\\n          </optgroup>\\r\\n        </NativeSelect>\\r\\n        <FormHelperText>Error</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.formControl}>\\r\\n        <InputLabel htmlFor=\\\"uncontrolled-native\\\">Name</InputLabel>\\r\\n        <NativeSelect\\r\\n          defaultValue={30}\\r\\n          inputProps={{\\r\\n            name: 'name',\\r\\n            id: 'uncontrolled-native',\\r\\n          }}>\\r\\n          <option value={10}>Ten</option>\\r\\n          <option value={20}>Twenty</option>\\r\\n          <option value={30}>Thirty</option>\\r\\n        </NativeSelect>\\r\\n        <FormHelperText>Uncontrolled</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.formControl}>\\r\\n        <NativeSelect\\r\\n          className={classes.selectEmpty}\\r\\n          value={state.age}\\r\\n          name=\\\"age\\\"\\r\\n          onChange={handleChange}\\r\\n          inputProps={{ 'aria-label': 'age' }}>\\r\\n          <option value=\\\"\\\" disabled>\\r\\n            Placeholder\\r\\n          </option>\\r\\n          <option value={10}>Ten</option>\\r\\n          <option value={20}>Twenty</option>\\r\\n          <option value={30}>Thirty</option>\\r\\n        </NativeSelect>\\r\\n        <FormHelperText>Placeholder</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl required className={classes.formControl}>\\r\\n        <InputLabel htmlFor=\\\"age-native-required\\\">Age</InputLabel>\\r\\n        <Select\\r\\n          native\\r\\n          value={state.age}\\r\\n          onChange={handleChange}\\r\\n          name=\\\"age\\\"\\r\\n          inputProps={{\\r\\n            id: 'age-native-required',\\r\\n          }}>\\r\\n          <option aria-label=\\\"None\\\" value=\\\"\\\" />\\r\\n          <option value={10}>Ten</option>\\r\\n          <option value={20}>Twenty</option>\\r\\n          <option value={30}>Thirty</option>\\r\\n        </Select>\\r\\n        <FormHelperText>Required</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl variant=\\\"outlined\\\" className={classes.formControl}>\\r\\n        <InputLabel htmlFor=\\\"outlined-age-native-simple\\\">Age</InputLabel>\\r\\n        <Select\\r\\n          native\\r\\n          value={state.age}\\r\\n          onChange={handleChange}\\r\\n          label=\\\"Age\\\"\\r\\n          inputProps={{\\r\\n            name: 'age',\\r\\n            id: 'outlined-age-native-simple',\\r\\n          }}>\\r\\n          <option aria-label=\\\"None\\\" value=\\\"\\\" />\\r\\n          <option value={10}>Ten</option>\\r\\n          <option value={20}>Twenty</option>\\r\\n          <option value={30}>Thirty</option>\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n      <FormControl variant=\\\"filled\\\" className={classes.formControl}>\\r\\n        <InputLabel htmlFor=\\\"filled-age-native-simple\\\">Age</InputLabel>\\r\\n        <Select\\r\\n          native\\r\\n          value={state.age}\\r\\n          onChange={handleChange}\\r\\n          inputProps={{\\r\\n            name: 'age',\\r\\n            id: 'filled-age-native-simple',\\r\\n          }}>\\r\\n          <option aria-label=\\\"None\\\" value=\\\"\\\" />\\r\\n          <option value={10}>Ten</option>\\r\\n          <option value={20}>Twenty</option>\\r\\n          <option value={30}>Thirty</option>\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport { makeStyles } from '@material-ui/core/styles';\\r\\nimport InputLabel from '@material-ui/core/InputLabel';\\r\\nimport MenuItem from '@material-ui/core/MenuItem';\\r\\nimport FormHelperText from '@material-ui/core/FormHelperText';\\r\\nimport FormControl from '@material-ui/core/FormControl';\\r\\nimport Select from '@material-ui/core/Select';\\r\\nimport { Box } from '@material-ui/core';\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  formControl: {\\r\\n    margin: theme.spacing(2),\\r\\n    minWidth: 120,\\r\\n  },\\r\\n  selectEmpty: {\\r\\n    marginTop: theme.spacing(4),\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function SimpleSelect() {\\r\\n  const classes = useStyles();\\r\\n  const [age, setAge] = React.useState('');\\r\\n\\r\\n  const handleChange = event => {\\r\\n    setAge(event.target.value);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box>\\r\\n      <FormControl className={classes.formControl}>\\r\\n        <InputLabel id=\\\"demo-simple-select-label\\\">Age</InputLabel>\\r\\n        <Select labelId=\\\"demo-simple-select-label\\\" id=\\\"demo-simple-select\\\" value={age} onChange={handleChange}>\\r\\n          <MenuItem value={10}>Ten</MenuItem>\\r\\n          <MenuItem value={20}>Twenty</MenuItem>\\r\\n          <MenuItem value={30}>Thirty</MenuItem>\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.formControl}>\\r\\n        <InputLabel id=\\\"demo-simple-select-helper-label\\\">Age</InputLabel>\\r\\n        <Select labelId=\\\"demo-simple-select-helper-label\\\" id=\\\"demo-simple-select-helper\\\" value={age} onChange={handleChange}>\\r\\n          <MenuItem value=\\\"\\\">\\r\\n            <em>None</em>\\r\\n          </MenuItem>\\r\\n          <MenuItem value={10}>Ten</MenuItem>\\r\\n          <MenuItem value={20}>Twenty</MenuItem>\\r\\n          <MenuItem value={30}>Thirty</MenuItem>\\r\\n        </Select>\\r\\n        <FormHelperText>Some important helper text</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.formControl}>\\r\\n        <Select\\r\\n          value={age}\\r\\n          onChange={handleChange}\\r\\n          displayEmpty\\r\\n          className={classes.selectEmpty}\\r\\n          inputProps={{ 'aria-label': 'Without label' }}>\\r\\n          <MenuItem value=\\\"\\\">\\r\\n            <em>None</em>\\r\\n          </MenuItem>\\r\\n          <MenuItem value={10}>Ten</MenuItem>\\r\\n          <MenuItem value={20}>Twenty</MenuItem>\\r\\n          <MenuItem value={30}>Thirty</MenuItem>\\r\\n        </Select>\\r\\n        <FormHelperText>Without label</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.formControl}>\\r\\n        <InputLabel shrink id=\\\"demo-simple-select-placeholder-label-label\\\">\\r\\n          Age\\r\\n        </InputLabel>\\r\\n        <Select\\r\\n          labelId=\\\"demo-simple-select-placeholder-label-label\\\"\\r\\n          id=\\\"demo-simple-select-placeholder-label\\\"\\r\\n          value={age}\\r\\n          onChange={handleChange}\\r\\n          displayEmpty\\r\\n          className={classes.selectEmpty}>\\r\\n          <MenuItem value=\\\"\\\">\\r\\n            <em>None</em>\\r\\n          </MenuItem>\\r\\n          <MenuItem value={10}>Ten</MenuItem>\\r\\n          <MenuItem value={20}>Twenty</MenuItem>\\r\\n          <MenuItem value={30}>Thirty</MenuItem>\\r\\n        </Select>\\r\\n        <FormHelperText>Label + placeholder</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.formControl} disabled>\\r\\n        <InputLabel id=\\\"demo-simple-select-disabled-label\\\">Name</InputLabel>\\r\\n        <Select\\r\\n          labelId=\\\"demo-simple-select-disabled-label\\\"\\r\\n          id=\\\"demo-simple-select-disabled\\\"\\r\\n          value={age}\\r\\n          onChange={handleChange}>\\r\\n          <MenuItem value=\\\"\\\">\\r\\n            <em>None</em>\\r\\n          </MenuItem>\\r\\n          <MenuItem value={10}>Ten</MenuItem>\\r\\n          <MenuItem value={20}>Twenty</MenuItem>\\r\\n          <MenuItem value={30}>Thirty</MenuItem>\\r\\n        </Select>\\r\\n        <FormHelperText>Disabled</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.formControl} error>\\r\\n        <InputLabel id=\\\"demo-simple-select-error-label\\\">Name</InputLabel>\\r\\n        <Select\\r\\n          labelId=\\\"demo-simple-select-error-label\\\"\\r\\n          id=\\\"demo-simple-select-error\\\"\\r\\n          value={age}\\r\\n          onChange={handleChange}\\r\\n          renderValue={value => `⚠️  - ${value}`}>\\r\\n          <MenuItem value=\\\"\\\">\\r\\n            <em>None</em>\\r\\n          </MenuItem>\\r\\n          <MenuItem value={10}>Ten</MenuItem>\\r\\n          <MenuItem value={20}>Twenty</MenuItem>\\r\\n          <MenuItem value={30}>Thirty</MenuItem>\\r\\n        </Select>\\r\\n        <FormHelperText>Error</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.formControl}>\\r\\n        <InputLabel id=\\\"demo-simple-select-readonly-label\\\">Name</InputLabel>\\r\\n        <Select\\r\\n          labelId=\\\"demo-simple-select-readonly-label\\\"\\r\\n          id=\\\"demo-simple-select-readonly\\\"\\r\\n          value={age}\\r\\n          onChange={handleChange}\\r\\n          inputProps={{ readOnly: true }}>\\r\\n          <MenuItem value=\\\"\\\">\\r\\n            <em>None</em>\\r\\n          </MenuItem>\\r\\n          <MenuItem value={10}>Ten</MenuItem>\\r\\n          <MenuItem value={20}>Twenty</MenuItem>\\r\\n          <MenuItem value={30}>Thirty</MenuItem>\\r\\n        </Select>\\r\\n        <FormHelperText>Read only</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.formControl}>\\r\\n        <InputLabel id=\\\"demo-simple-select-autowidth-label\\\">Age</InputLabel>\\r\\n        <Select\\r\\n          labelId=\\\"demo-simple-select-autowidth-label\\\"\\r\\n          id=\\\"demo-simple-select-autowidth\\\"\\r\\n          value={age}\\r\\n          onChange={handleChange}\\r\\n          autoWidth>\\r\\n          <MenuItem value=\\\"\\\">\\r\\n            <em>None</em>\\r\\n          </MenuItem>\\r\\n          <MenuItem value={10}>Ten</MenuItem>\\r\\n          <MenuItem value={20}>Twenty</MenuItem>\\r\\n          <MenuItem value={30}>Thirty</MenuItem>\\r\\n        </Select>\\r\\n        <FormHelperText>Auto width</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.formControl}>\\r\\n        <Select\\r\\n          value={age}\\r\\n          onChange={handleChange}\\r\\n          displayEmpty\\r\\n          className={classes.selectEmpty}\\r\\n          inputProps={{ 'aria-label': 'Without label' }}>\\r\\n          <MenuItem value=\\\"\\\" disabled>\\r\\n            Placeholder\\r\\n          </MenuItem>\\r\\n          <MenuItem value={10}>Ten</MenuItem>\\r\\n          <MenuItem value={20}>Twenty</MenuItem>\\r\\n          <MenuItem value={30}>Thirty</MenuItem>\\r\\n        </Select>\\r\\n        <FormHelperText>Placeholder</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl required className={classes.formControl}>\\r\\n        <InputLabel id=\\\"demo-simple-select-required-label\\\">Age</InputLabel>\\r\\n        <Select\\r\\n          labelId=\\\"demo-simple-select-required-label\\\"\\r\\n          id=\\\"demo-simple-select-required\\\"\\r\\n          value={age}\\r\\n          onChange={handleChange}\\r\\n          className={classes.selectEmpty}>\\r\\n          <MenuItem value=\\\"\\\">\\r\\n            <em>None</em>\\r\\n          </MenuItem>\\r\\n          <MenuItem value={10}>Ten</MenuItem>\\r\\n          <MenuItem value={20}>Twenty</MenuItem>\\r\\n          <MenuItem value={30}>Thirty</MenuItem>\\r\\n        </Select>\\r\\n        <FormHelperText>Required</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl variant=\\\"outlined\\\" className={classes.formControl}>\\r\\n        <InputLabel id=\\\"demo-simple-select-outlined-label\\\">Age</InputLabel>\\r\\n        <Select\\r\\n          labelId=\\\"demo-simple-select-outlined-label\\\"\\r\\n          id=\\\"demo-simple-select-outlined\\\"\\r\\n          value={age}\\r\\n          onChange={handleChange}\\r\\n          label=\\\"Age\\\">\\r\\n          <MenuItem value=\\\"\\\">\\r\\n            <em>None</em>\\r\\n          </MenuItem>\\r\\n          <MenuItem value={10}>Ten</MenuItem>\\r\\n          <MenuItem value={20}>Twenty</MenuItem>\\r\\n          <MenuItem value={30}>Thirty</MenuItem>\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n      <FormControl variant=\\\"filled\\\" className={classes.formControl}>\\r\\n        <InputLabel id=\\\"demo-simple-select-filled-label\\\">Age</InputLabel>\\r\\n        <Select labelId=\\\"demo-simple-select-filled-label\\\" id=\\\"demo-simple-select-filled\\\" value={age} onChange={handleChange}>\\r\\n          <MenuItem value=\\\"\\\">\\r\\n            <em>None</em>\\r\\n          </MenuItem>\\r\\n          <MenuItem value={10}>Ten</MenuItem>\\r\\n          <MenuItem value={20}>Twenty</MenuItem>\\r\\n          <MenuItem value={30}>Thirty</MenuItem>\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    margin: theme.spacing(2),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nexport default function SimpleSelect() {\r\n  const classes = useStyles();\r\n  const [age, setAge] = React.useState('');\r\n\r\n  const handleChange = event => {\r\n    setAge(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-label\">Age</InputLabel>\r\n        <Select labelId=\"demo-simple-select-label\" id=\"demo-simple-select\" value={age} onChange={handleChange}>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-helper-label\">Age</InputLabel>\r\n        <Select labelId=\"demo-simple-select-helper-label\" id=\"demo-simple-select-helper\" value={age} onChange={handleChange}>\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Some important helper text</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <Select\r\n          value={age}\r\n          onChange={handleChange}\r\n          displayEmpty\r\n          className={classes.selectEmpty}\r\n          inputProps={{ 'aria-label': 'Without label' }}>\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Without label</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n          Age\r\n        </InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-placeholder-label-label\"\r\n          id=\"demo-simple-select-placeholder-label\"\r\n          value={age}\r\n          onChange={handleChange}\r\n          displayEmpty\r\n          className={classes.selectEmpty}>\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Label + placeholder</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl} disabled>\r\n        <InputLabel id=\"demo-simple-select-disabled-label\">Name</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-disabled-label\"\r\n          id=\"demo-simple-select-disabled\"\r\n          value={age}\r\n          onChange={handleChange}>\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Disabled</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl} error>\r\n        <InputLabel id=\"demo-simple-select-error-label\">Name</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-error-label\"\r\n          id=\"demo-simple-select-error\"\r\n          value={age}\r\n          onChange={handleChange}\r\n          renderValue={value => `⚠️  - ${value}`}>\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Error</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-readonly-label\">Name</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-readonly-label\"\r\n          id=\"demo-simple-select-readonly\"\r\n          value={age}\r\n          onChange={handleChange}\r\n          inputProps={{ readOnly: true }}>\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Read only</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-autowidth-label\">Age</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-autowidth-label\"\r\n          id=\"demo-simple-select-autowidth\"\r\n          value={age}\r\n          onChange={handleChange}\r\n          autoWidth>\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Auto width</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <Select\r\n          value={age}\r\n          onChange={handleChange}\r\n          displayEmpty\r\n          className={classes.selectEmpty}\r\n          inputProps={{ 'aria-label': 'Without label' }}>\r\n          <MenuItem value=\"\" disabled>\r\n            Placeholder\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Placeholder</FormHelperText>\r\n      </FormControl>\r\n      <FormControl required className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-required-label\">Age</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-required-label\"\r\n          id=\"demo-simple-select-required\"\r\n          value={age}\r\n          onChange={handleChange}\r\n          className={classes.selectEmpty}>\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Required</FormHelperText>\r\n      </FormControl>\r\n      <FormControl variant=\"outlined\" className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-outlined-label\">Age</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-outlined-label\"\r\n          id=\"demo-simple-select-outlined\"\r\n          value={age}\r\n          onChange={handleChange}\r\n          label=\"Age\">\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl variant=\"filled\" className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-filled-label\">Age</InputLabel>\r\n        <Select labelId=\"demo-simple-select-filled-label\" id=\"demo-simple-select-filled\" value={age} onChange={handleChange}>\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    margin: theme.spacing(2),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nexport default function NativeSelects() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    age: '',\r\n    name: 'hai',\r\n  });\r\n\r\n  const handleChange = event => {\r\n    const name = event.target.name;\r\n    setState({\r\n      ...state,\r\n      [name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"age-native-simple\">Age</InputLabel>\r\n        <Select\r\n          native\r\n          value={state.age}\r\n          onChange={handleChange}\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'age-native-simple',\r\n          }}>\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"age-native-helper\">Age</InputLabel>\r\n        <NativeSelect\r\n          value={state.age}\r\n          onChange={handleChange}\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'age-native-helper',\r\n          }}>\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n        <FormHelperText>Some important helper text</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <NativeSelect\r\n          value={state.age}\r\n          onChange={handleChange}\r\n          name=\"age\"\r\n          className={classes.selectEmpty}\r\n          inputProps={{ 'aria-label': 'age' }}>\r\n          <option value=\"\">None</option>\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n        <FormHelperText>With visually hidden label</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel shrink htmlFor=\"age-native-label-placeholder\">\r\n          Age\r\n        </InputLabel>\r\n        <NativeSelect\r\n          value={state.age}\r\n          onChange={handleChange}\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'age-native-label-placeholder',\r\n          }}>\r\n          <option value=\"\">None</option>\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n        <FormHelperText>Label + placeholder</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl} disabled>\r\n        <InputLabel htmlFor=\"name-native-disabled\">Name</InputLabel>\r\n        <NativeSelect\r\n          value={state.name}\r\n          onChange={handleChange}\r\n          inputProps={{\r\n            name: 'name',\r\n            id: 'name-native-disabled',\r\n          }}>\r\n          <option value=\"\">None</option>\r\n          <optgroup label=\"Author\">\r\n            <option value=\"hai\">Hai</option>\r\n          </optgroup>\r\n          <optgroup label=\"Contributors\">\r\n            <option value=\"olivier\">Olivier</option>\r\n            <option value=\"kevin\">Kevin</option>\r\n          </optgroup>\r\n        </NativeSelect>\r\n        <FormHelperText>Disabled</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl} error>\r\n        <InputLabel htmlFor=\"name-native-error\">Name</InputLabel>\r\n        <NativeSelect\r\n          value={state.name}\r\n          onChange={handleChange}\r\n          name=\"name\"\r\n          inputProps={{\r\n            id: 'name-native-error',\r\n          }}>\r\n          <optgroup label=\"Author\">\r\n            <option value=\"hai\">Hai</option>\r\n          </optgroup>\r\n          <optgroup label=\"Contributors\">\r\n            <option value=\"olivier\">Olivier</option>\r\n            <option value=\"kevin\">Kevin</option>\r\n          </optgroup>\r\n        </NativeSelect>\r\n        <FormHelperText>Error</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"uncontrolled-native\">Name</InputLabel>\r\n        <NativeSelect\r\n          defaultValue={30}\r\n          inputProps={{\r\n            name: 'name',\r\n            id: 'uncontrolled-native',\r\n          }}>\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n        <FormHelperText>Uncontrolled</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <NativeSelect\r\n          className={classes.selectEmpty}\r\n          value={state.age}\r\n          name=\"age\"\r\n          onChange={handleChange}\r\n          inputProps={{ 'aria-label': 'age' }}>\r\n          <option value=\"\" disabled>\r\n            Placeholder\r\n          </option>\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n        <FormHelperText>Placeholder</FormHelperText>\r\n      </FormControl>\r\n      <FormControl required className={classes.formControl}>\r\n        <InputLabel htmlFor=\"age-native-required\">Age</InputLabel>\r\n        <Select\r\n          native\r\n          value={state.age}\r\n          onChange={handleChange}\r\n          name=\"age\"\r\n          inputProps={{\r\n            id: 'age-native-required',\r\n          }}>\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </Select>\r\n        <FormHelperText>Required</FormHelperText>\r\n      </FormControl>\r\n      <FormControl variant=\"outlined\" className={classes.formControl}>\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Age</InputLabel>\r\n        <Select\r\n          native\r\n          value={state.age}\r\n          onChange={handleChange}\r\n          label=\"Age\"\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'outlined-age-native-simple',\r\n          }}>\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl variant=\"filled\" className={classes.formControl}>\r\n        <InputLabel htmlFor=\"filled-age-native-simple\">Age</InputLabel>\r\n        <Select\r\n          native\r\n          value={state.age}\r\n          onChange={handleChange}\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'filled-age-native-simple',\r\n          }}>\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </Select>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst BootstrapInput = withStyles(theme => ({\r\n  root: {\r\n    'label + &': {\r\n      marginTop: theme.spacing(6),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '1px solid #ced4da',\r\n    fontSize: 16,\r\n    padding: '10px 26px 10px 12px',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:focus': {\r\n      borderRadius: 4,\r\n      borderColor: '#80bdff',\r\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSelects() {\r\n  const classes = useStyles();\r\n  const [age, setAge] = React.useState('');\r\n  const handleChange = event => {\r\n    setAge(event.target.value);\r\n  };\r\n  return (\r\n    <Box>\r\n      <FormControl className={classes.margin}>\r\n        <InputLabel htmlFor=\"demo-customized-textbox\">Age</InputLabel>\r\n        <BootstrapInput id=\"demo-customized-textbox\" />\r\n      </FormControl>\r\n      <FormControl className={classes.margin}>\r\n        <InputLabel id=\"demo-customized-select-label\">Age</InputLabel>\r\n        <Select\r\n          labelId=\"demo-customized-select-label\"\r\n          id=\"demo-customized-select\"\r\n          value={age}\r\n          onChange={handleChange}\r\n          input={<BootstrapInput />}>\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.margin}>\r\n        <InputLabel htmlFor=\"demo-customized-select-native\">Age</InputLabel>\r\n        <NativeSelect id=\"demo-customized-select-native\" value={age} onChange={handleChange} input={<BootstrapInput />}>\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    margin: theme.spacing(2),\r\n    minWidth: 120,\r\n    maxWidth: 300,\r\n  },\r\n  chips: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  noLabel: {\r\n    marginTop: theme.spacing(6),\r\n  },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst names = [\r\n  'Oliver Hansen',\r\n  'Van Henry',\r\n  'April Tucker',\r\n  'Ralph Hubbard',\r\n  'Omar Alexander',\r\n  'Carlos Abbott',\r\n  'Miriam Wagner',\r\n  'Bradley Wilkerson',\r\n  'Virginia Andrews',\r\n  'Kelly Snyder',\r\n];\r\n\r\nfunction getStyles(name, personName, theme) {\r\n  return {\r\n    fontWeight: personName.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nexport default function MultipleSelect() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [personName, setPersonName] = React.useState([]);\r\n\r\n  const handleChange = event => {\r\n    setPersonName(event.target.value);\r\n  };\r\n\r\n  const handleChangeMultiple = event => {\r\n    const { options } = event.target;\r\n    const value = [];\r\n    for (let i = 0, l = options.length; i < l; i += 1) {\r\n      if (options[i].selected) {\r\n        value.push(options[i].value);\r\n      }\r\n    }\r\n    setPersonName(value);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-multiple-name-label\">Name</InputLabel>\r\n        <Select\r\n          labelId=\"demo-multiple-name-label\"\r\n          id=\"demo-multiple-name\"\r\n          multiple\r\n          value={personName}\r\n          onChange={handleChange}\r\n          input={<Input />}\r\n          MenuProps={MenuProps}>\r\n          {names.map(name => (\r\n            <MenuItem key={name} value={name} style={getStyles(name, personName, theme)}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-multiple-checkbox-label\">Tag</InputLabel>\r\n        <Select\r\n          labelId=\"demo-multiple-checkbox-label\"\r\n          id=\"demo-multiple-checkbox\"\r\n          multiple\r\n          value={personName}\r\n          onChange={handleChange}\r\n          input={<Input />}\r\n          renderValue={selected => selected.join(', ')}\r\n          MenuProps={MenuProps}>\r\n          {names.map(name => (\r\n            <MenuItem key={name} value={name}>\r\n              <Checkbox checked={personName.indexOf(name) > -1} />\r\n              <ListItemText primary={name} />\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-multiple-chip-label\">Chip</InputLabel>\r\n        <Select\r\n          labelId=\"demo-multiple-chip-label\"\r\n          id=\"demo-multiple-chip\"\r\n          multiple\r\n          value={personName}\r\n          onChange={handleChange}\r\n          input={<Input id=\"select-multiple-chip\" />}\r\n          renderValue={selected => (\r\n            <div className={classes.chips}>\r\n              {selected.map(value => (\r\n                <Chip key={value} label={value} className={classes.chip} />\r\n              ))}\r\n            </div>\r\n          )}\r\n          MenuProps={MenuProps}>\r\n          {names.map(name => (\r\n            <MenuItem key={name} value={name} style={getStyles(name, personName, theme)}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={clsx(classes.formControl, classes.noLabel)}>\r\n        <Select\r\n          multiple\r\n          displayEmpty\r\n          value={personName}\r\n          onChange={handleChange}\r\n          input={<Input />}\r\n          renderValue={selected => {\r\n            if (selected.length === 0) {\r\n              return <em>Placeholder</em>;\r\n            }\r\n\r\n            return selected.join(', ');\r\n          }}\r\n          MenuProps={MenuProps}\r\n          inputProps={{ 'aria-label': 'Without label' }}>\r\n          <MenuItem disabled value=\"\">\r\n            <em>Placeholder</em>\r\n          </MenuItem>\r\n          {names.map(name => (\r\n            <MenuItem key={name} value={name} style={getStyles(name, personName, theme)}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel shrink htmlFor=\"select-multiple-native\">\r\n          Native\r\n        </InputLabel>\r\n        <Select\r\n          multiple\r\n          native\r\n          value={personName}\r\n          onChange={handleChangeMultiple}\r\n          inputProps={{\r\n            id: 'select-multiple-native',\r\n          }}>\r\n          {names.map(name => (\r\n            <option key={name} value={name}>\r\n              {name}\r\n            </option>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    display: 'block',\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(2),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n\r\nexport default function ControlledOpenSelect() {\r\n  const classes = useStyles();\r\n  const [age, setAge] = React.useState('');\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleChange = event => {\r\n    setAge(event.target.value);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Button className={classes.button} onClick={handleOpen}>\r\n        Open the select\r\n      </Button>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-controlled-open-select-label\">Age</InputLabel>\r\n        <Select\r\n          labelId=\"demo-controlled-open-select-label\"\r\n          id=\"demo-controlled-open-select\"\r\n          open={open}\r\n          onClose={handleClose}\r\n          onOpen={handleOpen}\r\n          value={age}\r\n          onChange={handleChange}>\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(2),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n\r\nexport default function DialogSelect() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [age, setAge] = React.useState('');\r\n\r\n  const handleChange = event => {\r\n    setAge(Number(event.target.value) || '');\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Button onClick={handleClickOpen}>Open select dialog</Button>\r\n      <Dialog disableBackdropClick disableEscapeKeyDown open={open} onClose={handleClose}>\r\n        <DialogTitle>Fill the form</DialogTitle>\r\n        <DialogContent>\r\n          <form className={classes.container}>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"demo-dialog-native\">Age</InputLabel>\r\n              <Select native value={age} onChange={handleChange} input={<Input id=\"demo-dialog-native\" />}>\r\n                <option aria-label=\"None\" value=\"\" />\r\n                <option value={10}>Ten</option>\r\n                <option value={20}>Twenty</option>\r\n                <option value={30}>Thirty</option>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-dialog-select-label\">Age</InputLabel>\r\n              <Select\r\n                labelId=\"demo-dialog-select-label\"\r\n                id=\"demo-dialog-select\"\r\n                value={age}\r\n                onChange={handleChange}\r\n                input={<Input />}>\r\n                <MenuItem value=\"\">\r\n                  <em>None</em>\r\n                </MenuItem>\r\n                <MenuItem value={10}>Ten</MenuItem>\r\n                <MenuItem value={20}>Twenty</MenuItem>\r\n                <MenuItem value={30}>Thirty</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    margin: theme.spacing(2),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n\r\nexport default function GroupedSelect() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"grouped-native-select\">Grouping</InputLabel>\r\n        <Select native defaultValue=\"\" id=\"grouped-native-select\">\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <optgroup label=\"Category 1\">\r\n            <option value={1}>Option 1</option>\r\n            <option value={2}>Option 2</option>\r\n          </optgroup>\r\n          <optgroup label=\"Category 2\">\r\n            <option value={3}>Option 3</option>\r\n            <option value={4}>Option 4</option>\r\n          </optgroup>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"grouped-select\">Grouping</InputLabel>\r\n        <Select defaultValue=\"\" id=\"grouped-select\">\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <ListSubheader>Category 1</ListSubheader>\r\n          <MenuItem value={1}>Option 1</MenuItem>\r\n          <MenuItem value={2}>Option 2</MenuItem>\r\n          <ListSubheader>Category 2</ListSubheader>\r\n          <MenuItem value={3}>Option 3</MenuItem>\r\n          <MenuItem value={4}>Option 4</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { MuiComponentDemo } from '../../../../@jumbo/components/PageComponents';\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport SimpleSelect from './demos/SimpleSelect';\r\nimport NativeSelects from './demos/NativeSelects';\r\nimport CustomizedSelects from './demos/CustomizedSelects';\r\nimport MultipleSelect from './demos/MultipleSelect';\r\nimport ControlledOpenSelect from './demos/ControlledOpenSelect';\r\nimport DialogSelect from './demos/DialogSelect';\r\nimport GroupedSelect from './demos/GroupedSelect';\r\nimport CodeViewerCard from '../../../../@jumbo/components/Common/CodeViewerCard';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  section: {\r\n    '&:not(:last-child)': {\r\n      marginBottom: theme.typography.pxToRem(32),\r\n    },\r\n  },\r\n  sectionHeading: {\r\n    marginBottom: theme.typography.pxToRem(16),\r\n  },\r\n}));\r\n\r\nconst requireRaw = require.context('!raw-loader!../../../../@fake-db/mui-components/selects', false, /\\.(txt|js|md|tsx)$/);\r\n\r\nconst demos = [\r\n  {\r\n    label: 'Simple Select',\r\n    link: 'simple-select',\r\n    component: <SimpleSelect />,\r\n    filename: './SimpleSelect.txt',\r\n  },\r\n  {\r\n    label: 'Native Select',\r\n    link: 'native-select',\r\n    component: <NativeSelects />,\r\n    filename: './NativeSelects.txt',\r\n  },\r\n  {\r\n    label: 'Customized selects',\r\n    link: 'customized-selects',\r\n    component: <CustomizedSelects />,\r\n    filename: './CustomizedSelects.txt',\r\n  },\r\n  {\r\n    label: 'Multiple Select',\r\n    link: 'multiple-select',\r\n    component: <MultipleSelect />,\r\n    filename: './MultipleSelect.txt',\r\n  },\r\n  {\r\n    label: 'Controlled Open Select',\r\n    link: 'controlled-open-select',\r\n    component: <ControlledOpenSelect />,\r\n    filename: './ControlledOpenSelect.txt',\r\n  },\r\n  {\r\n    label: 'With a Dialog',\r\n    link: 'with-a-dialog',\r\n    component: <DialogSelect />,\r\n    filename: './DialogSelect.txt',\r\n  },\r\n  {\r\n    label: 'Grouping',\r\n    link: 'grouping',\r\n    component: <GroupedSelect />,\r\n    filename: './GroupedSelect.txt',\r\n  },\r\n];\r\nexport default function Selects() {\r\n  const classes = useStyles();\r\n  return (\r\n    <MuiComponentDemo pageTitle=\"Select\" menus={demos}>\r\n      {demos.map((menu, index) => (\r\n        <Box key={index} id={menu.link} className={classes.section}>\r\n          <Typography component=\"h3\" variant=\"inherit\" className={classes.sectionHeading}>\r\n            {menu.label}\r\n          </Typography>\r\n          <CodeViewerCard code={requireRaw(menu.filename).default} language=\"jsx\">\r\n            {menu.component}\r\n          </CodeViewerCard>\r\n        </Box>\r\n      ))}\r\n    </MuiComponentDemo>\r\n  );\r\n}\r\n"],"sourceRoot":""}