{"version":3,"sources":["@jumbo/components/PageComponents/layouts/PageContainer.js","@jumbo/components/PageComponents/PageHeader.js","@jumbo/components/PageComponents/PageBreadcrumbs/index.js","@jumbo/components/PageComponents/layouts/CorematComponentDemo.js","@jumbo/components/PageComponents/layouts/MuiComponentDemo.js","@jumbo/components/PageComponents/layouts/ComponentsDemo.js","webpack:///./src/@fake-db/mui-components/dialog sync nonrecursive ./node_modules/raw-loader/dist/cjs.js \\.(txt|js|md|tsx)$?0785","@fake-db/mui-components/dialog/AlertDialog.txt","@fake-db/mui-components/dialog/AlertDialogSlide.txt","@fake-db/mui-components/dialog/ConfirmationDialog.txt","@fake-db/mui-components/dialog/CustomizedDialogs.txt","@fake-db/mui-components/dialog/DraggableDialog.txt","@fake-db/mui-components/dialog/FormDialog.txt","@fake-db/mui-components/dialog/FullScreenDialog.txt","@fake-db/mui-components/dialog/MaxWidthDialog.txt","@fake-db/mui-components/dialog/ResponsiveDialog.txt","@fake-db/mui-components/dialog/ScrollDialog.txt","@fake-db/mui-components/dialog/SimpleDialog.txt","routes/Components/MuiComponents/Dialog/demo/SimpleDialog.js","routes/Components/MuiComponents/Dialog/demo/AlertDialog.js","routes/Components/MuiComponents/Dialog/demo/AlertDialogSlide.js","routes/Components/MuiComponents/Dialog/demo/FormDialog.js","routes/Components/MuiComponents/Dialog/demo/CustomizedDialogs.js","routes/Components/MuiComponents/Dialog/demo/FullScreenDialog.js","routes/Components/MuiComponents/Dialog/demo/MaxWidthDialog.js","routes/Components/MuiComponents/Dialog/demo/ResponsiveDialog.js","routes/Components/MuiComponents/Dialog/demo/ConfirmationDialog.js","routes/Components/MuiComponents/Dialog/demo/DraggableDialog.js","routes/Components/MuiComponents/Dialog/demo/ScrollDialog.js","routes/Components/MuiComponents/Dialog/index.js"],"names":["useStyles","makeStyles","pageFull","width","PageContainer","heading","breadcrumbs","children","className","restProps","classes","in","direction","mountOnEnter","unmountOnExit","clsx","breadcrumbComponent","items","theme","pageHeaderRoot","display","flexDirection","breakpoints","up","alignItems","titleRoot","down","marginBottom","PageHeader","rest","Box","mb","xs","md","lg","Typography","component","variant","ml","sm","textSm","fontSize","linkBlock","color","PageBreadcrumbs","Breadcrumbs","aria-label","map","item","index","isActive","key","label","to","link","CorematComponentDemo","SourceCodeComponent","SettingsComponent","GridContainer","Grid","CmtCard","MuiComponentDemo","pageTitle","menus","ComponentsDemo","root","flexWrap","contentArea","paddingRight","typography","pxToRem","contentSidebar","height","position","top","overflowY","flexShrink","xsDown","menu","dense","button","href","primary","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","emails","avatar","backgroundColor","blue","SimpleDialog","props","onClose","selectedValue","open","handleListItemClick","value","Dialog","aria-labelledby","DialogTitle","List","email","ListItem","onClick","ListItemAvatar","Avatar","ListItemText","autoFocus","SimpleDialogDemo","React","useState","setOpen","setSelectedValue","Button","AlertDialog","handleClose","aria-describedby","DialogContent","DialogContentText","DialogActions","Transition","forwardRef","ref","Slide","AlertDialogSlide","TransitionComponent","keepMounted","FormDialog","TextField","margin","type","fullWidth","withStyles","padding","spacing","closeButton","right","palette","grey","other","disableTypography","IconButton","MuiDialogContent","MuiDialogActions","CustomizedDialogs","dividers","gutterBottom","appBar","title","marginLeft","flex","FullScreenDialog","fullScreen","AppBar","Toolbar","edge","secondary","Divider","form","formControl","marginTop","minWidth","formControlLabel","MaxWidthDialog","setFullWidth","maxWidth","setMaxWidth","Fragment","noValidate","FormControl","InputLabel","htmlFor","Select","onChange","event","target","inputProps","name","MenuItem","FormControlLabel","control","Switch","checked","ResponsiveDialog","useTheme","useMediaQuery","options","ConfirmationDialogRaw","valueProp","setValue","radioGroupRef","useRef","useEffect","disableBackdropClick","disableEscapeKeyDown","onEntering","current","focus","RadioGroup","option","Radio","background","paper","maxHeight","ConfirmationDialog","role","divider","disabled","aria-haspopup","aria-controls","newValue","PaperComponent","handle","cancel","Paper","DraggableDialog","style","cursor","ScrollDialog","scroll","setScroll","handleClickOpen","scrollType","descriptionElementRef","descriptionElement","tabIndex","Array","join","section","sectionHeading","requireRaw","require","demos","filename","CodeViewerCard","default","language"],"mappings":"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","file":"static/js/85.a2bf4832.chunk.js","sourcesContent":["import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { PageBreadcrumbs, PageHeader } from '../index';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  pageFull: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst PageContainer = ({ heading, breadcrumbs, children, className, restProps }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Slide in={true} direction=\"up\" mountOnEnter unmountOnExit>\r\n      <Box className={clsx(classes.pageFull, className)} {...restProps}>\r\n        {(heading || breadcrumbs) && (\r\n          <PageHeader heading={heading} breadcrumbComponent={breadcrumbs && <PageBreadcrumbs items={breadcrumbs} />} />\r\n        )}\r\n        {children}\r\n      </Box>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default PageContainer;\r\n","import React from 'react';\r\nimport { Box, makeStyles, Typography } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageHeaderRoot: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.up('sm')]: {\r\n      alignItems: 'center',\r\n      flexDirection: 'row',\r\n    },\r\n  },\r\n  titleRoot: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginBottom: 10,\r\n    },\r\n  },\r\n}));\r\n\r\nconst PageHeader = ({ heading, breadcrumbComponent, children, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={clsx(classes.pageHeaderRoot, 'page-header')} mb={{ xs: 5, md: 6, lg: 8 }} {...rest}>\r\n      <Typography component=\"div\" variant=\"h1\" className={clsx(classes.titleRoot, 'title')}>\r\n        {heading}\r\n      </Typography>\r\n      <Box ml={{ sm: 'auto' }}>{breadcrumbComponent}</Box>\r\n\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import React from 'react';\r\nimport { Breadcrumbs, makeStyles } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { NavLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  textSm: {\r\n    fontSize: 12,\r\n  },\r\n  linkBlock: {\r\n    display: 'block',\r\n    color: 'inherit',\r\n  },\r\n}));\r\n\r\nconst PageBreadcrumbs = ({ items, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Breadcrumbs className=\"bread-crumbs\" aria-label=\"breadcrumb {...rest}\">\r\n      {items.map((item, index) =>\r\n        item.isActive ? (\r\n          <Typography key={index} className={classes.textSm} color=\"textPrimary\">\r\n            {item.label}\r\n          </Typography>\r\n        ) : (\r\n          <NavLink key={index} className={clsx(classes.textSm, classes.linkBlock)} color=\"inherit\" to={item.link || '/'}>\r\n            {item.label}\r\n          </NavLink>\r\n        ),\r\n      )}\r\n    </Breadcrumbs>\r\n  );\r\n};\r\n\r\nexport default PageBreadcrumbs;\r\n","import React from 'react';\r\nimport { Box, Grid } from '@material-ui/core';\r\nimport CmtCard from '../../../../@coremat/CmtCard';\r\nimport { PageHeader } from '../index';\r\nimport GridContainer from '../../GridContainer';\r\nimport PageContainer from './PageContainer';\r\n\r\nconst CorematComponentDemo = ({ SourceCodeComponent, SettingsComponent, children }) => {\r\n  return (\r\n    <PageContainer>\r\n      <GridContainer>\r\n        <Grid item xs={12} md={7}>\r\n          <PageHeader heading=\"Preview\" />\r\n          <Box mb={8}>{children}</Box>\r\n          <CmtCard>{SourceCodeComponent}</CmtCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={5}>\r\n          {SettingsComponent}\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default CorematComponentDemo;\r\n","import React from 'react';\r\nimport ComponentsDemo from './ComponentsDemo';\r\n\r\nconst MuiComponentDemo = ({ pageTitle, menus, children }) => {\r\n  const breadcrumbs = [\r\n    { label: 'Home', link: '/' },\r\n    { label: 'Material UI Components', link: '/components/mui' },\r\n    { label: pageTitle, isActive: true },\r\n  ];\r\n  return (\r\n    <ComponentsDemo pageTitle={pageTitle} breadcrumbs={breadcrumbs} menus={menus}>\r\n      {children}\r\n    </ComponentsDemo>\r\n  );\r\n};\r\nexport default MuiComponentDemo;\r\n","import React from 'react';\r\nimport { Box, Hidden, List, ListItem, ListItemText, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PageContainer from './PageContainer';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  contentArea: {\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingRight: theme.typography.pxToRem(30),\r\n      width: `calc(100% - ${theme.typography.pxToRem(175)})`,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingRight: theme.typography.pxToRem(54),\r\n    },\r\n  },\r\n  contentSidebar: {\r\n    width: theme.typography.pxToRem(175),\r\n    height: `calc(100vh - ${theme.typography.pxToRem(102)})`,\r\n    position: 'sticky',\r\n    top: 30,\r\n    overflowY: 'auto',\r\n    flexShrink: 0,\r\n  },\r\n}));\r\n\r\nconst ComponentsDemo = ({ pageTitle, menus, breadcrumbs, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <PageContainer heading={pageTitle} breadcrumbs={breadcrumbs}>\r\n      <Box className={classes.root}>\r\n        <Box className={classes.contentArea}>{children}</Box>\r\n        <Hidden xsDown>\r\n          <Box className={classes.contentSidebar}>\r\n            <Typography component=\"h4\" variant=\"h4\">\r\n              Contents\r\n            </Typography>\r\n            <List>\r\n              {menus.map((menu, index) => (\r\n                <ListItem key={index} dense button component=\"a\" href={`#${menu.link}`}>\r\n                  <ListItemText primary={menu.label} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Box>\r\n        </Hidden>\r\n      </Box>\r\n    </PageContainer>\r\n  );\r\n};\r\nexport default ComponentsDemo;\r\n","var map = {\n\t\"./AlertDialog.txt\": 2701,\n\t\"./AlertDialogSlide.txt\": 2702,\n\t\"./ConfirmationDialog.txt\": 2703,\n\t\"./CustomizedDialogs.txt\": 2704,\n\t\"./DraggableDialog.txt\": 2705,\n\t\"./FormDialog.txt\": 2706,\n\t\"./FullScreenDialog.txt\": 2707,\n\t\"./MaxWidthDialog.txt\": 2708,\n\t\"./ResponsiveDialog.txt\": 2709,\n\t\"./ScrollDialog.txt\": 2710,\n\t\"./SimpleDialog.txt\": 2711\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2700;","export default \"import React from 'react';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport Dialog from '@material-ui/core/Dialog';\\r\\nimport DialogActions from '@material-ui/core/DialogActions';\\r\\nimport DialogContent from '@material-ui/core/DialogContent';\\r\\nimport DialogContentText from '@material-ui/core/DialogContentText';\\r\\nimport DialogTitle from '@material-ui/core/DialogTitle';\\r\\nimport { Box } from '@material-ui/core';\\r\\n\\r\\nexport default function AlertDialog() {\\r\\n  const [open, setOpen] = React.useState(false);\\r\\n\\r\\n  const handleClickOpen = () => {\\r\\n    setOpen(true);\\r\\n  };\\r\\n\\r\\n  const handleClose = () => {\\r\\n    setOpen(false);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box>\\r\\n      <Button variant=\\\"outlined\\\" color=\\\"primary\\\" onClick={handleClickOpen}>\\r\\n        Open alert dialog\\r\\n      </Button>\\r\\n      <Dialog\\r\\n        open={open}\\r\\n        onClose={handleClose}\\r\\n        aria-labelledby=\\\"alert-dialog-title\\\"\\r\\n        aria-describedby=\\\"alert-dialog-description\\\">\\r\\n        <DialogTitle id=\\\"alert-dialog-title\\\">{\\\"Use Google's location service?\\\"}</DialogTitle>\\r\\n        <DialogContent>\\r\\n          <DialogContentText id=\\\"alert-dialog-description\\\">\\r\\n            Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps\\r\\n            are running.\\r\\n          </DialogContentText>\\r\\n        </DialogContent>\\r\\n        <DialogActions>\\r\\n          <Button onClick={handleClose} color=\\\"primary\\\">\\r\\n            Disagree\\r\\n          </Button>\\r\\n          <Button onClick={handleClose} color=\\\"primary\\\" autoFocus>\\r\\n            Agree\\r\\n          </Button>\\r\\n        </DialogActions>\\r\\n      </Dialog>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport Dialog from '@material-ui/core/Dialog';\\r\\nimport DialogActions from '@material-ui/core/DialogActions';\\r\\nimport DialogContent from '@material-ui/core/DialogContent';\\r\\nimport DialogContentText from '@material-ui/core/DialogContentText';\\r\\nimport DialogTitle from '@material-ui/core/DialogTitle';\\r\\nimport Slide from '@material-ui/core/Slide';\\r\\nimport { Box } from '@material-ui/core';\\r\\n\\r\\nconst Transition = React.forwardRef(function Transition(props, ref) {\\r\\n  return <Slide direction=\\\"up\\\" ref={ref} {...props} />;\\r\\n});\\r\\n\\r\\nexport default function AlertDialogSlide() {\\r\\n  const [open, setOpen] = React.useState(false);\\r\\n\\r\\n  const handleClickOpen = () => {\\r\\n    setOpen(true);\\r\\n  };\\r\\n\\r\\n  const handleClose = () => {\\r\\n    setOpen(false);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box>\\r\\n      <Button variant=\\\"outlined\\\" color=\\\"primary\\\" onClick={handleClickOpen}>\\r\\n        Slide in alert dialog\\r\\n      </Button>\\r\\n      <Dialog\\r\\n        open={open}\\r\\n        TransitionComponent={Transition}\\r\\n        keepMounted\\r\\n        onClose={handleClose}\\r\\n        aria-labelledby=\\\"alert-dialog-slide-title\\\"\\r\\n        aria-describedby=\\\"alert-dialog-slide-description\\\">\\r\\n        <DialogTitle id=\\\"alert-dialog-slide-title\\\">{\\\"Use Google's location service?\\\"}</DialogTitle>\\r\\n        <DialogContent>\\r\\n          <DialogContentText id=\\\"alert-dialog-slide-description\\\">\\r\\n            Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps\\r\\n            are running.\\r\\n          </DialogContentText>\\r\\n        </DialogContent>\\r\\n        <DialogActions>\\r\\n          <Button onClick={handleClose} color=\\\"primary\\\">\\r\\n            Disagree\\r\\n          </Button>\\r\\n          <Button onClick={handleClose} color=\\\"primary\\\">\\r\\n            Agree\\r\\n          </Button>\\r\\n        </DialogActions>\\r\\n      </Dialog>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport PropTypes from 'prop-types';\\r\\nimport { makeStyles } from '@material-ui/core/styles';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport List from '@material-ui/core/List';\\r\\nimport ListItem from '@material-ui/core/ListItem';\\r\\nimport ListItemText from '@material-ui/core/ListItemText';\\r\\nimport DialogTitle from '@material-ui/core/DialogTitle';\\r\\nimport DialogContent from '@material-ui/core/DialogContent';\\r\\nimport DialogActions from '@material-ui/core/DialogActions';\\r\\nimport Dialog from '@material-ui/core/Dialog';\\r\\nimport RadioGroup from '@material-ui/core/RadioGroup';\\r\\nimport Radio from '@material-ui/core/Radio';\\r\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\r\\nimport { Box } from '@material-ui/core';\\r\\n\\r\\nconst options = [\\r\\n  'None',\\r\\n  'Atria',\\r\\n  'Callisto',\\r\\n  'Dione',\\r\\n  'Ganymede',\\r\\n  'Hangouts Call',\\r\\n  'Luna',\\r\\n  'Oberon',\\r\\n  'Phobos',\\r\\n  'Pyxis',\\r\\n  'Sedna',\\r\\n  'Titania',\\r\\n  'Triton',\\r\\n  'Umbriel',\\r\\n];\\r\\n\\r\\nfunction ConfirmationDialogRaw(props) {\\r\\n  const { onClose, value: valueProp, open, ...other } = props;\\r\\n  const [value, setValue] = React.useState(valueProp);\\r\\n  const radioGroupRef = React.useRef(null);\\r\\n\\r\\n  React.useEffect(() => {\\r\\n    if (!open) {\\r\\n      setValue(valueProp);\\r\\n    }\\r\\n  }, [valueProp, open]);\\r\\n\\r\\n  const handleEntering = () => {\\r\\n    if (radioGroupRef.current != null) {\\r\\n      radioGroupRef.current.focus();\\r\\n    }\\r\\n  };\\r\\n\\r\\n  const handleCancel = () => {\\r\\n    onClose();\\r\\n  };\\r\\n\\r\\n  const handleOk = () => {\\r\\n    onClose(value);\\r\\n  };\\r\\n\\r\\n  const handleChange = event => {\\r\\n    setValue(event.target.value);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Dialog\\r\\n      disableBackdropClick\\r\\n      disableEscapeKeyDown\\r\\n      maxWidth=\\\"xs\\\"\\r\\n      onEntering={handleEntering}\\r\\n      aria-labelledby=\\\"confirmation-dialog-title\\\"\\r\\n      open={open}\\r\\n      {...other}>\\r\\n      <DialogTitle id=\\\"confirmation-dialog-title\\\">Phone Ringtone</DialogTitle>\\r\\n      <DialogContent dividers>\\r\\n        <RadioGroup ref={radioGroupRef} aria-label=\\\"ringtone\\\" name=\\\"ringtone\\\" value={value} onChange={handleChange}>\\r\\n          {options.map(option => (\\r\\n            <FormControlLabel value={option} key={option} control={<Radio />} label={option} />\\r\\n          ))}\\r\\n        </RadioGroup>\\r\\n      </DialogContent>\\r\\n      <DialogActions>\\r\\n        <Button autoFocus onClick={handleCancel} color=\\\"primary\\\">\\r\\n          Cancel\\r\\n        </Button>\\r\\n        <Button onClick={handleOk} color=\\\"primary\\\">\\r\\n          Ok\\r\\n        </Button>\\r\\n      </DialogActions>\\r\\n    </Dialog>\\r\\n  );\\r\\n}\\r\\n\\r\\nConfirmationDialogRaw.propTypes = {\\r\\n  onClose: PropTypes.func.isRequired,\\r\\n  open: PropTypes.bool.isRequired,\\r\\n  value: PropTypes.string.isRequired,\\r\\n};\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  root: {\\r\\n    width: '100%',\\r\\n    maxWidth: 360,\\r\\n    backgroundColor: theme.palette.background.paper,\\r\\n  },\\r\\n  paper: {\\r\\n    width: '80%',\\r\\n    maxHeight: 435,\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function ConfirmationDialog() {\\r\\n  const classes = useStyles();\\r\\n  const [open, setOpen] = React.useState(false);\\r\\n  const [value, setValue] = React.useState('Dione');\\r\\n\\r\\n  const handleClickListItem = () => {\\r\\n    setOpen(true);\\r\\n  };\\r\\n\\r\\n  const handleClose = newValue => {\\r\\n    setOpen(false);\\r\\n\\r\\n    if (newValue) {\\r\\n      setValue(newValue);\\r\\n    }\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box className={classes.root}>\\r\\n      <List component=\\\"div\\\" role=\\\"list\\\">\\r\\n        <ListItem button divider disabled role=\\\"listitem\\\">\\r\\n          <ListItemText primary=\\\"Interruptions\\\" />\\r\\n        </ListItem>\\r\\n        <ListItem\\r\\n          button\\r\\n          divider\\r\\n          aria-haspopup=\\\"true\\\"\\r\\n          aria-controls=\\\"ringtone-menu\\\"\\r\\n          aria-label=\\\"phone ringtone\\\"\\r\\n          onClick={handleClickListItem}\\r\\n          role=\\\"listitem\\\">\\r\\n          <ListItemText primary=\\\"Phone ringtone\\\" secondary={value} />\\r\\n        </ListItem>\\r\\n        <ListItem button divider disabled role=\\\"listitem\\\">\\r\\n          <ListItemText primary=\\\"Default notification ringtone\\\" secondary=\\\"Tethys\\\" />\\r\\n        </ListItem>\\r\\n        <ConfirmationDialogRaw\\r\\n          classes={{\\r\\n            paper: classes.paper,\\r\\n          }}\\r\\n          id=\\\"ringtone-menu\\\"\\r\\n          keepMounted\\r\\n          open={open}\\r\\n          onClose={handleClose}\\r\\n          value={value}\\r\\n        />\\r\\n      </List>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport { withStyles } from '@material-ui/core/styles';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport Dialog from '@material-ui/core/Dialog';\\r\\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\\r\\nimport MuiDialogContent from '@material-ui/core/DialogContent';\\r\\nimport MuiDialogActions from '@material-ui/core/DialogActions';\\r\\nimport IconButton from '@material-ui/core/IconButton';\\r\\nimport CloseIcon from '@material-ui/icons/Close';\\r\\nimport Typography from '@material-ui/core/Typography';\\r\\nimport { Box } from '@material-ui/core';\\r\\n\\r\\nconst styles = theme => ({\\r\\n  root: {\\r\\n    margin: 0,\\r\\n    padding: theme.spacing(4),\\r\\n  },\\r\\n  closeButton: {\\r\\n    position: 'absolute',\\r\\n    right: theme.spacing(2),\\r\\n    top: theme.spacing(2),\\r\\n    color: theme.palette.grey[500],\\r\\n  },\\r\\n});\\r\\n\\r\\nconst DialogTitle = withStyles(styles)(props => {\\r\\n  const { children, classes, onClose, ...other } = props;\\r\\n  return (\\r\\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\\r\\n      <Typography variant=\\\"h6\\\">{children}</Typography>\\r\\n      {onClose ? (\\r\\n        <IconButton aria-label=\\\"close\\\" className={classes.closeButton} onClick={onClose}>\\r\\n          <CloseIcon />\\r\\n        </IconButton>\\r\\n      ) : null}\\r\\n    </MuiDialogTitle>\\r\\n  );\\r\\n});\\r\\n\\r\\nconst DialogContent = withStyles(theme => ({\\r\\n  root: {\\r\\n    padding: theme.spacing(4),\\r\\n  },\\r\\n}))(MuiDialogContent);\\r\\n\\r\\nconst DialogActions = withStyles(theme => ({\\r\\n  root: {\\r\\n    margin: 0,\\r\\n    padding: theme.spacing(2),\\r\\n  },\\r\\n}))(MuiDialogActions);\\r\\n\\r\\nexport default function CustomizedDialogs() {\\r\\n  const [open, setOpen] = React.useState(false);\\r\\n\\r\\n  const handleClickOpen = () => {\\r\\n    setOpen(true);\\r\\n  };\\r\\n  const handleClose = () => {\\r\\n    setOpen(false);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box>\\r\\n      <Button variant=\\\"outlined\\\" color=\\\"primary\\\" onClick={handleClickOpen}>\\r\\n        Open dialog\\r\\n      </Button>\\r\\n      <Dialog onClose={handleClose} aria-labelledby=\\\"customized-dialog-title\\\" open={open}>\\r\\n        <DialogTitle id=\\\"customized-dialog-title\\\" onClose={handleClose}>\\r\\n          Modal title\\r\\n        </DialogTitle>\\r\\n        <DialogContent dividers>\\r\\n          <Typography gutterBottom>\\r\\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam.\\r\\n            Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\\r\\n          </Typography>\\r\\n          <Typography gutterBottom>\\r\\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet\\r\\n            rutrum faucibus dolor auctor.\\r\\n          </Typography>\\r\\n          <Typography gutterBottom>\\r\\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur\\r\\n            et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.\\r\\n          </Typography>\\r\\n        </DialogContent>\\r\\n        <DialogActions>\\r\\n          <Button autoFocus onClick={handleClose} color=\\\"primary\\\">\\r\\n            Save changes\\r\\n          </Button>\\r\\n        </DialogActions>\\r\\n      </Dialog>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport Dialog from '@material-ui/core/Dialog';\\r\\nimport DialogActions from '@material-ui/core/DialogActions';\\r\\nimport DialogContent from '@material-ui/core/DialogContent';\\r\\nimport DialogContentText from '@material-ui/core/DialogContentText';\\r\\nimport DialogTitle from '@material-ui/core/DialogTitle';\\r\\nimport Paper from '@material-ui/core/Paper';\\r\\nimport Draggable from 'react-draggable';\\r\\nimport { Box } from '@material-ui/core';\\r\\n\\r\\nfunction PaperComponent(props) {\\r\\n  return (\\r\\n    <Draggable handle=\\\"#draggable-dialog-title\\\" cancel={'[class*=\\\"MuiDialogContent-root\\\"]'}>\\r\\n      <Paper {...props} />\\r\\n    </Draggable>\\r\\n  );\\r\\n}\\r\\n\\r\\nexport default function DraggableDialog() {\\r\\n  const [open, setOpen] = React.useState(false);\\r\\n\\r\\n  const handleClickOpen = () => {\\r\\n    setOpen(true);\\r\\n  };\\r\\n\\r\\n  const handleClose = () => {\\r\\n    setOpen(false);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box>\\r\\n      <Button variant=\\\"outlined\\\" color=\\\"primary\\\" onClick={handleClickOpen}>\\r\\n        Open form dialog\\r\\n      </Button>\\r\\n      <Dialog open={open} onClose={handleClose} PaperComponent={PaperComponent} aria-labelledby=\\\"draggable-dialog-title\\\">\\r\\n        <DialogTitle style={{ cursor: 'move' }} id=\\\"draggable-dialog-title\\\">\\r\\n          Subscribe\\r\\n        </DialogTitle>\\r\\n        <DialogContent>\\r\\n          <DialogContentText>\\r\\n            To subscribe to this website, please enter your email address here. We will send updates occasionally.\\r\\n          </DialogContentText>\\r\\n        </DialogContent>\\r\\n        <DialogActions>\\r\\n          <Button autoFocus onClick={handleClose} color=\\\"primary\\\">\\r\\n            Cancel\\r\\n          </Button>\\r\\n          <Button onClick={handleClose} color=\\\"primary\\\">\\r\\n            Subscribe\\r\\n          </Button>\\r\\n        </DialogActions>\\r\\n      </Dialog>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport TextField from '@material-ui/core/TextField';\\r\\nimport Dialog from '@material-ui/core/Dialog';\\r\\nimport DialogActions from '@material-ui/core/DialogActions';\\r\\nimport DialogContent from '@material-ui/core/DialogContent';\\r\\nimport DialogContentText from '@material-ui/core/DialogContentText';\\r\\nimport DialogTitle from '@material-ui/core/DialogTitle';\\r\\nimport { Box } from '@material-ui/core';\\r\\n\\r\\nexport default function FormDialog() {\\r\\n  const [open, setOpen] = React.useState(false);\\r\\n\\r\\n  const handleClickOpen = () => {\\r\\n    setOpen(true);\\r\\n  };\\r\\n\\r\\n  const handleClose = () => {\\r\\n    setOpen(false);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box>\\r\\n      <Button variant=\\\"outlined\\\" color=\\\"primary\\\" onClick={handleClickOpen}>\\r\\n        Open form dialog\\r\\n      </Button>\\r\\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\\\"form-dialog-title\\\">\\r\\n        <DialogTitle id=\\\"form-dialog-title\\\">Subscribe</DialogTitle>\\r\\n        <DialogContent>\\r\\n          <DialogContentText>\\r\\n            To subscribe to this website, please enter your email address here. We will send updates occasionally.\\r\\n          </DialogContentText>\\r\\n          <TextField autoFocus margin=\\\"dense\\\" id=\\\"name\\\" label=\\\"Email Address\\\" type=\\\"email\\\" fullWidth />\\r\\n        </DialogContent>\\r\\n        <DialogActions>\\r\\n          <Button onClick={handleClose} color=\\\"primary\\\">\\r\\n            Cancel\\r\\n          </Button>\\r\\n          <Button onClick={handleClose} color=\\\"primary\\\">\\r\\n            Subscribe\\r\\n          </Button>\\r\\n        </DialogActions>\\r\\n      </Dialog>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport { makeStyles } from '@material-ui/core/styles';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport Dialog from '@material-ui/core/Dialog';\\r\\nimport ListItemText from '@material-ui/core/ListItemText';\\r\\nimport ListItem from '@material-ui/core/ListItem';\\r\\nimport List from '@material-ui/core/List';\\r\\nimport Divider from '@material-ui/core/Divider';\\r\\nimport AppBar from '@material-ui/core/AppBar';\\r\\nimport Toolbar from '@material-ui/core/Toolbar';\\r\\nimport IconButton from '@material-ui/core/IconButton';\\r\\nimport Typography from '@material-ui/core/Typography';\\r\\nimport CloseIcon from '@material-ui/icons/Close';\\r\\nimport Slide from '@material-ui/core/Slide';\\r\\nimport { Box } from '@material-ui/core';\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  appBar: {\\r\\n    position: 'relative',\\r\\n  },\\r\\n  title: {\\r\\n    marginLeft: theme.spacing(4),\\r\\n    flex: 1,\\r\\n  },\\r\\n}));\\r\\n\\r\\nconst Transition = React.forwardRef(function Transition(props, ref) {\\r\\n  return <Slide direction=\\\"up\\\" ref={ref} {...props} />;\\r\\n});\\r\\n\\r\\nexport default function FullScreenDialog() {\\r\\n  const classes = useStyles();\\r\\n  const [open, setOpen] = React.useState(false);\\r\\n\\r\\n  const handleClickOpen = () => {\\r\\n    setOpen(true);\\r\\n  };\\r\\n\\r\\n  const handleClose = () => {\\r\\n    setOpen(false);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box>\\r\\n      <Button variant=\\\"outlined\\\" color=\\\"primary\\\" onClick={handleClickOpen}>\\r\\n        Open full-screen dialog\\r\\n      </Button>\\r\\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\\r\\n        <AppBar className={classes.appBar}>\\r\\n          <Toolbar>\\r\\n            <IconButton edge=\\\"start\\\" color=\\\"inherit\\\" onClick={handleClose} aria-label=\\\"close\\\">\\r\\n              <CloseIcon />\\r\\n            </IconButton>\\r\\n            <Typography variant=\\\"h6\\\" className={classes.title}>\\r\\n              Sound\\r\\n            </Typography>\\r\\n            <Button autoFocus color=\\\"inherit\\\" onClick={handleClose}>\\r\\n              save\\r\\n            </Button>\\r\\n          </Toolbar>\\r\\n        </AppBar>\\r\\n        <List>\\r\\n          <ListItem button>\\r\\n            <ListItemText primary=\\\"Phone ringtone\\\" secondary=\\\"Titania\\\" />\\r\\n          </ListItem>\\r\\n          <Divider />\\r\\n          <ListItem button>\\r\\n            <ListItemText primary=\\\"Default notification ringtone\\\" secondary=\\\"Tethys\\\" />\\r\\n          </ListItem>\\r\\n        </List>\\r\\n      </Dialog>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport { makeStyles } from '@material-ui/core/styles';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport Dialog from '@material-ui/core/Dialog';\\r\\nimport DialogActions from '@material-ui/core/DialogActions';\\r\\nimport DialogContent from '@material-ui/core/DialogContent';\\r\\nimport DialogContentText from '@material-ui/core/DialogContentText';\\r\\nimport DialogTitle from '@material-ui/core/DialogTitle';\\r\\nimport FormControl from '@material-ui/core/FormControl';\\r\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\r\\nimport InputLabel from '@material-ui/core/InputLabel';\\r\\nimport MenuItem from '@material-ui/core/MenuItem';\\r\\nimport Select from '@material-ui/core/Select';\\r\\nimport Switch from '@material-ui/core/Switch';\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  form: {\\r\\n    display: 'flex',\\r\\n    flexDirection: 'column',\\r\\n    margin: 'auto',\\r\\n    width: 'fit-content',\\r\\n  },\\r\\n  formControl: {\\r\\n    marginTop: theme.spacing(4),\\r\\n    minWidth: 120,\\r\\n  },\\r\\n  formControlLabel: {\\r\\n    marginTop: theme.spacing(2),\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function MaxWidthDialog() {\\r\\n  const classes = useStyles();\\r\\n  const [open, setOpen] = React.useState(false);\\r\\n  const [fullWidth, setFullWidth] = React.useState(true);\\r\\n  const [maxWidth, setMaxWidth] = React.useState('sm');\\r\\n\\r\\n  const handleClickOpen = () => {\\r\\n    setOpen(true);\\r\\n  };\\r\\n\\r\\n  const handleClose = () => {\\r\\n    setOpen(false);\\r\\n  };\\r\\n\\r\\n  const handleMaxWidthChange = event => {\\r\\n    setMaxWidth(event.target.value);\\r\\n  };\\r\\n\\r\\n  const handleFullWidthChange = event => {\\r\\n    setFullWidth(event.target.checked);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <React.Fragment>\\r\\n      <Button variant=\\\"outlined\\\" color=\\\"primary\\\" onClick={handleClickOpen}>\\r\\n        Open max-width dialog\\r\\n      </Button>\\r\\n      <Dialog\\r\\n        fullWidth={fullWidth}\\r\\n        maxWidth={maxWidth}\\r\\n        open={open}\\r\\n        onClose={handleClose}\\r\\n        aria-labelledby=\\\"max-width-dialog-title\\\">\\r\\n        <DialogTitle id=\\\"max-width-dialog-title\\\">Optional sizes</DialogTitle>\\r\\n        <DialogContent>\\r\\n          <DialogContentText>You can set my maximum width and whether to adapt or not.</DialogContentText>\\r\\n          <form className={classes.form} noValidate>\\r\\n            <FormControl className={classes.formControl}>\\r\\n              <InputLabel htmlFor=\\\"max-width\\\">maxWidth</InputLabel>\\r\\n              <Select\\r\\n                autoFocus\\r\\n                value={maxWidth}\\r\\n                onChange={handleMaxWidthChange}\\r\\n                inputProps={{\\r\\n                  name: 'max-width',\\r\\n                  id: 'max-width',\\r\\n                }}>\\r\\n                <MenuItem value={false}>false</MenuItem>\\r\\n                <MenuItem value=\\\"xs\\\">xs</MenuItem>\\r\\n                <MenuItem value=\\\"sm\\\">sm</MenuItem>\\r\\n                <MenuItem value=\\\"md\\\">md</MenuItem>\\r\\n                <MenuItem value=\\\"lg\\\">lg</MenuItem>\\r\\n                <MenuItem value=\\\"xl\\\">xl</MenuItem>\\r\\n              </Select>\\r\\n            </FormControl>\\r\\n            <FormControlLabel\\r\\n              className={classes.formControlLabel}\\r\\n              control={<Switch checked={fullWidth} onChange={handleFullWidthChange} />}\\r\\n              label=\\\"Full width\\\"\\r\\n            />\\r\\n          </form>\\r\\n        </DialogContent>\\r\\n        <DialogActions>\\r\\n          <Button onClick={handleClose} color=\\\"primary\\\">\\r\\n            Close\\r\\n          </Button>\\r\\n        </DialogActions>\\r\\n      </Dialog>\\r\\n    </React.Fragment>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport Dialog from '@material-ui/core/Dialog';\\r\\nimport DialogActions from '@material-ui/core/DialogActions';\\r\\nimport DialogContent from '@material-ui/core/DialogContent';\\r\\nimport DialogContentText from '@material-ui/core/DialogContentText';\\r\\nimport DialogTitle from '@material-ui/core/DialogTitle';\\r\\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\\r\\nimport { useTheme } from '@material-ui/core/styles';\\r\\nimport { Box } from '@material-ui/core';\\r\\n\\r\\nexport default function ResponsiveDialog() {\\r\\n  const [open, setOpen] = React.useState(false);\\r\\n  const theme = useTheme();\\r\\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\\r\\n\\r\\n  const handleClickOpen = () => {\\r\\n    setOpen(true);\\r\\n  };\\r\\n\\r\\n  const handleClose = () => {\\r\\n    setOpen(false);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box>\\r\\n      <Button variant=\\\"outlined\\\" color=\\\"primary\\\" onClick={handleClickOpen}>\\r\\n        Open responsive dialog\\r\\n      </Button>\\r\\n      <Dialog fullScreen={fullScreen} open={open} onClose={handleClose} aria-labelledby=\\\"responsive-dialog-title\\\">\\r\\n        <DialogTitle id=\\\"responsive-dialog-title\\\">{\\\"Use Google's location service?\\\"}</DialogTitle>\\r\\n        <DialogContent>\\r\\n          <DialogContentText>\\r\\n            Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps\\r\\n            are running.\\r\\n          </DialogContentText>\\r\\n        </DialogContent>\\r\\n        <DialogActions>\\r\\n          <Button autoFocus onClick={handleClose} color=\\\"primary\\\">\\r\\n            Disagree\\r\\n          </Button>\\r\\n          <Button onClick={handleClose} color=\\\"primary\\\" autoFocus>\\r\\n            Agree\\r\\n          </Button>\\r\\n        </DialogActions>\\r\\n      </Dialog>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport Dialog from '@material-ui/core/Dialog';\\r\\nimport DialogActions from '@material-ui/core/DialogActions';\\r\\nimport DialogContent from '@material-ui/core/DialogContent';\\r\\nimport DialogContentText from '@material-ui/core/DialogContentText';\\r\\nimport DialogTitle from '@material-ui/core/DialogTitle';\\r\\nimport { Box } from '@material-ui/core';\\r\\n\\r\\nexport default function ScrollDialog() {\\r\\n  const [open, setOpen] = React.useState(false);\\r\\n  const [scroll, setScroll] = React.useState('paper');\\r\\n\\r\\n  const handleClickOpen = scrollType => () => {\\r\\n    setOpen(true);\\r\\n    setScroll(scrollType);\\r\\n  };\\r\\n\\r\\n  const handleClose = () => {\\r\\n    setOpen(false);\\r\\n  };\\r\\n\\r\\n  const descriptionElementRef = React.useRef(null);\\r\\n  React.useEffect(() => {\\r\\n    if (open) {\\r\\n      const { current: descriptionElement } = descriptionElementRef;\\r\\n      if (descriptionElement !== null) {\\r\\n        descriptionElement.focus();\\r\\n      }\\r\\n    }\\r\\n  }, [open]);\\r\\n\\r\\n  return (\\r\\n    <Box>\\r\\n      <Button onClick={handleClickOpen('paper')}>scroll=paper</Button>\\r\\n      <Button onClick={handleClickOpen('body')}>scroll=body</Button>\\r\\n      <Dialog\\r\\n        open={open}\\r\\n        onClose={handleClose}\\r\\n        scroll={scroll}\\r\\n        aria-labelledby=\\\"scroll-dialog-title\\\"\\r\\n        aria-describedby=\\\"scroll-dialog-description\\\">\\r\\n        <DialogTitle id=\\\"scroll-dialog-title\\\">Subscribe</DialogTitle>\\r\\n        <DialogContent dividers={scroll === 'paper'}>\\r\\n          <DialogContentText id=\\\"scroll-dialog-description\\\" ref={descriptionElementRef} tabIndex={-1}>\\r\\n            {[...new Array(50)]\\r\\n              .map(\\r\\n                () => `Cras mattis consectetur purus sit amet fermentum.\\r\\nCras justo odio, dapibus ac facilisis in, egestas eget quam.\\r\\nMorbi leo risus, porta ac consectetur ac, vestibulum at eros.\\r\\nPraesent commodo cursus magna, vel scelerisque nisl consectetur et.`,\\r\\n              )\\r\\n              .join('\\\\n')}\\r\\n          </DialogContentText>\\r\\n        </DialogContent>\\r\\n        <DialogActions>\\r\\n          <Button onClick={handleClose} color=\\\"primary\\\">\\r\\n            Cancel\\r\\n          </Button>\\r\\n          <Button onClick={handleClose} color=\\\"primary\\\">\\r\\n            Subscribe\\r\\n          </Button>\\r\\n        </DialogActions>\\r\\n      </Dialog>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport PropTypes from 'prop-types';\\r\\nimport { makeStyles } from '@material-ui/core/styles';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport Avatar from '@material-ui/core/Avatar';\\r\\nimport List from '@material-ui/core/List';\\r\\nimport ListItem from '@material-ui/core/ListItem';\\r\\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\\r\\nimport ListItemText from '@material-ui/core/ListItemText';\\r\\nimport DialogTitle from '@material-ui/core/DialogTitle';\\r\\nimport Dialog from '@material-ui/core/Dialog';\\r\\nimport PersonIcon from '@material-ui/icons/Person';\\r\\nimport AddIcon from '@material-ui/icons/Add';\\r\\nimport Typography from '@material-ui/core/Typography';\\r\\nimport { blue } from '@material-ui/core/colors';\\r\\nimport { Box } from '@material-ui/core';\\r\\n\\r\\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\\r\\nconst useStyles = makeStyles({\\r\\n  avatar: {\\r\\n    backgroundColor: blue[100],\\r\\n    color: blue[600],\\r\\n  },\\r\\n});\\r\\n\\r\\nfunction SimpleDialog(props) {\\r\\n  const classes = useStyles();\\r\\n  const { onClose, selectedValue, open } = props;\\r\\n\\r\\n  const handleClose = () => {\\r\\n    onClose(selectedValue);\\r\\n  };\\r\\n\\r\\n  const handleListItemClick = value => {\\r\\n    onClose(value);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Dialog onClose={handleClose} aria-labelledby=\\\"simple-dialog-title\\\" open={open}>\\r\\n      <DialogTitle id=\\\"simple-dialog-title\\\">Set backup account</DialogTitle>\\r\\n      <List>\\r\\n        {emails.map(email => (\\r\\n          <ListItem button onClick={() => handleListItemClick(email)} key={email}>\\r\\n            <ListItemAvatar>\\r\\n              <Avatar className={classes.avatar}>\\r\\n                <PersonIcon />\\r\\n              </Avatar>\\r\\n            </ListItemAvatar>\\r\\n            <ListItemText primary={email} />\\r\\n          </ListItem>\\r\\n        ))}\\r\\n\\r\\n        <ListItem autoFocus button onClick={() => handleListItemClick('addAccount')}>\\r\\n          <ListItemAvatar>\\r\\n            <Avatar>\\r\\n              <AddIcon />\\r\\n            </Avatar>\\r\\n          </ListItemAvatar>\\r\\n          <ListItemText primary=\\\"Add account\\\" />\\r\\n        </ListItem>\\r\\n      </List>\\r\\n    </Dialog>\\r\\n  );\\r\\n}\\r\\n\\r\\nSimpleDialog.propTypes = {\\r\\n  onClose: PropTypes.func.isRequired,\\r\\n  open: PropTypes.bool.isRequired,\\r\\n  selectedValue: PropTypes.string.isRequired,\\r\\n};\\r\\n\\r\\nexport default function SimpleDialogDemo() {\\r\\n  const [open, setOpen] = React.useState(false);\\r\\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\\r\\n\\r\\n  const handleClickOpen = () => {\\r\\n    setOpen(true);\\r\\n  };\\r\\n\\r\\n  const handleClose = value => {\\r\\n    setOpen(false);\\r\\n    setSelectedValue(value);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Box>\\r\\n      <Typography variant=\\\"subtitle1\\\">Selected: {selectedValue}</Typography>\\r\\n      <br />\\r\\n      <Button variant=\\\"outlined\\\" color=\\\"primary\\\" onClick={handleClickOpen}>\\r\\n        Open simple dialog\\r\\n      </Button>\\r\\n      <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    backgroundColor: blue[100],\r\n    color: blue[600],\r\n  },\r\n});\r\n\r\nfunction SimpleDialog(props) {\r\n  const classes = useStyles();\r\n  const { onClose, selectedValue, open } = props;\r\n\r\n  const handleClose = () => {\r\n    onClose(selectedValue);\r\n  };\r\n\r\n  const handleListItemClick = value => {\r\n    onClose(value);\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\r\n      <List>\r\n        {emails.map(email => (\r\n          <ListItem button onClick={() => handleListItemClick(email)} key={email}>\r\n            <ListItemAvatar>\r\n              <Avatar className={classes.avatar}>\r\n                <PersonIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={email} />\r\n          </ListItem>\r\n        ))}\r\n\r\n        <ListItem autoFocus button onClick={() => handleListItemClick('addAccount')}>\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <AddIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"Add account\" />\r\n        </ListItem>\r\n      </List>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  selectedValue: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default function SimpleDialogDemo() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = value => {\r\n    setOpen(false);\r\n    setSelectedValue(value);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"subtitle1\">Selected: {selectedValue}</Typography>\r\n      <br />\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open simple dialog\r\n      </Button>\r\n      <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Box } from '@material-ui/core';\r\n\r\nexport default function AlertDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open alert dialog\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\">\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps\r\n            are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function AlertDialogSlide() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Slide in alert dialog\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\">\r\n        <DialogTitle id=\"alert-dialog-slide-title\">{\"Use Google's location service?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps\r\n            are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Box } from '@material-ui/core';\r\n\r\nexport default function FormDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open form dialog\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            To subscribe to this website, please enter your email address here. We will send updates occasionally.\r\n          </DialogContentText>\r\n          <TextField autoFocus margin=\"dense\" id=\"name\" label=\"Email Address\" type=\"email\" fullWidth />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Subscribe\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(4),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(2),\r\n    top: theme.spacing(2),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function CustomizedDialogs() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open dialog\r\n      </Button>\r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          Modal title\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <Typography gutterBottom>\r\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam.\r\n            Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\r\n          </Typography>\r\n          <Typography gutterBottom>\r\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet\r\n            rutrum faucibus dolor auctor.\r\n          </Typography>\r\n          <Typography gutterBottom>\r\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur\r\n            et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            Save changes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(4),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function FullScreenDialog() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open full-screen dialog\r\n      </Button>\r\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Sound\r\n            </Typography>\r\n            <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n              save\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <List>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem button>\r\n            <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\r\n          </ListItem>\r\n        </List>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: 'auto',\r\n    width: 'fit-content',\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(4),\r\n    minWidth: 120,\r\n  },\r\n  formControlLabel: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function MaxWidthDialog() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [fullWidth, setFullWidth] = React.useState(true);\r\n  const [maxWidth, setMaxWidth] = React.useState('sm');\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleMaxWidthChange = event => {\r\n    setMaxWidth(event.target.value);\r\n  };\r\n\r\n  const handleFullWidthChange = event => {\r\n    setFullWidth(event.target.checked);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open max-width dialog\r\n      </Button>\r\n      <Dialog\r\n        fullWidth={fullWidth}\r\n        maxWidth={maxWidth}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"max-width-dialog-title\">\r\n        <DialogTitle id=\"max-width-dialog-title\">Optional sizes</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>You can set my maximum width and whether to adapt or not.</DialogContentText>\r\n          <form className={classes.form} noValidate>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\r\n              <Select\r\n                autoFocus\r\n                value={maxWidth}\r\n                onChange={handleMaxWidthChange}\r\n                inputProps={{\r\n                  name: 'max-width',\r\n                  id: 'max-width',\r\n                }}>\r\n                <MenuItem value={false}>false</MenuItem>\r\n                <MenuItem value=\"xs\">xs</MenuItem>\r\n                <MenuItem value=\"sm\">sm</MenuItem>\r\n                <MenuItem value=\"md\">md</MenuItem>\r\n                <MenuItem value=\"lg\">lg</MenuItem>\r\n                <MenuItem value=\"xl\">xl</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControlLabel\r\n              className={classes.formControlLabel}\r\n              control={<Switch checked={fullWidth} onChange={handleFullWidthChange} />}\r\n              label=\"Full width\"\r\n            />\r\n          </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\n\r\nexport default function ResponsiveDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open responsive dialog\r\n      </Button>\r\n      <Dialog fullScreen={fullScreen} open={open} onClose={handleClose} aria-labelledby=\"responsive-dialog-title\">\r\n        <DialogTitle id=\"responsive-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps\r\n            are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst options = [\r\n  'None',\r\n  'Atria',\r\n  'Callisto',\r\n  'Dione',\r\n  'Ganymede',\r\n  'Hangouts Call',\r\n  'Luna',\r\n  'Oberon',\r\n  'Phobos',\r\n  'Pyxis',\r\n  'Sedna',\r\n  'Titania',\r\n  'Triton',\r\n  'Umbriel',\r\n];\r\n\r\nfunction ConfirmationDialogRaw(props) {\r\n  const { onClose, value: valueProp, open, ...other } = props;\r\n  const [value, setValue] = React.useState(valueProp);\r\n  const radioGroupRef = React.useRef(null);\r\n\r\n  React.useEffect(() => {\r\n    if (!open) {\r\n      setValue(valueProp);\r\n    }\r\n  }, [valueProp, open]);\r\n\r\n  const handleEntering = () => {\r\n    if (radioGroupRef.current != null) {\r\n      radioGroupRef.current.focus();\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    onClose();\r\n  };\r\n\r\n  const handleOk = () => {\r\n    onClose(value);\r\n  };\r\n\r\n  const handleChange = event => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      maxWidth=\"xs\"\r\n      onEntering={handleEntering}\r\n      aria-labelledby=\"confirmation-dialog-title\"\r\n      open={open}\r\n      {...other}>\r\n      <DialogTitle id=\"confirmation-dialog-title\">Phone Ringtone</DialogTitle>\r\n      <DialogContent dividers>\r\n        <RadioGroup ref={radioGroupRef} aria-label=\"ringtone\" name=\"ringtone\" value={value} onChange={handleChange}>\r\n          {options.map(option => (\r\n            <FormControlLabel value={option} key={option} control={<Radio />} label={option} />\r\n          ))}\r\n        </RadioGroup>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button autoFocus onClick={handleCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleOk} color=\"primary\">\r\n          Ok\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nConfirmationDialogRaw.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  paper: {\r\n    width: '80%',\r\n    maxHeight: 435,\r\n  },\r\n}));\r\n\r\nexport default function ConfirmationDialog() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [value, setValue] = React.useState('Dione');\r\n\r\n  const handleClickListItem = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = newValue => {\r\n    setOpen(false);\r\n\r\n    if (newValue) {\r\n      setValue(newValue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <List component=\"div\" role=\"list\">\r\n        <ListItem button divider disabled role=\"listitem\">\r\n          <ListItemText primary=\"Interruptions\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          divider\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"ringtone-menu\"\r\n          aria-label=\"phone ringtone\"\r\n          onClick={handleClickListItem}\r\n          role=\"listitem\">\r\n          <ListItemText primary=\"Phone ringtone\" secondary={value} />\r\n        </ListItem>\r\n        <ListItem button divider disabled role=\"listitem\">\r\n          <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\r\n        </ListItem>\r\n        <ConfirmationDialogRaw\r\n          classes={{\r\n            paper: classes.paper,\r\n          }}\r\n          id=\"ringtone-menu\"\r\n          keepMounted\r\n          open={open}\r\n          onClose={handleClose}\r\n          value={value}\r\n        />\r\n      </List>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Draggable from 'react-draggable';\r\nimport { Box } from '@material-ui/core';\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function DraggableDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open form dialog\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} PaperComponent={PaperComponent} aria-labelledby=\"draggable-dialog-title\">\r\n        <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n          Subscribe\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            To subscribe to this website, please enter your email address here. We will send updates occasionally.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Subscribe\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Box } from '@material-ui/core';\r\n\r\nexport default function ScrollDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [scroll, setScroll] = React.useState('paper');\r\n\r\n  const handleClickOpen = scrollType => () => {\r\n    setOpen(true);\r\n    setScroll(scrollType);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const descriptionElementRef = React.useRef(null);\r\n  React.useEffect(() => {\r\n    if (open) {\r\n      const { current: descriptionElement } = descriptionElementRef;\r\n      if (descriptionElement !== null) {\r\n        descriptionElement.focus();\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n  return (\r\n    <Box>\r\n      <Button onClick={handleClickOpen('paper')}>scroll=paper</Button>\r\n      <Button onClick={handleClickOpen('body')}>scroll=body</Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        scroll={scroll}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\">\r\n        <DialogTitle id=\"scroll-dialog-title\">Subscribe</DialogTitle>\r\n        <DialogContent dividers={scroll === 'paper'}>\r\n          <DialogContentText id=\"scroll-dialog-description\" ref={descriptionElementRef} tabIndex={-1}>\r\n            {[...new Array(50)]\r\n              .map(\r\n                () => `Cras mattis consectetur purus sit amet fermentum.\r\nCras justo odio, dapibus ac facilisis in, egestas eget quam.\r\nMorbi leo risus, porta ac consectetur ac, vestibulum at eros.\r\nPraesent commodo cursus magna, vel scelerisque nisl consectetur et.`,\r\n              )\r\n              .join('\\n')}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Subscribe\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { MuiComponentDemo } from '../../../../@jumbo/components/PageComponents';\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CodeViewerCard from '../../../../@jumbo/components/Common/CodeViewerCard';\r\nimport SimpleDialog from './demo/SimpleDialog';\r\nimport AlertDialog from './demo/AlertDialog';\r\nimport AlertDialogSlide from './demo/AlertDialogSlide';\r\nimport FormDialog from './demo/FormDialog';\r\nimport CustomizedDialogs from './demo/CustomizedDialogs';\r\nimport FullScreenDialog from './demo/FullScreenDialog';\r\nimport MaxWidthDialog from './demo/MaxWidthDialog';\r\nimport ResponsiveDialog from './demo/ResponsiveDialog';\r\nimport ConfirmationDialog from './demo/ConfirmationDialog';\r\nimport DraggableDialog from './demo/DraggableDialog';\r\nimport ScrollDialog from './demo/ScrollDialog';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  section: {\r\n    '&:not(:last-child)': {\r\n      marginBottom: theme.typography.pxToRem(32),\r\n    },\r\n  },\r\n  sectionHeading: {\r\n    marginBottom: theme.typography.pxToRem(16),\r\n  },\r\n}));\r\n\r\nconst requireRaw = require.context('!raw-loader!../../../../@fake-db/mui-components/dialog', false, /\\.(txt|js|md|tsx)$/);\r\n\r\nconst demos = [\r\n  {\r\n    label: 'Simple Dialogs',\r\n    link: 'simple-dialogs',\r\n    component: <SimpleDialog />,\r\n    filename: './SimpleDialog.txt',\r\n  },\r\n  {\r\n    label: 'Alerts',\r\n    link: 'alerts',\r\n    component: <AlertDialog />,\r\n    filename: './AlertDialog.txt',\r\n  },\r\n  {\r\n    label: 'Transitions',\r\n    link: 'transitions',\r\n    component: <AlertDialogSlide />,\r\n    filename: './AlertDialogSlide.txt',\r\n  },\r\n  {\r\n    label: 'Form dialogs',\r\n    link: 'form-dialogs',\r\n    component: <FormDialog />,\r\n    filename: './FormDialog.txt',\r\n  },\r\n  {\r\n    label: 'Customized dialogs',\r\n    link: 'customized-dialogs',\r\n    component: <CustomizedDialogs />,\r\n    filename: './CustomizedDialogs.txt',\r\n  },\r\n  {\r\n    label: 'Full-screen dialogs',\r\n    link: 'full-screen-dialogs',\r\n    component: <FullScreenDialog />,\r\n    filename: './FullScreenDialog.txt',\r\n  },\r\n  {\r\n    label: 'Optional sizes',\r\n    link: 'optional-sizes',\r\n    component: <MaxWidthDialog />,\r\n    filename: './MaxWidthDialog.txt',\r\n  },\r\n  {\r\n    label: 'Responsive full-screen',\r\n    link: 'responsive-full-screen',\r\n    component: <ResponsiveDialog />,\r\n    filename: './ResponsiveDialog.txt',\r\n  },\r\n  {\r\n    label: 'Confirmation dialogs',\r\n    link: 'confirmation-dialogs',\r\n    component: <ConfirmationDialog />,\r\n    filename: './ConfirmationDialog.txt',\r\n  },\r\n  {\r\n    label: 'Draggable dialog',\r\n    link: 'draggable-dialog',\r\n    component: <DraggableDialog />,\r\n    filename: './DraggableDialog.txt',\r\n  },\r\n  {\r\n    label: 'Scrolling long content',\r\n    link: 'scrolling-long-content',\r\n    component: <ScrollDialog />,\r\n    filename: './ScrollDialog.txt',\r\n  },\r\n];\r\n\r\nexport default function Dialog() {\r\n  const classes = useStyles();\r\n  return (\r\n    <MuiComponentDemo pageTitle=\"Dialog\" menus={demos}>\r\n      {demos.map((menu, index) => (\r\n        <Box key={index} id={menu.link} className={classes.section}>\r\n          <Typography component=\"h3\" variant=\"inherit\" className={classes.sectionHeading}>\r\n            {menu.label}\r\n          </Typography>\r\n          <CodeViewerCard code={requireRaw(menu.filename).default} language=\"jsx\">\r\n            {menu.component}\r\n          </CodeViewerCard>\r\n        </Box>\r\n      ))}\r\n    </MuiComponentDemo>\r\n  );\r\n}\r\n"],"sourceRoot":""}