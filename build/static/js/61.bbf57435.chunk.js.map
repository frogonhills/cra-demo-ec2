{"version":3,"sources":["@jumbo/components/PageComponents/layouts/PageContainer.js","@jumbo/components/PageComponents/PageHeader.js","@jumbo/components/PageComponents/PageBreadcrumbs/index.js","@jumbo/components/PageComponents/layouts/CorematComponentDemo.js","@jumbo/components/PageComponents/layouts/MuiComponentDemo.js","@jumbo/components/PageComponents/layouts/ComponentsDemo.js","webpack:///./src/@fake-db/mui-components/text-fields sync nonrecursive ./node_modules/raw-loader/dist/cjs.js \\.(txt|js|md|tsx)$?cdb2","@fake-db/mui-components/text-fields/BasicTextFields.txt","@fake-db/mui-components/text-fields/ColorTextFields.txt","@fake-db/mui-components/text-fields/ComposedTextField.txt","@fake-db/mui-components/text-fields/CustomizedInputBase.txt","@fake-db/mui-components/text-fields/CustomizedInputs.txt","@fake-db/mui-components/text-fields/FormPropsTextFields.txt","@fake-db/mui-components/text-fields/FormattedInputs.txt","@fake-db/mui-components/text-fields/InputAdornments.txt","@fake-db/mui-components/text-fields/InputWithIcon.txt","@fake-db/mui-components/text-fields/Inputs.txt","@fake-db/mui-components/text-fields/LayoutTextFields.txt","@fake-db/mui-components/text-fields/MultilineTextFields.txt","@fake-db/mui-components/text-fields/SelectTextFields.txt","@fake-db/mui-components/text-fields/StateTextFields.txt","@fake-db/mui-components/text-fields/TextFieldSizes.txt","@fake-db/mui-components/text-fields/ValidationTextFields.txt","routes/Components/MuiComponents/TextFields/demos/BasicTextFields.js","routes/Components/MuiComponents/TextFields/demos/FormPropsTextFields.js","routes/Components/MuiComponents/TextFields/demos/ValidationTextFields.js","routes/Components/MuiComponents/TextFields/demos/MultilineTextFields.js","routes/Components/MuiComponents/TextFields/demos/InputWithIcon.js","routes/Components/MuiComponents/TextFields/demos/InputAdornments.js","routes/Components/MuiComponents/TextFields/demos/TextFieldSizes.js","routes/Components/MuiComponents/TextFields/demos/LayoutTextFields.js","routes/Components/MuiComponents/TextFields/demos/StateTextFields.js","routes/Components/MuiComponents/TextFields/demos/ComposedTextField.js","routes/Components/MuiComponents/TextFields/demos/Inputs.js","routes/Components/MuiComponents/TextFields/demos/ColorTextFields.js","routes/Components/MuiComponents/TextFields/demos/CustomizedInputs.js","routes/Components/MuiComponents/TextFields/demos/CustomizedInputBase.js","routes/Components/MuiComponents/TextFields/demos/FormattedInputs.js","routes/Components/MuiComponents/TextFields/demos/SelectTextFields.js","routes/Components/MuiComponents/TextFields/index.js"],"names":["useStyles","makeStyles","pageFull","width","PageContainer","heading","breadcrumbs","children","className","restProps","classes","in","direction","mountOnEnter","unmountOnExit","clsx","breadcrumbComponent","items","theme","pageHeaderRoot","display","flexDirection","breakpoints","up","alignItems","titleRoot","down","marginBottom","PageHeader","rest","Box","mb","xs","md","lg","Typography","component","variant","ml","sm","textSm","fontSize","linkBlock","color","PageBreadcrumbs","Breadcrumbs","aria-label","map","item","index","isActive","key","label","to","link","CorematComponentDemo","SourceCodeComponent","SettingsComponent","GridContainer","Grid","CmtCard","MuiComponentDemo","pageTitle","menus","ComponentsDemo","root","flexWrap","contentArea","paddingRight","typography","pxToRem","contentSidebar","height","position","top","overflowY","flexShrink","xsDown","menu","dense","button","href","primary","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","margin","spacing","BasicTextFields","noValidate","autoComplete","TextField","FormPropsTextFields","required","defaultValue","disabled","type","InputProps","readOnly","InputLabelProps","shrink","helperText","ValidationTextFields","error","MultilineTextFields","React","useState","value","setValue","handleChange","event","target","multiline","maxRows","onChange","placeholder","rows","InputWithIcon","FormControl","InputLabel","htmlFor","Input","startAdornment","InputAdornment","withoutLabel","marginTop","textField","InputAdornments","amount","password","weight","weightRange","showPassword","values","setValues","prop","handleClickShowPassword","handleMouseDownPassword","preventDefault","endAdornment","aria-describedby","inputProps","FormHelperText","IconButton","onClick","onMouseDown","fullWidth","FilledInput","edge","OutlinedInput","labelWidth","TextFieldSizes","size","marginLeft","marginRight","LayoutTextFields","style","StateTextFields","name","setName","ComposedTextField","Inputs","ColorTextFields","CssTextField","withStyles","borderBottomColor","borderColor","BootstrapInput","input","borderRadius","backgroundColor","palette","background","paper","border","padding","transition","transitions","create","fontFamily","join","boxShadow","alpha","main","InputBase","useStylesReddit","overflow","focused","RedditTextField","props","disableUnderline","ValidationTextField","borderWidth","borderLeftWidth","createTheme","green","CustomizedInputs","ThemeProvider","default","flex","iconButton","divider","CustomizedInputBase","Paper","Divider","orientation","TextMaskCustom","inputRef","other","ref","inputElement","mask","placeholderChar","showMask","NumberFormatCustom","getInputRef","onValueChange","thousandSeparator","isNumericString","prefix","FormattedInputs","textmask","numberformat","inputComponent","currencies","currency","setCurrency","select","option","MenuItem","SelectProps","native","section","sectionHeading","requireRaw","require","demos","filename","TextFields","CodeViewerCard","language"],"mappings":"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","file":"static/js/61.bbf57435.chunk.js","sourcesContent":["import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { PageBreadcrumbs, PageHeader } from '../index';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  pageFull: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst PageContainer = ({ heading, breadcrumbs, children, className, restProps }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Slide in={true} direction=\"up\" mountOnEnter unmountOnExit>\r\n      <Box className={clsx(classes.pageFull, className)} {...restProps}>\r\n        {(heading || breadcrumbs) && (\r\n          <PageHeader heading={heading} breadcrumbComponent={breadcrumbs && <PageBreadcrumbs items={breadcrumbs} />} />\r\n        )}\r\n        {children}\r\n      </Box>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default PageContainer;\r\n","import React from 'react';\r\nimport { Box, makeStyles, Typography } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageHeaderRoot: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.up('sm')]: {\r\n      alignItems: 'center',\r\n      flexDirection: 'row',\r\n    },\r\n  },\r\n  titleRoot: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginBottom: 10,\r\n    },\r\n  },\r\n}));\r\n\r\nconst PageHeader = ({ heading, breadcrumbComponent, children, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={clsx(classes.pageHeaderRoot, 'page-header')} mb={{ xs: 5, md: 6, lg: 8 }} {...rest}>\r\n      <Typography component=\"div\" variant=\"h1\" className={clsx(classes.titleRoot, 'title')}>\r\n        {heading}\r\n      </Typography>\r\n      <Box ml={{ sm: 'auto' }}>{breadcrumbComponent}</Box>\r\n\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import React from 'react';\r\nimport { Breadcrumbs, makeStyles } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { NavLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  textSm: {\r\n    fontSize: 12,\r\n  },\r\n  linkBlock: {\r\n    display: 'block',\r\n    color: 'inherit',\r\n  },\r\n}));\r\n\r\nconst PageBreadcrumbs = ({ items, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Breadcrumbs className=\"bread-crumbs\" aria-label=\"breadcrumb {...rest}\">\r\n      {items.map((item, index) =>\r\n        item.isActive ? (\r\n          <Typography key={index} className={classes.textSm} color=\"textPrimary\">\r\n            {item.label}\r\n          </Typography>\r\n        ) : (\r\n          <NavLink key={index} className={clsx(classes.textSm, classes.linkBlock)} color=\"inherit\" to={item.link || '/'}>\r\n            {item.label}\r\n          </NavLink>\r\n        ),\r\n      )}\r\n    </Breadcrumbs>\r\n  );\r\n};\r\n\r\nexport default PageBreadcrumbs;\r\n","import React from 'react';\r\nimport { Box, Grid } from '@material-ui/core';\r\nimport CmtCard from '../../../../@coremat/CmtCard';\r\nimport { PageHeader } from '../index';\r\nimport GridContainer from '../../GridContainer';\r\nimport PageContainer from './PageContainer';\r\n\r\nconst CorematComponentDemo = ({ SourceCodeComponent, SettingsComponent, children }) => {\r\n  return (\r\n    <PageContainer>\r\n      <GridContainer>\r\n        <Grid item xs={12} md={7}>\r\n          <PageHeader heading=\"Preview\" />\r\n          <Box mb={8}>{children}</Box>\r\n          <CmtCard>{SourceCodeComponent}</CmtCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={5}>\r\n          {SettingsComponent}\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default CorematComponentDemo;\r\n","import React from 'react';\r\nimport ComponentsDemo from './ComponentsDemo';\r\n\r\nconst MuiComponentDemo = ({ pageTitle, menus, children }) => {\r\n  const breadcrumbs = [\r\n    { label: 'Home', link: '/' },\r\n    { label: 'Material UI Components', link: '/components/mui' },\r\n    { label: pageTitle, isActive: true },\r\n  ];\r\n  return (\r\n    <ComponentsDemo pageTitle={pageTitle} breadcrumbs={breadcrumbs} menus={menus}>\r\n      {children}\r\n    </ComponentsDemo>\r\n  );\r\n};\r\nexport default MuiComponentDemo;\r\n","import React from 'react';\r\nimport { Box, Hidden, List, ListItem, ListItemText, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PageContainer from './PageContainer';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  contentArea: {\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingRight: theme.typography.pxToRem(30),\r\n      width: `calc(100% - ${theme.typography.pxToRem(175)})`,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingRight: theme.typography.pxToRem(54),\r\n    },\r\n  },\r\n  contentSidebar: {\r\n    width: theme.typography.pxToRem(175),\r\n    height: `calc(100vh - ${theme.typography.pxToRem(102)})`,\r\n    position: 'sticky',\r\n    top: 30,\r\n    overflowY: 'auto',\r\n    flexShrink: 0,\r\n  },\r\n}));\r\n\r\nconst ComponentsDemo = ({ pageTitle, menus, breadcrumbs, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <PageContainer heading={pageTitle} breadcrumbs={breadcrumbs}>\r\n      <Box className={classes.root}>\r\n        <Box className={classes.contentArea}>{children}</Box>\r\n        <Hidden xsDown>\r\n          <Box className={classes.contentSidebar}>\r\n            <Typography component=\"h4\" variant=\"h4\">\r\n              Contents\r\n            </Typography>\r\n            <List>\r\n              {menus.map((menu, index) => (\r\n                <ListItem key={index} dense button component=\"a\" href={`#${menu.link}`}>\r\n                  <ListItemText primary={menu.label} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Box>\r\n        </Hidden>\r\n      </Box>\r\n    </PageContainer>\r\n  );\r\n};\r\nexport default ComponentsDemo;\r\n","var map = {\n\t\"./BasicTextFields.txt\": 2554,\n\t\"./ColorTextFields.txt\": 2555,\n\t\"./ComposedTextField.txt\": 2556,\n\t\"./CustomizedInputBase.txt\": 2557,\n\t\"./CustomizedInputs.txt\": 2558,\n\t\"./FormPropsTextFields.txt\": 2559,\n\t\"./FormattedInputs.txt\": 2560,\n\t\"./InputAdornments.txt\": 2561,\n\t\"./InputWithIcon.txt\": 2562,\n\t\"./Inputs.txt\": 2563,\n\t\"./LayoutTextFields.txt\": 2564,\n\t\"./MultilineTextFields.txt\": 2565,\n\t\"./SelectTextFields.txt\": 2566,\n\t\"./StateTextFields.txt\": 2567,\n\t\"./TextFieldSizes.txt\": 2568,\n\t\"./ValidationTextFields.txt\": 2569\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2553;","export default \"import React from 'react';\\r\\nimport { makeStyles } from '@material-ui/core/styles';\\r\\nimport TextField from '@material-ui/core/TextField';\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  root: {\\r\\n    '& > *': {\\r\\n      margin: theme.spacing(1),\\r\\n      width: '25ch',\\r\\n    },\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function BasicTextFields() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  return (\\r\\n    <form className={classes.root} noValidate autoComplete=\\\"off\\\">\\r\\n      <TextField id=\\\"standard-basic\\\" label=\\\"Standard\\\" />\\r\\n      <TextField id=\\\"filled-basic\\\" label=\\\"Filled\\\" variant=\\\"filled\\\" />\\r\\n      <TextField id=\\\"outlined-basic\\\" label=\\\"Outlined\\\" variant=\\\"outlined\\\" />\\r\\n    </form>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport { makeStyles } from '@material-ui/core/styles';\\r\\nimport TextField from '@material-ui/core/TextField';\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  root: {\\r\\n    '& > *': {\\r\\n      margin: theme.spacing(1),\\r\\n      width: '25ch',\\r\\n    },\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function ColorTextFields() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  return (\\r\\n    <form className={classes.root} noValidate autoComplete=\\\"off\\\">\\r\\n      <TextField id=\\\"standard-secondary\\\" label=\\\"Standard secondary\\\" color=\\\"secondary\\\" />\\r\\n      <TextField id=\\\"filled-secondary\\\" label=\\\"Filled secondary\\\" variant=\\\"filled\\\" color=\\\"secondary\\\" />\\r\\n      <TextField id=\\\"outlined-secondary\\\" label=\\\"Outlined secondary\\\" variant=\\\"outlined\\\" color=\\\"secondary\\\" />\\r\\n    </form>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport { makeStyles } from '@material-ui/core/styles';\\r\\nimport FilledInput from '@material-ui/core/FilledInput';\\r\\nimport FormControl from '@material-ui/core/FormControl';\\r\\nimport FormHelperText from '@material-ui/core/FormHelperText';\\r\\nimport Input from '@material-ui/core/Input';\\r\\nimport InputLabel from '@material-ui/core/InputLabel';\\r\\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  root: {\\r\\n    '& > *': {\\r\\n      margin: theme.spacing(1),\\r\\n    },\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function ComposedTextField() {\\r\\n  const [name, setName] = React.useState('Composed TextField');\\r\\n  const classes = useStyles();\\r\\n\\r\\n  const handleChange = event => {\\r\\n    setName(event.target.value);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <form className={classes.root} noValidate autoComplete=\\\"off\\\">\\r\\n      <FormControl>\\r\\n        <InputLabel htmlFor=\\\"component-simple\\\">Name</InputLabel>\\r\\n        <Input id=\\\"component-simple\\\" value={name} onChange={handleChange} />\\r\\n      </FormControl>\\r\\n      <FormControl>\\r\\n        <InputLabel htmlFor=\\\"component-helper\\\">Name</InputLabel>\\r\\n        <Input id=\\\"component-helper\\\" value={name} onChange={handleChange} aria-describedby=\\\"component-helper-text\\\" />\\r\\n        <FormHelperText id=\\\"component-helper-text\\\">Some important helper text</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl disabled>\\r\\n        <InputLabel htmlFor=\\\"component-disabled\\\">Name</InputLabel>\\r\\n        <Input id=\\\"component-disabled\\\" value={name} onChange={handleChange} />\\r\\n        <FormHelperText>Disabled</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl error>\\r\\n        <InputLabel htmlFor=\\\"component-error\\\">Name</InputLabel>\\r\\n        <Input id=\\\"component-error\\\" value={name} onChange={handleChange} aria-describedby=\\\"component-error-text\\\" />\\r\\n        <FormHelperText id=\\\"component-error-text\\\">Error</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl variant=\\\"outlined\\\">\\r\\n        <InputLabel htmlFor=\\\"component-outlined\\\">Name</InputLabel>\\r\\n        <OutlinedInput id=\\\"component-outlined\\\" value={name} onChange={handleChange} label=\\\"Name\\\" />\\r\\n      </FormControl>\\r\\n      <FormControl variant=\\\"filled\\\">\\r\\n        <InputLabel htmlFor=\\\"component-filled\\\">Name</InputLabel>\\r\\n        <FilledInput id=\\\"component-filled\\\" value={name} onChange={handleChange} />\\r\\n      </FormControl>\\r\\n    </form>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport { makeStyles } from '@material-ui/core/styles';\\r\\nimport Paper from '@material-ui/core/Paper';\\r\\nimport InputBase from '@material-ui/core/InputBase';\\r\\nimport Divider from '@material-ui/core/Divider';\\r\\nimport IconButton from '@material-ui/core/IconButton';\\r\\nimport MenuIcon from '@material-ui/icons/Menu';\\r\\nimport SearchIcon from '@material-ui/icons/Search';\\r\\nimport DirectionsIcon from '@material-ui/icons/Directions';\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  root: {\\r\\n    padding: '2px 4px',\\r\\n    display: 'flex',\\r\\n    alignItems: 'center',\\r\\n    backgroundColor: theme.palette.background.default,\\r\\n    width: 400,\\r\\n  },\\r\\n  input: {\\r\\n    marginLeft: theme.spacing(1),\\r\\n    flex: 1,\\r\\n  },\\r\\n  iconButton: {\\r\\n    padding: 10,\\r\\n  },\\r\\n  divider: {\\r\\n    height: 28,\\r\\n    margin: 4,\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function CustomizedInputBase() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  return (\\r\\n    <Paper component=\\\"form\\\" className={classes.root}>\\r\\n      <IconButton className={classes.iconButton} aria-label=\\\"menu\\\">\\r\\n        <MenuIcon />\\r\\n      </IconButton>\\r\\n      <InputBase\\r\\n        className={classes.input}\\r\\n        placeholder=\\\"Search Google Maps\\\"\\r\\n        inputProps={{ 'aria-label': 'search google maps' }}\\r\\n      />\\r\\n      <IconButton type=\\\"submit\\\" className={classes.iconButton} aria-label=\\\"search\\\">\\r\\n        <SearchIcon />\\r\\n      </IconButton>\\r\\n      <Divider className={classes.divider} orientation=\\\"vertical\\\" />\\r\\n      <IconButton color=\\\"primary\\\" className={classes.iconButton} aria-label=\\\"directions\\\">\\r\\n        <DirectionsIcon />\\r\\n      </IconButton>\\r\\n    </Paper>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport { alpha, ThemeProvider, withStyles, makeStyles, createTheme } from '@material-ui/core/styles';\\r\\nimport InputBase from '@material-ui/core/InputBase';\\r\\nimport InputLabel from '@material-ui/core/InputLabel';\\r\\nimport TextField from '@material-ui/core/TextField';\\r\\nimport FormControl from '@material-ui/core/FormControl';\\r\\nimport { green } from '@material-ui/core/colors';\\r\\n\\r\\nconst CssTextField = withStyles({\\r\\n  root: {\\r\\n    '& label.Mui-focused': {\\r\\n      color: 'green',\\r\\n    },\\r\\n    '& .MuiInput-underline:after': {\\r\\n      borderBottomColor: 'green',\\r\\n    },\\r\\n    '& .MuiOutlinedInput-root': {\\r\\n      '& fieldset': {\\r\\n        borderColor: 'red',\\r\\n      },\\r\\n      '&:hover fieldset': {\\r\\n        borderColor: 'yellow',\\r\\n      },\\r\\n      '&.Mui-focused fieldset': {\\r\\n        borderColor: 'green',\\r\\n      },\\r\\n    },\\r\\n  },\\r\\n})(TextField);\\r\\n\\r\\nconst BootstrapInput = withStyles(theme => ({\\r\\n  root: {\\r\\n    'label + &': {\\r\\n      marginTop: theme.spacing(6),\\r\\n    },\\r\\n  },\\r\\n  input: {\\r\\n    borderRadius: 4,\\r\\n    position: 'relative',\\r\\n    backgroundColor: theme.palette.background.paper,\\r\\n    border: '1px solid #ced4da',\\r\\n    fontSize: 16,\\r\\n    width: 'auto',\\r\\n    padding: '10px 12px',\\r\\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\\r\\n    // Use the system font instead of the default Roboto font.\\r\\n    fontFamily: [\\r\\n      '-apple-system',\\r\\n      'BlinkMacSystemFont',\\r\\n      '\\\"Segoe UI\\\"',\\r\\n      'Roboto',\\r\\n      '\\\"Helvetica Neue\\\"',\\r\\n      'Arial',\\r\\n      'sans-serif',\\r\\n      '\\\"Apple Color Emoji\\\"',\\r\\n      '\\\"Segoe UI Emoji\\\"',\\r\\n      '\\\"Segoe UI Symbol\\\"',\\r\\n    ].join(','),\\r\\n    '&:focus': {\\r\\n      boxShadow: `${alpha(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\\r\\n      borderColor: theme.palette.primary.main,\\r\\n    },\\r\\n  },\\r\\n}))(InputBase);\\r\\n\\r\\nconst useStylesReddit = makeStyles(theme => ({\\r\\n  root: {\\r\\n    border: `1px solid ${theme.palette.borderColor.main}`,\\r\\n    overflow: 'hidden',\\r\\n    borderRadius: 4,\\r\\n    backgroundColor: theme.palette.background.paper,\\r\\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\\r\\n    '&:hover': {\\r\\n      backgroundColor: theme.palette.background.paper,\\r\\n    },\\r\\n    '&$focused': {\\r\\n      backgroundColor: theme.palette.background.paper,\\r\\n      boxShadow: `${alpha(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\\r\\n      borderColor: theme.palette.primary.main,\\r\\n    },\\r\\n  },\\r\\n  focused: {},\\r\\n}));\\r\\n\\r\\nfunction RedditTextField(props) {\\r\\n  const classes = useStylesReddit();\\r\\n\\r\\n  return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\\r\\n}\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  root: {\\r\\n    display: 'flex',\\r\\n    flexWrap: 'wrap',\\r\\n  },\\r\\n  margin: {\\r\\n    margin: theme.spacing(1),\\r\\n  },\\r\\n}));\\r\\n\\r\\nconst ValidationTextField = withStyles({\\r\\n  root: {\\r\\n    '& input:valid + fieldset': {\\r\\n      borderColor: 'green',\\r\\n      borderWidth: 2,\\r\\n    },\\r\\n    '& input:invalid + fieldset': {\\r\\n      borderColor: 'red',\\r\\n      borderWidth: 2,\\r\\n    },\\r\\n    '& input:valid:focus + fieldset': {\\r\\n      borderLeftWidth: 6,\\r\\n      padding: '4px !important', // override inline-style\\r\\n    },\\r\\n  },\\r\\n})(TextField);\\r\\n\\r\\nconst theme = createTheme({\\r\\n  palette: {\\r\\n    primary: green,\\r\\n  },\\r\\n});\\r\\n\\r\\nexport default function CustomizedInputs() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  return (\\r\\n    <form className={classes.root} noValidate>\\r\\n      <CssTextField className={classes.margin} id=\\\"custom-css-standard-input\\\" label=\\\"Custom CSS\\\" />\\r\\n      <CssTextField className={classes.margin} label=\\\"Custom CSS\\\" variant=\\\"outlined\\\" id=\\\"custom-css-outlined-input\\\" />\\r\\n      <ThemeProvider theme={theme}>\\r\\n        <TextField className={classes.margin} label=\\\"ThemeProvider\\\" id=\\\"mui-theme-provider-standard-input\\\" />\\r\\n        <TextField\\r\\n          className={classes.margin}\\r\\n          label=\\\"ThemeProvider\\\"\\r\\n          variant=\\\"outlined\\\"\\r\\n          id=\\\"mui-theme-provider-outlined-input\\\"\\r\\n        />\\r\\n      </ThemeProvider>\\r\\n      <FormControl className={classes.margin}>\\r\\n        <InputLabel shrink htmlFor=\\\"bootstrap-input\\\">\\r\\n          Bootstrap\\r\\n        </InputLabel>\\r\\n        <BootstrapInput defaultValue=\\\"react-bootstrap\\\" id=\\\"bootstrap-input\\\" />\\r\\n      </FormControl>\\r\\n      <RedditTextField\\r\\n        label=\\\"Reddit\\\"\\r\\n        className={classes.margin}\\r\\n        defaultValue=\\\"react-reddit\\\"\\r\\n        variant=\\\"filled\\\"\\r\\n        id=\\\"reddit-input\\\"\\r\\n      />\\r\\n      <InputBase className={classes.margin} defaultValue=\\\"Naked input\\\" inputProps={{ 'aria-label': 'naked' }} />\\r\\n      <ValidationTextField\\r\\n        className={classes.margin}\\r\\n        label=\\\"CSS validation style\\\"\\r\\n        required\\r\\n        variant=\\\"outlined\\\"\\r\\n        defaultValue=\\\"Success\\\"\\r\\n        id=\\\"validation-outlined-input\\\"\\r\\n      />\\r\\n    </form>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport TextField from '@material-ui/core/TextField';\\r\\nimport { makeStyles } from '@material-ui/core/styles';\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  root: {\\r\\n    '& .MuiTextField-root': {\\r\\n      margin: theme.spacing(1),\\r\\n      width: '25ch',\\r\\n    },\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function FormPropsTextFields() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  return (\\r\\n    <form className={classes.root} noValidate autoComplete=\\\"off\\\">\\r\\n      <div>\\r\\n        <TextField required id=\\\"standard-required\\\" label=\\\"Required\\\" defaultValue=\\\"Hello World\\\" />\\r\\n        <TextField disabled id=\\\"standard-disabled\\\" label=\\\"Disabled\\\" defaultValue=\\\"Hello World\\\" />\\r\\n        <TextField id=\\\"standard-password-input\\\" label=\\\"Password\\\" type=\\\"password\\\" autoComplete=\\\"current-password\\\" />\\r\\n        <TextField\\r\\n          id=\\\"standard-read-only-input\\\"\\r\\n          label=\\\"Read Only\\\"\\r\\n          defaultValue=\\\"Hello World\\\"\\r\\n          InputProps={{\\r\\n            readOnly: true,\\r\\n          }}\\r\\n        />\\r\\n        <TextField\\r\\n          id=\\\"standard-number\\\"\\r\\n          label=\\\"Number\\\"\\r\\n          type=\\\"number\\\"\\r\\n          InputLabelProps={{\\r\\n            shrink: true,\\r\\n          }}\\r\\n        />\\r\\n        <TextField id=\\\"standard-search\\\" label=\\\"Search field\\\" type=\\\"search\\\" />\\r\\n        <TextField\\r\\n          id=\\\"standard-helperText\\\"\\r\\n          label=\\\"Helper text\\\"\\r\\n          defaultValue=\\\"Default Value\\\"\\r\\n          helperText=\\\"Some important text\\\"\\r\\n        />\\r\\n      </div>\\r\\n      <div>\\r\\n        <TextField required id=\\\"filled-required\\\" label=\\\"Required\\\" defaultValue=\\\"Hello World\\\" variant=\\\"filled\\\" />\\r\\n        <TextField disabled id=\\\"filled-disabled\\\" label=\\\"Disabled\\\" defaultValue=\\\"Hello World\\\" variant=\\\"filled\\\" />\\r\\n        <TextField\\r\\n          id=\\\"filled-password-input\\\"\\r\\n          label=\\\"Password\\\"\\r\\n          type=\\\"password\\\"\\r\\n          autoComplete=\\\"current-password\\\"\\r\\n          variant=\\\"filled\\\"\\r\\n        />\\r\\n        <TextField\\r\\n          id=\\\"filled-read-only-input\\\"\\r\\n          label=\\\"Read Only\\\"\\r\\n          defaultValue=\\\"Hello World\\\"\\r\\n          InputProps={{\\r\\n            readOnly: true,\\r\\n          }}\\r\\n          variant=\\\"filled\\\"\\r\\n        />\\r\\n        <TextField\\r\\n          id=\\\"filled-number\\\"\\r\\n          label=\\\"Number\\\"\\r\\n          type=\\\"number\\\"\\r\\n          InputLabelProps={{\\r\\n            shrink: true,\\r\\n          }}\\r\\n          variant=\\\"filled\\\"\\r\\n        />\\r\\n        <TextField id=\\\"filled-search\\\" label=\\\"Search field\\\" type=\\\"search\\\" variant=\\\"filled\\\" />\\r\\n        <TextField\\r\\n          id=\\\"filled-helperText\\\"\\r\\n          label=\\\"Helper text\\\"\\r\\n          defaultValue=\\\"Default Value\\\"\\r\\n          helperText=\\\"Some important text\\\"\\r\\n          variant=\\\"filled\\\"\\r\\n        />\\r\\n      </div>\\r\\n      <div>\\r\\n        <TextField required id=\\\"outlined-required\\\" label=\\\"Required\\\" defaultValue=\\\"Hello World\\\" variant=\\\"outlined\\\" />\\r\\n        <TextField disabled id=\\\"outlined-disabled\\\" label=\\\"Disabled\\\" defaultValue=\\\"Hello World\\\" variant=\\\"outlined\\\" />\\r\\n        <TextField\\r\\n          id=\\\"outlined-password-input\\\"\\r\\n          label=\\\"Password\\\"\\r\\n          type=\\\"password\\\"\\r\\n          autoComplete=\\\"current-password\\\"\\r\\n          variant=\\\"outlined\\\"\\r\\n        />\\r\\n        <TextField\\r\\n          id=\\\"outlined-read-only-input\\\"\\r\\n          label=\\\"Read Only\\\"\\r\\n          defaultValue=\\\"Hello World\\\"\\r\\n          InputProps={{\\r\\n            readOnly: true,\\r\\n          }}\\r\\n          variant=\\\"outlined\\\"\\r\\n        />\\r\\n        <TextField\\r\\n          id=\\\"outlined-number\\\"\\r\\n          label=\\\"Number\\\"\\r\\n          type=\\\"number\\\"\\r\\n          InputLabelProps={{\\r\\n            shrink: true,\\r\\n          }}\\r\\n          variant=\\\"outlined\\\"\\r\\n        />\\r\\n        <TextField id=\\\"outlined-search\\\" label=\\\"Search field\\\" type=\\\"search\\\" variant=\\\"outlined\\\" />\\r\\n        <TextField\\r\\n          id=\\\"outlined-helperText\\\"\\r\\n          label=\\\"Helper text\\\"\\r\\n          defaultValue=\\\"Default Value\\\"\\r\\n          helperText=\\\"Some important text\\\"\\r\\n          variant=\\\"outlined\\\"\\r\\n        />\\r\\n      </div>\\r\\n    </form>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport PropTypes from 'prop-types';\\r\\nimport MaskedInput from 'react-text-mask';\\r\\nimport NumberFormat from 'react-number-format';\\r\\nimport { makeStyles } from '@material-ui/core/styles';\\r\\nimport Input from '@material-ui/core/Input';\\r\\nimport InputLabel from '@material-ui/core/InputLabel';\\r\\nimport TextField from '@material-ui/core/TextField';\\r\\nimport FormControl from '@material-ui/core/FormControl';\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  root: {\\r\\n    '& > *': {\\r\\n      margin: theme.spacing(1),\\r\\n    },\\r\\n  },\\r\\n}));\\r\\n\\r\\nfunction TextMaskCustom(props) {\\r\\n  const { inputRef, ...other } = props;\\r\\n\\r\\n  return (\\r\\n    <MaskedInput\\r\\n      {...other}\\r\\n      ref={ref => {\\r\\n        inputRef(ref ? ref.inputElement : null);\\r\\n      }}\\r\\n      mask={['(', /[1-9]/, /\\\\d/, /\\\\d/, ')', ' ', /\\\\d/, /\\\\d/, /\\\\d/, '-', /\\\\d/, /\\\\d/, /\\\\d/, /\\\\d/]}\\r\\n      placeholderChar={'\\\\u2000'}\\r\\n      showMask\\r\\n    />\\r\\n  );\\r\\n}\\r\\n\\r\\nTextMaskCustom.propTypes = {\\r\\n  inputRef: PropTypes.func.isRequired,\\r\\n};\\r\\n\\r\\nfunction NumberFormatCustom(props) {\\r\\n  const { inputRef, onChange, ...other } = props;\\r\\n\\r\\n  return (\\r\\n    <NumberFormat\\r\\n      {...other}\\r\\n      getInputRef={inputRef}\\r\\n      onValueChange={values => {\\r\\n        onChange({\\r\\n          target: {\\r\\n            name: props.name,\\r\\n            value: values.value,\\r\\n          },\\r\\n        });\\r\\n      }}\\r\\n      thousandSeparator\\r\\n      isNumericString\\r\\n      prefix=\\\"$\\\"\\r\\n    />\\r\\n  );\\r\\n}\\r\\n\\r\\nNumberFormatCustom.propTypes = {\\r\\n  inputRef: PropTypes.func.isRequired,\\r\\n  name: PropTypes.string.isRequired,\\r\\n  onChange: PropTypes.func.isRequired,\\r\\n};\\r\\n\\r\\nexport default function FormattedInputs() {\\r\\n  const classes = useStyles();\\r\\n  const [values, setValues] = React.useState({\\r\\n    textmask: '(1  )    -    ',\\r\\n    numberformat: '1320',\\r\\n  });\\r\\n\\r\\n  const handleChange = event => {\\r\\n    setValues({\\r\\n      ...values,\\r\\n      [event.target.name]: event.target.value,\\r\\n    });\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <FormControl>\\r\\n        <InputLabel htmlFor=\\\"formatted-text-mask-input\\\">react-text-mask</InputLabel>\\r\\n        <Input\\r\\n          value={values.textmask}\\r\\n          onChange={handleChange}\\r\\n          name=\\\"textmask\\\"\\r\\n          id=\\\"formatted-text-mask-input\\\"\\r\\n          inputComponent={TextMaskCustom}\\r\\n        />\\r\\n      </FormControl>\\r\\n      <TextField\\r\\n        label=\\\"react-number-format\\\"\\r\\n        value={values.numberformat}\\r\\n        onChange={handleChange}\\r\\n        name=\\\"numberformat\\\"\\r\\n        id=\\\"formatted-numberformat-input\\\"\\r\\n        InputProps={{\\r\\n          inputComponent: NumberFormatCustom,\\r\\n        }}\\r\\n      />\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport clsx from 'clsx';\\r\\nimport { makeStyles } from '@material-ui/core/styles';\\r\\nimport IconButton from '@material-ui/core/IconButton';\\r\\nimport Input from '@material-ui/core/Input';\\r\\nimport FilledInput from '@material-ui/core/FilledInput';\\r\\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\\r\\nimport InputLabel from '@material-ui/core/InputLabel';\\r\\nimport InputAdornment from '@material-ui/core/InputAdornment';\\r\\nimport FormHelperText from '@material-ui/core/FormHelperText';\\r\\nimport FormControl from '@material-ui/core/FormControl';\\r\\nimport TextField from '@material-ui/core/TextField';\\r\\nimport Visibility from '@material-ui/icons/Visibility';\\r\\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  root: {\\r\\n    display: 'flex',\\r\\n    flexWrap: 'wrap',\\r\\n  },\\r\\n  margin: {\\r\\n    margin: theme.spacing(1),\\r\\n  },\\r\\n  withoutLabel: {\\r\\n    marginTop: theme.spacing(3),\\r\\n  },\\r\\n  textField: {\\r\\n    width: '25ch',\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function InputAdornments() {\\r\\n  const classes = useStyles();\\r\\n  const [values, setValues] = React.useState({\\r\\n    amount: '',\\r\\n    password: '',\\r\\n    weight: '',\\r\\n    weightRange: '',\\r\\n    showPassword: false,\\r\\n  });\\r\\n\\r\\n  const handleChange = prop => event => {\\r\\n    setValues({ ...values, [prop]: event.target.value });\\r\\n  };\\r\\n\\r\\n  const handleClickShowPassword = () => {\\r\\n    setValues({\\r\\n      ...values,\\r\\n      showPassword: !values.showPassword,\\r\\n    });\\r\\n  };\\r\\n\\r\\n  const handleMouseDownPassword = event => {\\r\\n    event.preventDefault();\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <div>\\r\\n        <TextField\\r\\n          label=\\\"With normal TextField\\\"\\r\\n          id=\\\"standard-start-adornment\\\"\\r\\n          className={clsx(classes.margin, classes.textField)}\\r\\n          InputProps={{\\r\\n            startAdornment: <InputAdornment position=\\\"start\\\">Kg</InputAdornment>,\\r\\n          }}\\r\\n        />\\r\\n        <FormControl className={clsx(classes.margin, classes.withoutLabel, classes.textField)}>\\r\\n          <Input\\r\\n            id=\\\"standard-adornment-weight\\\"\\r\\n            value={values.weight}\\r\\n            onChange={handleChange('weight')}\\r\\n            endAdornment={<InputAdornment position=\\\"end\\\">Kg</InputAdornment>}\\r\\n            aria-describedby=\\\"standard-weight-helper-text\\\"\\r\\n            inputProps={{\\r\\n              'aria-label': 'weight',\\r\\n            }}\\r\\n          />\\r\\n          <FormHelperText id=\\\"standard-weight-helper-text\\\">Weight</FormHelperText>\\r\\n        </FormControl>\\r\\n        <FormControl className={clsx(classes.margin, classes.textField)}>\\r\\n          <InputLabel htmlFor=\\\"standard-adornment-password\\\">Password</InputLabel>\\r\\n          <Input\\r\\n            id=\\\"standard-adornment-password\\\"\\r\\n            type={values.showPassword ? 'text' : 'password'}\\r\\n            value={values.password}\\r\\n            onChange={handleChange('password')}\\r\\n            endAdornment={\\r\\n              <InputAdornment position=\\\"end\\\">\\r\\n                <IconButton\\r\\n                  aria-label=\\\"toggle password visibility\\\"\\r\\n                  onClick={handleClickShowPassword}\\r\\n                  onMouseDown={handleMouseDownPassword}>\\r\\n                  {values.showPassword ? <Visibility /> : <VisibilityOff />}\\r\\n                </IconButton>\\r\\n              </InputAdornment>\\r\\n            }\\r\\n          />\\r\\n        </FormControl>\\r\\n        <FormControl fullWidth className={classes.margin}>\\r\\n          <InputLabel htmlFor=\\\"standard-adornment-amount\\\">Amount</InputLabel>\\r\\n          <Input\\r\\n            id=\\\"standard-adornment-amount\\\"\\r\\n            value={values.amount}\\r\\n            onChange={handleChange('amount')}\\r\\n            startAdornment={<InputAdornment position=\\\"start\\\">$</InputAdornment>}\\r\\n          />\\r\\n        </FormControl>\\r\\n      </div>\\r\\n      <div>\\r\\n        <TextField\\r\\n          label=\\\"With normal TextField\\\"\\r\\n          id=\\\"filled-start-adornment\\\"\\r\\n          className={clsx(classes.margin, classes.textField)}\\r\\n          InputProps={{\\r\\n            startAdornment: <InputAdornment position=\\\"start\\\">Kg</InputAdornment>,\\r\\n          }}\\r\\n          variant=\\\"filled\\\"\\r\\n        />\\r\\n        <FormControl className={clsx(classes.margin, classes.textField)} variant=\\\"filled\\\">\\r\\n          <FilledInput\\r\\n            id=\\\"filled-adornment-weight\\\"\\r\\n            value={values.weight}\\r\\n            onChange={handleChange('weight')}\\r\\n            endAdornment={<InputAdornment position=\\\"end\\\">Kg</InputAdornment>}\\r\\n            aria-describedby=\\\"filled-weight-helper-text\\\"\\r\\n            inputProps={{\\r\\n              'aria-label': 'weight',\\r\\n            }}\\r\\n          />\\r\\n          <FormHelperText id=\\\"filled-weight-helper-text\\\">Weight</FormHelperText>\\r\\n        </FormControl>\\r\\n        <FormControl className={clsx(classes.margin, classes.textField)} variant=\\\"filled\\\">\\r\\n          <InputLabel htmlFor=\\\"filled-adornment-password\\\">Password</InputLabel>\\r\\n          <FilledInput\\r\\n            id=\\\"filled-adornment-password\\\"\\r\\n            type={values.showPassword ? 'text' : 'password'}\\r\\n            value={values.password}\\r\\n            onChange={handleChange('password')}\\r\\n            endAdornment={\\r\\n              <InputAdornment position=\\\"end\\\">\\r\\n                <IconButton\\r\\n                  aria-label=\\\"toggle password visibility\\\"\\r\\n                  onClick={handleClickShowPassword}\\r\\n                  onMouseDown={handleMouseDownPassword}\\r\\n                  edge=\\\"end\\\">\\r\\n                  {values.showPassword ? <Visibility /> : <VisibilityOff />}\\r\\n                </IconButton>\\r\\n              </InputAdornment>\\r\\n            }\\r\\n          />\\r\\n        </FormControl>\\r\\n        <FormControl fullWidth className={classes.margin} variant=\\\"filled\\\">\\r\\n          <InputLabel htmlFor=\\\"filled-adornment-amount\\\">Amount</InputLabel>\\r\\n          <FilledInput\\r\\n            id=\\\"filled-adornment-amount\\\"\\r\\n            value={values.amount}\\r\\n            onChange={handleChange('amount')}\\r\\n            startAdornment={<InputAdornment position=\\\"start\\\">$</InputAdornment>}\\r\\n          />\\r\\n        </FormControl>\\r\\n      </div>\\r\\n      <div>\\r\\n        <TextField\\r\\n          label=\\\"With normal TextField\\\"\\r\\n          id=\\\"outlined-start-adornment\\\"\\r\\n          className={clsx(classes.margin, classes.textField)}\\r\\n          InputProps={{\\r\\n            startAdornment: <InputAdornment position=\\\"start\\\">Kg</InputAdornment>,\\r\\n          }}\\r\\n          variant=\\\"outlined\\\"\\r\\n        />\\r\\n        <FormControl className={clsx(classes.margin, classes.textField)} variant=\\\"outlined\\\">\\r\\n          <OutlinedInput\\r\\n            id=\\\"outlined-adornment-weight\\\"\\r\\n            value={values.weight}\\r\\n            onChange={handleChange('weight')}\\r\\n            endAdornment={<InputAdornment position=\\\"end\\\">Kg</InputAdornment>}\\r\\n            aria-describedby=\\\"outlined-weight-helper-text\\\"\\r\\n            inputProps={{\\r\\n              'aria-label': 'weight',\\r\\n            }}\\r\\n            labelWidth={0}\\r\\n          />\\r\\n          <FormHelperText id=\\\"outlined-weight-helper-text\\\">Weight</FormHelperText>\\r\\n        </FormControl>\\r\\n        <FormControl className={clsx(classes.margin, classes.textField)} variant=\\\"outlined\\\">\\r\\n          <InputLabel htmlFor=\\\"outlined-adornment-password\\\">Password</InputLabel>\\r\\n          <OutlinedInput\\r\\n            id=\\\"outlined-adornment-password\\\"\\r\\n            type={values.showPassword ? 'text' : 'password'}\\r\\n            value={values.password}\\r\\n            onChange={handleChange('password')}\\r\\n            endAdornment={\\r\\n              <InputAdornment position=\\\"end\\\">\\r\\n                <IconButton\\r\\n                  aria-label=\\\"toggle password visibility\\\"\\r\\n                  onClick={handleClickShowPassword}\\r\\n                  onMouseDown={handleMouseDownPassword}\\r\\n                  edge=\\\"end\\\">\\r\\n                  {values.showPassword ? <Visibility /> : <VisibilityOff />}\\r\\n                </IconButton>\\r\\n              </InputAdornment>\\r\\n            }\\r\\n            labelWidth={70}\\r\\n          />\\r\\n        </FormControl>\\r\\n        <FormControl fullWidth className={classes.margin} variant=\\\"outlined\\\">\\r\\n          <InputLabel htmlFor=\\\"outlined-adornment-amount\\\">Amount</InputLabel>\\r\\n          <OutlinedInput\\r\\n            id=\\\"outlined-adornment-amount\\\"\\r\\n            value={values.amount}\\r\\n            onChange={handleChange('amount')}\\r\\n            startAdornment={<InputAdornment position=\\\"start\\\">$</InputAdornment>}\\r\\n            labelWidth={60}\\r\\n          />\\r\\n        </FormControl>\\r\\n      </div>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport { makeStyles } from '@material-ui/core/styles';\\r\\nimport Input from '@material-ui/core/Input';\\r\\nimport InputLabel from '@material-ui/core/InputLabel';\\r\\nimport InputAdornment from '@material-ui/core/InputAdornment';\\r\\nimport FormControl from '@material-ui/core/FormControl';\\r\\nimport TextField from '@material-ui/core/TextField';\\r\\nimport Grid from '@material-ui/core/Grid';\\r\\nimport AccountCircle from '@material-ui/icons/AccountCircle';\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  margin: {\\r\\n    margin: theme.spacing(1),\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function InputWithIcon() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <FormControl className={classes.margin}>\\r\\n        <InputLabel htmlFor=\\\"input-with-icon-adornment\\\">With a start adornment</InputLabel>\\r\\n        <Input\\r\\n          id=\\\"input-with-icon-adornment\\\"\\r\\n          startAdornment={\\r\\n            <InputAdornment position=\\\"start\\\">\\r\\n              <AccountCircle />\\r\\n            </InputAdornment>\\r\\n          }\\r\\n        />\\r\\n      </FormControl>\\r\\n      <TextField\\r\\n        className={classes.margin}\\r\\n        id=\\\"input-with-icon-textfield\\\"\\r\\n        label=\\\"TextField\\\"\\r\\n        InputProps={{\\r\\n          startAdornment: (\\r\\n            <InputAdornment position=\\\"start\\\">\\r\\n              <AccountCircle />\\r\\n            </InputAdornment>\\r\\n          ),\\r\\n        }}\\r\\n      />\\r\\n      <div className={classes.margin}>\\r\\n        <Grid container spacing={1} alignItems=\\\"flex-end\\\">\\r\\n          <Grid item>\\r\\n            <AccountCircle />\\r\\n          </Grid>\\r\\n          <Grid item>\\r\\n            <TextField id=\\\"input-with-icon-grid\\\" label=\\\"With a grid\\\" />\\r\\n          </Grid>\\r\\n        </Grid>\\r\\n      </div>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport { makeStyles } from '@material-ui/core/styles';\\r\\nimport Input from '@material-ui/core/Input';\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  root: {\\r\\n    '& > *': {\\r\\n      margin: theme.spacing(1),\\r\\n    },\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function Inputs() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  return (\\r\\n    <form className={classes.root} noValidate autoComplete=\\\"off\\\">\\r\\n      <Input defaultValue=\\\"Hello world\\\" inputProps={{ 'aria-label': 'description' }} />\\r\\n      <Input placeholder=\\\"Placeholder\\\" inputProps={{ 'aria-label': 'description' }} />\\r\\n      <Input defaultValue=\\\"Disabled\\\" disabled inputProps={{ 'aria-label': 'description' }} />\\r\\n      <Input defaultValue=\\\"Error\\\" error inputProps={{ 'aria-label': 'description' }} />\\r\\n    </form>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport { makeStyles } from '@material-ui/core/styles';\\r\\nimport TextField from '@material-ui/core/TextField';\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  root: {\\r\\n    display: 'flex',\\r\\n    flexWrap: 'wrap',\\r\\n  },\\r\\n  textField: {\\r\\n    marginLeft: theme.spacing(1),\\r\\n    marginRight: theme.spacing(1),\\r\\n    width: '25ch',\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function LayoutTextFields() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <div>\\r\\n        <TextField\\r\\n          id=\\\"standard-full-width\\\"\\r\\n          label=\\\"Label\\\"\\r\\n          style={{ margin: 8 }}\\r\\n          placeholder=\\\"Placeholder\\\"\\r\\n          helperText=\\\"Full width!\\\"\\r\\n          fullWidth\\r\\n          margin=\\\"normal\\\"\\r\\n          InputLabelProps={{\\r\\n            shrink: true,\\r\\n          }}\\r\\n        />\\r\\n        <TextField\\r\\n          label=\\\"None\\\"\\r\\n          id=\\\"margin-none\\\"\\r\\n          defaultValue=\\\"Default Value\\\"\\r\\n          className={classes.textField}\\r\\n          helperText=\\\"Some important text\\\"\\r\\n        />\\r\\n        <TextField\\r\\n          label=\\\"Dense\\\"\\r\\n          id=\\\"margin-dense\\\"\\r\\n          defaultValue=\\\"Default Value\\\"\\r\\n          className={classes.textField}\\r\\n          helperText=\\\"Some important text\\\"\\r\\n          margin=\\\"dense\\\"\\r\\n        />\\r\\n        <TextField\\r\\n          label=\\\"Normal\\\"\\r\\n          id=\\\"margin-normal\\\"\\r\\n          defaultValue=\\\"Default Value\\\"\\r\\n          className={classes.textField}\\r\\n          helperText=\\\"Some important text\\\"\\r\\n          margin=\\\"normal\\\"\\r\\n        />\\r\\n      </div>\\r\\n      <div>\\r\\n        <TextField\\r\\n          id=\\\"filled-full-width\\\"\\r\\n          label=\\\"Label\\\"\\r\\n          style={{ margin: 8 }}\\r\\n          placeholder=\\\"Placeholder\\\"\\r\\n          helperText=\\\"Full width!\\\"\\r\\n          fullWidth\\r\\n          margin=\\\"normal\\\"\\r\\n          InputLabelProps={{\\r\\n            shrink: true,\\r\\n          }}\\r\\n          variant=\\\"filled\\\"\\r\\n        />\\r\\n        <TextField\\r\\n          label=\\\"None\\\"\\r\\n          id=\\\"filled-margin-none\\\"\\r\\n          defaultValue=\\\"Default Value\\\"\\r\\n          className={classes.textField}\\r\\n          helperText=\\\"Some important text\\\"\\r\\n          variant=\\\"filled\\\"\\r\\n        />\\r\\n        <TextField\\r\\n          label=\\\"Dense\\\"\\r\\n          id=\\\"filled-margin-dense\\\"\\r\\n          defaultValue=\\\"Default Value\\\"\\r\\n          className={classes.textField}\\r\\n          helperText=\\\"Some important text\\\"\\r\\n          margin=\\\"dense\\\"\\r\\n          variant=\\\"filled\\\"\\r\\n        />\\r\\n        <TextField\\r\\n          label=\\\"Normal\\\"\\r\\n          id=\\\"filled-margin-normal\\\"\\r\\n          defaultValue=\\\"Default Value\\\"\\r\\n          className={classes.textField}\\r\\n          helperText=\\\"Some important text\\\"\\r\\n          margin=\\\"normal\\\"\\r\\n          variant=\\\"filled\\\"\\r\\n        />\\r\\n      </div>\\r\\n      <div>\\r\\n        <TextField\\r\\n          id=\\\"outlined-full-width\\\"\\r\\n          label=\\\"Label\\\"\\r\\n          style={{ margin: 8 }}\\r\\n          placeholder=\\\"Placeholder\\\"\\r\\n          helperText=\\\"Full width!\\\"\\r\\n          fullWidth\\r\\n          margin=\\\"normal\\\"\\r\\n          InputLabelProps={{\\r\\n            shrink: true,\\r\\n          }}\\r\\n          variant=\\\"outlined\\\"\\r\\n        />\\r\\n        <TextField\\r\\n          label=\\\"None\\\"\\r\\n          id=\\\"outlined-margin-none\\\"\\r\\n          defaultValue=\\\"Default Value\\\"\\r\\n          className={classes.textField}\\r\\n          helperText=\\\"Some important text\\\"\\r\\n          variant=\\\"outlined\\\"\\r\\n        />\\r\\n        <TextField\\r\\n          label=\\\"Dense\\\"\\r\\n          id=\\\"outlined-margin-dense\\\"\\r\\n          defaultValue=\\\"Default Value\\\"\\r\\n          className={classes.textField}\\r\\n          helperText=\\\"Some important text\\\"\\r\\n          margin=\\\"dense\\\"\\r\\n          variant=\\\"outlined\\\"\\r\\n        />\\r\\n        <TextField\\r\\n          label=\\\"Normal\\\"\\r\\n          id=\\\"outlined-margin-normal\\\"\\r\\n          defaultValue=\\\"Default Value\\\"\\r\\n          className={classes.textField}\\r\\n          helperText=\\\"Some important text\\\"\\r\\n          margin=\\\"normal\\\"\\r\\n          variant=\\\"outlined\\\"\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport { makeStyles } from '@material-ui/core/styles';\\r\\nimport TextField from '@material-ui/core/TextField';\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  root: {\\r\\n    '& .MuiTextField-root': {\\r\\n      margin: theme.spacing(1),\\r\\n      width: '25ch',\\r\\n    },\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function MultilineTextFields() {\\r\\n  const classes = useStyles();\\r\\n  const [value, setValue] = React.useState('Controlled');\\r\\n\\r\\n  const handleChange = event => {\\r\\n    setValue(event.target.value);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <form className={classes.root} noValidate autoComplete=\\\"off\\\">\\r\\n      <div>\\r\\n        <TextField\\r\\n          id=\\\"standard-multiline-flexible\\\"\\r\\n          label=\\\"Multiline\\\"\\r\\n          multiline\\r\\n          maxRows={4}\\r\\n          value={value}\\r\\n          onChange={handleChange}\\r\\n        />\\r\\n        <TextField id=\\\"standard-textarea\\\" label=\\\"Multiline Placeholder\\\" placeholder=\\\"Placeholder\\\" multiline />\\r\\n        <TextField id=\\\"standard-multiline-static\\\" label=\\\"Multiline\\\" multiline rows={4} defaultValue=\\\"Default Value\\\" />\\r\\n      </div>\\r\\n      <div>\\r\\n        <TextField\\r\\n          id=\\\"filled-multiline-flexible\\\"\\r\\n          label=\\\"Multiline\\\"\\r\\n          multiline\\r\\n          maxRows={4}\\r\\n          value={value}\\r\\n          onChange={handleChange}\\r\\n          variant=\\\"filled\\\"\\r\\n        />\\r\\n        <TextField id=\\\"filled-textarea\\\" label=\\\"Multiline Placeholder\\\" placeholder=\\\"Placeholder\\\" multiline variant=\\\"filled\\\" />\\r\\n        <TextField\\r\\n          id=\\\"filled-multiline-static\\\"\\r\\n          label=\\\"Multiline\\\"\\r\\n          multiline\\r\\n          rows={4}\\r\\n          defaultValue=\\\"Default Value\\\"\\r\\n          variant=\\\"filled\\\"\\r\\n        />\\r\\n      </div>\\r\\n      <div>\\r\\n        <TextField\\r\\n          id=\\\"outlined-multiline-flexible\\\"\\r\\n          label=\\\"Multiline\\\"\\r\\n          multiline\\r\\n          maxRows={4}\\r\\n          value={value}\\r\\n          onChange={handleChange}\\r\\n          variant=\\\"outlined\\\"\\r\\n        />\\r\\n        <TextField\\r\\n          id=\\\"outlined-textarea\\\"\\r\\n          label=\\\"Multiline Placeholder\\\"\\r\\n          placeholder=\\\"Placeholder\\\"\\r\\n          multiline\\r\\n          variant=\\\"outlined\\\"\\r\\n        />\\r\\n        <TextField\\r\\n          id=\\\"outlined-multiline-static\\\"\\r\\n          label=\\\"Multiline\\\"\\r\\n          multiline\\r\\n          rows={4}\\r\\n          defaultValue=\\\"Default Value\\\"\\r\\n          variant=\\\"outlined\\\"\\r\\n        />\\r\\n      </div>\\r\\n    </form>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport { makeStyles } from '@material-ui/core/styles';\\r\\nimport TextField from '@material-ui/core/TextField';\\r\\nimport MenuItem from '@material-ui/core/MenuItem';\\r\\n\\r\\nconst currencies = [\\r\\n  {\\r\\n    value: 'USD',\\r\\n    label: '$',\\r\\n  },\\r\\n  {\\r\\n    value: 'EUR',\\r\\n    label: '€',\\r\\n  },\\r\\n  {\\r\\n    value: 'BTC',\\r\\n    label: '฿',\\r\\n  },\\r\\n  {\\r\\n    value: 'JPY',\\r\\n    label: '¥',\\r\\n  },\\r\\n];\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  root: {\\r\\n    '& .MuiTextField-root': {\\r\\n      margin: theme.spacing(1),\\r\\n      width: '25ch',\\r\\n    },\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function MultilineTextFields() {\\r\\n  const classes = useStyles();\\r\\n  const [currency, setCurrency] = React.useState('EUR');\\r\\n\\r\\n  const handleChange = event => {\\r\\n    setCurrency(event.target.value);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <form className={classes.root} noValidate autoComplete=\\\"off\\\">\\r\\n      <div>\\r\\n        <TextField\\r\\n          id=\\\"standard-select-currency\\\"\\r\\n          select\\r\\n          label=\\\"Select\\\"\\r\\n          value={currency}\\r\\n          onChange={handleChange}\\r\\n          helperText=\\\"Please select your currency\\\">\\r\\n          {currencies.map(option => (\\r\\n            <MenuItem key={option.value} value={option.value}>\\r\\n              {option.label}\\r\\n            </MenuItem>\\r\\n          ))}\\r\\n        </TextField>\\r\\n        <TextField\\r\\n          id=\\\"standard-select-currency-native\\\"\\r\\n          select\\r\\n          label=\\\"Native select\\\"\\r\\n          value={currency}\\r\\n          onChange={handleChange}\\r\\n          SelectProps={{\\r\\n            native: true,\\r\\n          }}\\r\\n          helperText=\\\"Please select your currency\\\">\\r\\n          {currencies.map(option => (\\r\\n            <option key={option.value} value={option.value}>\\r\\n              {option.label}\\r\\n            </option>\\r\\n          ))}\\r\\n        </TextField>\\r\\n      </div>\\r\\n      <div>\\r\\n        <TextField\\r\\n          id=\\\"filled-select-currency\\\"\\r\\n          select\\r\\n          label=\\\"Select\\\"\\r\\n          value={currency}\\r\\n          onChange={handleChange}\\r\\n          helperText=\\\"Please select your currency\\\"\\r\\n          variant=\\\"filled\\\">\\r\\n          {currencies.map(option => (\\r\\n            <MenuItem key={option.value} value={option.value}>\\r\\n              {option.label}\\r\\n            </MenuItem>\\r\\n          ))}\\r\\n        </TextField>\\r\\n        <TextField\\r\\n          id=\\\"filled-select-currency-native\\\"\\r\\n          select\\r\\n          label=\\\"Native select\\\"\\r\\n          value={currency}\\r\\n          onChange={handleChange}\\r\\n          SelectProps={{\\r\\n            native: true,\\r\\n          }}\\r\\n          helperText=\\\"Please select your currency\\\"\\r\\n          variant=\\\"filled\\\">\\r\\n          {currencies.map(option => (\\r\\n            <option key={option.value} value={option.value}>\\r\\n              {option.label}\\r\\n            </option>\\r\\n          ))}\\r\\n        </TextField>\\r\\n      </div>\\r\\n      <div>\\r\\n        <TextField\\r\\n          id=\\\"outlined-select-currency\\\"\\r\\n          select\\r\\n          label=\\\"Select\\\"\\r\\n          value={currency}\\r\\n          onChange={handleChange}\\r\\n          helperText=\\\"Please select your currency\\\"\\r\\n          variant=\\\"outlined\\\">\\r\\n          {currencies.map(option => (\\r\\n            <MenuItem key={option.value} value={option.value}>\\r\\n              {option.label}\\r\\n            </MenuItem>\\r\\n          ))}\\r\\n        </TextField>\\r\\n        <TextField\\r\\n          id=\\\"outlined-select-currency-native\\\"\\r\\n          select\\r\\n          label=\\\"Native select\\\"\\r\\n          value={currency}\\r\\n          onChange={handleChange}\\r\\n          SelectProps={{\\r\\n            native: true,\\r\\n          }}\\r\\n          helperText=\\\"Please select your currency\\\"\\r\\n          variant=\\\"outlined\\\">\\r\\n          {currencies.map(option => (\\r\\n            <option key={option.value} value={option.value}>\\r\\n              {option.label}\\r\\n            </option>\\r\\n          ))}\\r\\n        </TextField>\\r\\n      </div>\\r\\n    </form>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport TextField from '@material-ui/core/TextField';\\r\\nimport { makeStyles } from '@material-ui/core/styles';\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  root: {\\r\\n    '& .MuiTextField-root': {\\r\\n      margin: theme.spacing(1),\\r\\n      width: '25ch',\\r\\n    },\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function StateTextFields() {\\r\\n  const classes = useStyles();\\r\\n  const [name, setName] = React.useState('Cat in the Hat');\\r\\n  const handleChange = event => {\\r\\n    setName(event.target.value);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <form className={classes.root} noValidate autoComplete=\\\"off\\\">\\r\\n      <div>\\r\\n        <TextField id=\\\"standard-name\\\" label=\\\"Name\\\" value={name} onChange={handleChange} />\\r\\n        <TextField id=\\\"standard-uncontrolled\\\" label=\\\"Uncontrolled\\\" defaultValue=\\\"foo\\\" />\\r\\n      </div>\\r\\n      <div>\\r\\n        <TextField id=\\\"filled-name\\\" label=\\\"Name\\\" value={name} onChange={handleChange} variant=\\\"filled\\\" />\\r\\n        <TextField id=\\\"filled-uncontrolled\\\" label=\\\"Uncontrolled\\\" defaultValue=\\\"foo\\\" variant=\\\"filled\\\" />\\r\\n      </div>\\r\\n      <div>\\r\\n        <TextField id=\\\"outlined-name\\\" label=\\\"Name\\\" value={name} onChange={handleChange} variant=\\\"outlined\\\" />\\r\\n        <TextField id=\\\"outlined-uncontrolled\\\" label=\\\"Uncontrolled\\\" defaultValue=\\\"foo\\\" variant=\\\"outlined\\\" />\\r\\n      </div>\\r\\n    </form>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport { makeStyles } from '@material-ui/core/styles';\\r\\nimport TextField from '@material-ui/core/TextField';\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  root: {\\r\\n    '& .MuiTextField-root': {\\r\\n      margin: theme.spacing(1),\\r\\n      width: 200,\\r\\n    },\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function TextFieldSizes() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  return (\\r\\n    <form className={classes.root} noValidate autoComplete=\\\"off\\\">\\r\\n      <div>\\r\\n        <TextField label=\\\"Size\\\" id=\\\"standard-size-small\\\" defaultValue=\\\"Small\\\" size=\\\"small\\\" />\\r\\n        <TextField label=\\\"Size\\\" id=\\\"standard-size-normal\\\" defaultValue=\\\"Normal\\\" />\\r\\n      </div>\\r\\n      <div>\\r\\n        <TextField label=\\\"Size\\\" id=\\\"filled-size-small\\\" defaultValue=\\\"Small\\\" variant=\\\"filled\\\" size=\\\"small\\\" />\\r\\n        <TextField label=\\\"Size\\\" id=\\\"filled-size-normal\\\" defaultValue=\\\"Normal\\\" variant=\\\"filled\\\" />\\r\\n      </div>\\r\\n      <div>\\r\\n        <TextField label=\\\"Size\\\" id=\\\"outlined-size-small\\\" defaultValue=\\\"Small\\\" variant=\\\"outlined\\\" size=\\\"small\\\" />\\r\\n        <TextField label=\\\"Size\\\" id=\\\"outlined-size-normal\\\" defaultValue=\\\"Normal\\\" variant=\\\"outlined\\\" />\\r\\n      </div>\\r\\n    </form>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport TextField from '@material-ui/core/TextField';\\r\\nimport { makeStyles } from '@material-ui/core/styles';\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  root: {\\r\\n    '& .MuiTextField-root': {\\r\\n      margin: theme.spacing(1),\\r\\n      width: 200,\\r\\n    },\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function ValidationTextFields() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  return (\\r\\n    <form className={classes.root} noValidate autoComplete=\\\"off\\\">\\r\\n      <div>\\r\\n        <TextField error id=\\\"standard-error\\\" label=\\\"Error\\\" defaultValue=\\\"Hello World\\\" />\\r\\n        <TextField\\r\\n          error\\r\\n          id=\\\"standard-error-helper-text\\\"\\r\\n          label=\\\"Error\\\"\\r\\n          defaultValue=\\\"Hello World\\\"\\r\\n          helperText=\\\"Incorrect entry.\\\"\\r\\n        />\\r\\n      </div>\\r\\n      <div>\\r\\n        <TextField error id=\\\"filled-error\\\" label=\\\"Error\\\" defaultValue=\\\"Hello World\\\" variant=\\\"filled\\\" />\\r\\n        <TextField\\r\\n          error\\r\\n          id=\\\"filled-error-helper-text\\\"\\r\\n          label=\\\"Error\\\"\\r\\n          defaultValue=\\\"Hello World\\\"\\r\\n          helperText=\\\"Incorrect entry.\\\"\\r\\n          variant=\\\"filled\\\"\\r\\n        />\\r\\n      </div>\\r\\n      <div>\\r\\n        <TextField error id=\\\"outlined-error\\\" label=\\\"Error\\\" defaultValue=\\\"Hello World\\\" variant=\\\"outlined\\\" />\\r\\n        <TextField\\r\\n          error\\r\\n          id=\\\"outlined-error-helper-text\\\"\\r\\n          label=\\\"Error\\\"\\r\\n          defaultValue=\\\"Hello World\\\"\\r\\n          helperText=\\\"Incorrect entry.\\\"\\r\\n          variant=\\\"outlined\\\"\\r\\n        />\\r\\n      </div>\\r\\n    </form>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function BasicTextFields() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n      <TextField id=\"standard-basic\" label=\"Standard\" />\r\n      <TextField id=\"filled-basic\" label=\"Filled\" variant=\"filled\" />\r\n      <TextField id=\"outlined-basic\" label=\"Outlined\" variant=\"outlined\" />\r\n    </form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function FormPropsTextFields() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n      <div>\r\n        <TextField required id=\"standard-required\" label=\"Required\" defaultValue=\"Hello World\" />\r\n        <TextField disabled id=\"standard-disabled\" label=\"Disabled\" defaultValue=\"Hello World\" />\r\n        <TextField id=\"standard-password-input\" label=\"Password\" type=\"password\" autoComplete=\"current-password\" />\r\n        <TextField\r\n          id=\"standard-read-only-input\"\r\n          label=\"Read Only\"\r\n          defaultValue=\"Hello World\"\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n        />\r\n        <TextField\r\n          id=\"standard-number\"\r\n          label=\"Number\"\r\n          type=\"number\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        />\r\n        <TextField id=\"standard-search\" label=\"Search field\" type=\"search\" />\r\n        <TextField\r\n          id=\"standard-helperText\"\r\n          label=\"Helper text\"\r\n          defaultValue=\"Default Value\"\r\n          helperText=\"Some important text\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <TextField required id=\"filled-required\" label=\"Required\" defaultValue=\"Hello World\" variant=\"filled\" />\r\n        <TextField disabled id=\"filled-disabled\" label=\"Disabled\" defaultValue=\"Hello World\" variant=\"filled\" />\r\n        <TextField\r\n          id=\"filled-password-input\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n          variant=\"filled\"\r\n        />\r\n        <TextField\r\n          id=\"filled-read-only-input\"\r\n          label=\"Read Only\"\r\n          defaultValue=\"Hello World\"\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n          variant=\"filled\"\r\n        />\r\n        <TextField\r\n          id=\"filled-number\"\r\n          label=\"Number\"\r\n          type=\"number\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          variant=\"filled\"\r\n        />\r\n        <TextField id=\"filled-search\" label=\"Search field\" type=\"search\" variant=\"filled\" />\r\n        <TextField\r\n          id=\"filled-helperText\"\r\n          label=\"Helper text\"\r\n          defaultValue=\"Default Value\"\r\n          helperText=\"Some important text\"\r\n          variant=\"filled\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <TextField required id=\"outlined-required\" label=\"Required\" defaultValue=\"Hello World\" variant=\"outlined\" />\r\n        <TextField disabled id=\"outlined-disabled\" label=\"Disabled\" defaultValue=\"Hello World\" variant=\"outlined\" />\r\n        <TextField\r\n          id=\"outlined-password-input\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n          variant=\"outlined\"\r\n        />\r\n        <TextField\r\n          id=\"outlined-read-only-input\"\r\n          label=\"Read Only\"\r\n          defaultValue=\"Hello World\"\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n          variant=\"outlined\"\r\n        />\r\n        <TextField\r\n          id=\"outlined-number\"\r\n          label=\"Number\"\r\n          type=\"number\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          variant=\"outlined\"\r\n        />\r\n        <TextField id=\"outlined-search\" label=\"Search field\" type=\"search\" variant=\"outlined\" />\r\n        <TextField\r\n          id=\"outlined-helperText\"\r\n          label=\"Helper text\"\r\n          defaultValue=\"Default Value\"\r\n          helperText=\"Some important text\"\r\n          variant=\"outlined\"\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: 200,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function ValidationTextFields() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n      <div>\r\n        <TextField error id=\"standard-error\" label=\"Error\" defaultValue=\"Hello World\" />\r\n        <TextField\r\n          error\r\n          id=\"standard-error-helper-text\"\r\n          label=\"Error\"\r\n          defaultValue=\"Hello World\"\r\n          helperText=\"Incorrect entry.\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <TextField error id=\"filled-error\" label=\"Error\" defaultValue=\"Hello World\" variant=\"filled\" />\r\n        <TextField\r\n          error\r\n          id=\"filled-error-helper-text\"\r\n          label=\"Error\"\r\n          defaultValue=\"Hello World\"\r\n          helperText=\"Incorrect entry.\"\r\n          variant=\"filled\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <TextField error id=\"outlined-error\" label=\"Error\" defaultValue=\"Hello World\" variant=\"outlined\" />\r\n        <TextField\r\n          error\r\n          id=\"outlined-error-helper-text\"\r\n          label=\"Error\"\r\n          defaultValue=\"Hello World\"\r\n          helperText=\"Incorrect entry.\"\r\n          variant=\"outlined\"\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function MultilineTextFields() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState('Controlled');\r\n\r\n  const handleChange = event => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n      <div>\r\n        <TextField\r\n          id=\"standard-multiline-flexible\"\r\n          label=\"Multiline\"\r\n          multiline\r\n          maxRows={4}\r\n          value={value}\r\n          onChange={handleChange}\r\n        />\r\n        <TextField id=\"standard-textarea\" label=\"Multiline Placeholder\" placeholder=\"Placeholder\" multiline />\r\n        <TextField id=\"standard-multiline-static\" label=\"Multiline\" multiline rows={4} defaultValue=\"Default Value\" />\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          id=\"filled-multiline-flexible\"\r\n          label=\"Multiline\"\r\n          multiline\r\n          maxRows={4}\r\n          value={value}\r\n          onChange={handleChange}\r\n          variant=\"filled\"\r\n        />\r\n        <TextField id=\"filled-textarea\" label=\"Multiline Placeholder\" placeholder=\"Placeholder\" multiline variant=\"filled\" />\r\n        <TextField\r\n          id=\"filled-multiline-static\"\r\n          label=\"Multiline\"\r\n          multiline\r\n          rows={4}\r\n          defaultValue=\"Default Value\"\r\n          variant=\"filled\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          id=\"outlined-multiline-flexible\"\r\n          label=\"Multiline\"\r\n          multiline\r\n          maxRows={4}\r\n          value={value}\r\n          onChange={handleChange}\r\n          variant=\"outlined\"\r\n        />\r\n        <TextField\r\n          id=\"outlined-textarea\"\r\n          label=\"Multiline Placeholder\"\r\n          placeholder=\"Placeholder\"\r\n          multiline\r\n          variant=\"outlined\"\r\n        />\r\n        <TextField\r\n          id=\"outlined-multiline-static\"\r\n          label=\"Multiline\"\r\n          multiline\r\n          rows={4}\r\n          defaultValue=\"Default Value\"\r\n          variant=\"outlined\"\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport GridContainer from '../../../../../@jumbo/components/GridContainer';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function InputWithIcon() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <FormControl className={classes.margin}>\r\n        <InputLabel htmlFor=\"input-with-icon-adornment\">With a start adornment</InputLabel>\r\n        <Input\r\n          id=\"input-with-icon-adornment\"\r\n          startAdornment={\r\n            <InputAdornment position=\"start\">\r\n              <AccountCircle />\r\n            </InputAdornment>\r\n          }\r\n        />\r\n      </FormControl>\r\n      <TextField\r\n        className={classes.margin}\r\n        id=\"input-with-icon-textfield\"\r\n        label=\"TextField\"\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <AccountCircle />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n      <div className={classes.margin}>\r\n        <GridContainer spacing={1} alignItems=\"flex-end\">\r\n          <Grid item>\r\n            <AccountCircle />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField id=\"input-with-icon-grid\" label=\"With a grid\" />\r\n          </Grid>\r\n        </GridContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport FilledInput from '@material-ui/core/FilledInput';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  textField: {\r\n    width: '25ch',\r\n  },\r\n}));\r\n\r\nexport default function InputAdornments() {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    amount: '',\r\n    password: '',\r\n    weight: '',\r\n    weightRange: '',\r\n    showPassword: false,\r\n  });\r\n\r\n  const handleChange = prop => event => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({\r\n      ...values,\r\n      showPassword: !values.showPassword,\r\n    });\r\n  };\r\n\r\n  const handleMouseDownPassword = event => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <TextField\r\n          label=\"With normal TextField\"\r\n          id=\"standard-start-adornment\"\r\n          className={clsx(classes.margin, classes.textField)}\r\n          InputProps={{\r\n            startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\r\n          }}\r\n        />\r\n        <FormControl className={clsx(classes.margin, classes.withoutLabel, classes.textField)}>\r\n          <Input\r\n            id=\"standard-adornment-weight\"\r\n            value={values.weight}\r\n            onChange={handleChange('weight')}\r\n            endAdornment={<InputAdornment position=\"end\">Kg</InputAdornment>}\r\n            aria-describedby=\"standard-weight-helper-text\"\r\n            inputProps={{\r\n              'aria-label': 'weight',\r\n            }}\r\n          />\r\n          <FormHelperText id=\"standard-weight-helper-text\">Weight</FormHelperText>\r\n        </FormControl>\r\n        <FormControl className={clsx(classes.margin, classes.textField)}>\r\n          <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>\r\n          <Input\r\n            id=\"standard-adornment-password\"\r\n            type={values.showPassword ? 'text' : 'password'}\r\n            value={values.password}\r\n            onChange={handleChange('password')}\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowPassword}\r\n                  onMouseDown={handleMouseDownPassword}>\r\n                  {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n        </FormControl>\r\n        <FormControl fullWidth className={classes.margin}>\r\n          <InputLabel htmlFor=\"standard-adornment-amount\">Amount</InputLabel>\r\n          <Input\r\n            id=\"standard-adornment-amount\"\r\n            value={values.amount}\r\n            onChange={handleChange('amount')}\r\n            startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\r\n          />\r\n        </FormControl>\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          label=\"With normal TextField\"\r\n          id=\"filled-start-adornment\"\r\n          className={clsx(classes.margin, classes.textField)}\r\n          InputProps={{\r\n            startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\r\n          }}\r\n          variant=\"filled\"\r\n        />\r\n        <FormControl className={clsx(classes.margin, classes.textField)} variant=\"filled\">\r\n          <FilledInput\r\n            id=\"filled-adornment-weight\"\r\n            value={values.weight}\r\n            onChange={handleChange('weight')}\r\n            endAdornment={<InputAdornment position=\"end\">Kg</InputAdornment>}\r\n            aria-describedby=\"filled-weight-helper-text\"\r\n            inputProps={{\r\n              'aria-label': 'weight',\r\n            }}\r\n          />\r\n          <FormHelperText id=\"filled-weight-helper-text\">Weight</FormHelperText>\r\n        </FormControl>\r\n        <FormControl className={clsx(classes.margin, classes.textField)} variant=\"filled\">\r\n          <InputLabel htmlFor=\"filled-adornment-password\">Password</InputLabel>\r\n          <FilledInput\r\n            id=\"filled-adornment-password\"\r\n            type={values.showPassword ? 'text' : 'password'}\r\n            value={values.password}\r\n            onChange={handleChange('password')}\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                  edge=\"end\">\r\n                  {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n        </FormControl>\r\n        <FormControl fullWidth className={classes.margin} variant=\"filled\">\r\n          <InputLabel htmlFor=\"filled-adornment-amount\">Amount</InputLabel>\r\n          <FilledInput\r\n            id=\"filled-adornment-amount\"\r\n            value={values.amount}\r\n            onChange={handleChange('amount')}\r\n            startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\r\n          />\r\n        </FormControl>\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          label=\"With normal TextField\"\r\n          id=\"outlined-start-adornment\"\r\n          className={clsx(classes.margin, classes.textField)}\r\n          InputProps={{\r\n            startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\r\n          }}\r\n          variant=\"outlined\"\r\n        />\r\n        <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\">\r\n          <OutlinedInput\r\n            id=\"outlined-adornment-weight\"\r\n            value={values.weight}\r\n            onChange={handleChange('weight')}\r\n            endAdornment={<InputAdornment position=\"end\">Kg</InputAdornment>}\r\n            aria-describedby=\"outlined-weight-helper-text\"\r\n            inputProps={{\r\n              'aria-label': 'weight',\r\n            }}\r\n            labelWidth={0}\r\n          />\r\n          <FormHelperText id=\"outlined-weight-helper-text\">Weight</FormHelperText>\r\n        </FormControl>\r\n        <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\">\r\n          <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\r\n          <OutlinedInput\r\n            id=\"outlined-adornment-password\"\r\n            type={values.showPassword ? 'text' : 'password'}\r\n            value={values.password}\r\n            onChange={handleChange('password')}\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                  edge=\"end\">\r\n                  {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n            labelWidth={70}\r\n          />\r\n        </FormControl>\r\n        <FormControl fullWidth className={classes.margin} variant=\"outlined\">\r\n          <InputLabel htmlFor=\"outlined-adornment-amount\">Amount</InputLabel>\r\n          <OutlinedInput\r\n            id=\"outlined-adornment-amount\"\r\n            value={values.amount}\r\n            onChange={handleChange('amount')}\r\n            startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\r\n            labelWidth={60}\r\n          />\r\n        </FormControl>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: 200,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function TextFieldSizes() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n      <div>\r\n        <TextField label=\"Size\" id=\"standard-size-small\" defaultValue=\"Small\" size=\"small\" />\r\n        <TextField label=\"Size\" id=\"standard-size-normal\" defaultValue=\"Normal\" />\r\n      </div>\r\n      <div>\r\n        <TextField label=\"Size\" id=\"filled-size-small\" defaultValue=\"Small\" variant=\"filled\" size=\"small\" />\r\n        <TextField label=\"Size\" id=\"filled-size-normal\" defaultValue=\"Normal\" variant=\"filled\" />\r\n      </div>\r\n      <div>\r\n        <TextField label=\"Size\" id=\"outlined-size-small\" defaultValue=\"Small\" variant=\"outlined\" size=\"small\" />\r\n        <TextField label=\"Size\" id=\"outlined-size-normal\" defaultValue=\"Normal\" variant=\"outlined\" />\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: '25ch',\r\n  },\r\n}));\r\n\r\nexport default function LayoutTextFields() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <TextField\r\n          id=\"standard-full-width\"\r\n          label=\"Label\"\r\n          style={{ margin: 8 }}\r\n          placeholder=\"Placeholder\"\r\n          helperText=\"Full width!\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        />\r\n        <TextField\r\n          label=\"None\"\r\n          id=\"margin-none\"\r\n          defaultValue=\"Default Value\"\r\n          className={classes.textField}\r\n          helperText=\"Some important text\"\r\n        />\r\n        <TextField\r\n          label=\"Dense\"\r\n          id=\"margin-dense\"\r\n          defaultValue=\"Default Value\"\r\n          className={classes.textField}\r\n          helperText=\"Some important text\"\r\n          margin=\"dense\"\r\n        />\r\n        <TextField\r\n          label=\"Normal\"\r\n          id=\"margin-normal\"\r\n          defaultValue=\"Default Value\"\r\n          className={classes.textField}\r\n          helperText=\"Some important text\"\r\n          margin=\"normal\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          id=\"filled-full-width\"\r\n          label=\"Label\"\r\n          style={{ margin: 8 }}\r\n          placeholder=\"Placeholder\"\r\n          helperText=\"Full width!\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          variant=\"filled\"\r\n        />\r\n        <TextField\r\n          label=\"None\"\r\n          id=\"filled-margin-none\"\r\n          defaultValue=\"Default Value\"\r\n          className={classes.textField}\r\n          helperText=\"Some important text\"\r\n          variant=\"filled\"\r\n        />\r\n        <TextField\r\n          label=\"Dense\"\r\n          id=\"filled-margin-dense\"\r\n          defaultValue=\"Default Value\"\r\n          className={classes.textField}\r\n          helperText=\"Some important text\"\r\n          margin=\"dense\"\r\n          variant=\"filled\"\r\n        />\r\n        <TextField\r\n          label=\"Normal\"\r\n          id=\"filled-margin-normal\"\r\n          defaultValue=\"Default Value\"\r\n          className={classes.textField}\r\n          helperText=\"Some important text\"\r\n          margin=\"normal\"\r\n          variant=\"filled\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          id=\"outlined-full-width\"\r\n          label=\"Label\"\r\n          style={{ margin: 8 }}\r\n          placeholder=\"Placeholder\"\r\n          helperText=\"Full width!\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          variant=\"outlined\"\r\n        />\r\n        <TextField\r\n          label=\"None\"\r\n          id=\"outlined-margin-none\"\r\n          defaultValue=\"Default Value\"\r\n          className={classes.textField}\r\n          helperText=\"Some important text\"\r\n          variant=\"outlined\"\r\n        />\r\n        <TextField\r\n          label=\"Dense\"\r\n          id=\"outlined-margin-dense\"\r\n          defaultValue=\"Default Value\"\r\n          className={classes.textField}\r\n          helperText=\"Some important text\"\r\n          margin=\"dense\"\r\n          variant=\"outlined\"\r\n        />\r\n        <TextField\r\n          label=\"Normal\"\r\n          id=\"outlined-margin-normal\"\r\n          defaultValue=\"Default Value\"\r\n          className={classes.textField}\r\n          helperText=\"Some important text\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function StateTextFields() {\r\n  const classes = useStyles();\r\n  const [name, setName] = React.useState('Cat in the Hat');\r\n  const handleChange = event => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n      <div>\r\n        <TextField id=\"standard-name\" label=\"Name\" value={name} onChange={handleChange} />\r\n        <TextField id=\"standard-uncontrolled\" label=\"Uncontrolled\" defaultValue=\"foo\" />\r\n      </div>\r\n      <div>\r\n        <TextField id=\"filled-name\" label=\"Name\" value={name} onChange={handleChange} variant=\"filled\" />\r\n        <TextField id=\"filled-uncontrolled\" label=\"Uncontrolled\" defaultValue=\"foo\" variant=\"filled\" />\r\n      </div>\r\n      <div>\r\n        <TextField id=\"outlined-name\" label=\"Name\" value={name} onChange={handleChange} variant=\"outlined\" />\r\n        <TextField id=\"outlined-uncontrolled\" label=\"Uncontrolled\" defaultValue=\"foo\" variant=\"outlined\" />\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FilledInput from '@material-ui/core/FilledInput';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function ComposedTextField() {\r\n  const [name, setName] = React.useState('Composed TextField');\r\n  const classes = useStyles();\r\n\r\n  const handleChange = event => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n      <FormControl>\r\n        <InputLabel htmlFor=\"component-simple\">Name</InputLabel>\r\n        <Input id=\"component-simple\" value={name} onChange={handleChange} />\r\n      </FormControl>\r\n      <FormControl>\r\n        <InputLabel htmlFor=\"component-helper\">Name</InputLabel>\r\n        <Input id=\"component-helper\" value={name} onChange={handleChange} aria-describedby=\"component-helper-text\" />\r\n        <FormHelperText id=\"component-helper-text\">Some important helper text</FormHelperText>\r\n      </FormControl>\r\n      <FormControl disabled>\r\n        <InputLabel htmlFor=\"component-disabled\">Name</InputLabel>\r\n        <Input id=\"component-disabled\" value={name} onChange={handleChange} />\r\n        <FormHelperText>Disabled</FormHelperText>\r\n      </FormControl>\r\n      <FormControl error>\r\n        <InputLabel htmlFor=\"component-error\">Name</InputLabel>\r\n        <Input id=\"component-error\" value={name} onChange={handleChange} aria-describedby=\"component-error-text\" />\r\n        <FormHelperText id=\"component-error-text\">Error</FormHelperText>\r\n      </FormControl>\r\n      <FormControl variant=\"outlined\">\r\n        <InputLabel htmlFor=\"component-outlined\">Name</InputLabel>\r\n        <OutlinedInput id=\"component-outlined\" value={name} onChange={handleChange} label=\"Name\" />\r\n      </FormControl>\r\n      <FormControl variant=\"filled\">\r\n        <InputLabel htmlFor=\"component-filled\">Name</InputLabel>\r\n        <FilledInput id=\"component-filled\" value={name} onChange={handleChange} />\r\n      </FormControl>\r\n    </form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Inputs() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n      <Input defaultValue=\"Hello world\" inputProps={{ 'aria-label': 'description' }} />\r\n      <Input placeholder=\"Placeholder\" inputProps={{ 'aria-label': 'description' }} />\r\n      <Input defaultValue=\"Disabled\" disabled inputProps={{ 'aria-label': 'description' }} />\r\n      <Input defaultValue=\"Error\" error inputProps={{ 'aria-label': 'description' }} />\r\n    </form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function ColorTextFields() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n      <TextField id=\"standard-secondary\" label=\"Standard secondary\" color=\"secondary\" />\r\n      <TextField id=\"filled-secondary\" label=\"Filled secondary\" variant=\"filled\" color=\"secondary\" />\r\n      <TextField id=\"outlined-secondary\" label=\"Outlined secondary\" variant=\"outlined\" color=\"secondary\" />\r\n    </form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { alpha, ThemeProvider, withStyles, makeStyles, createTheme } from '@material-ui/core/styles';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    '& label.Mui-focused': {\r\n      color: 'green',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: 'green',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n      '& fieldset': {\r\n        borderColor: 'red',\r\n      },\r\n      '&:hover fieldset': {\r\n        borderColor: 'yellow',\r\n      },\r\n      '&.Mui-focused fieldset': {\r\n        borderColor: 'green',\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nconst BootstrapInput = withStyles(theme => ({\r\n  root: {\r\n    'label + &': {\r\n      marginTop: theme.spacing(6),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '1px solid #ced4da',\r\n    fontSize: 16,\r\n    width: 'auto',\r\n    padding: '10px 12px',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:focus': {\r\n      boxShadow: `${alpha(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst useStylesReddit = makeStyles(theme => ({\r\n  root: {\r\n    border: `1px solid ${theme.palette.borderColor.main}`,\r\n    overflow: 'hidden',\r\n    borderRadius: 4,\r\n    backgroundColor: theme.palette.background.paper,\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    '&$focused': {\r\n      backgroundColor: theme.palette.background.paper,\r\n      boxShadow: `${alpha(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n  focused: {},\r\n}));\r\n\r\nfunction RedditTextField(props) {\r\n  const classes = useStylesReddit();\r\n\r\n  return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst ValidationTextField = withStyles({\r\n  root: {\r\n    '& input:valid + fieldset': {\r\n      borderColor: 'green',\r\n      borderWidth: 2,\r\n    },\r\n    '& input:invalid + fieldset': {\r\n      borderColor: 'red',\r\n      borderWidth: 2,\r\n    },\r\n    '& input:valid:focus + fieldset': {\r\n      borderLeftWidth: 6,\r\n      padding: '4px !important', // override inline-style\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: green,\r\n  },\r\n});\r\n\r\nexport default function CustomizedInputs() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form className={classes.root} noValidate>\r\n      <CssTextField className={classes.margin} id=\"custom-css-standard-input\" label=\"Custom CSS\" />\r\n      <CssTextField className={classes.margin} label=\"Custom CSS\" variant=\"outlined\" id=\"custom-css-outlined-input\" />\r\n      <ThemeProvider theme={theme}>\r\n        <TextField className={classes.margin} label=\"ThemeProvider\" id=\"mui-theme-provider-standard-input\" />\r\n        <TextField\r\n          className={classes.margin}\r\n          label=\"ThemeProvider\"\r\n          variant=\"outlined\"\r\n          id=\"mui-theme-provider-outlined-input\"\r\n        />\r\n      </ThemeProvider>\r\n      <FormControl className={classes.margin}>\r\n        <InputLabel shrink htmlFor=\"bootstrap-input\">\r\n          Bootstrap\r\n        </InputLabel>\r\n        <BootstrapInput defaultValue=\"react-bootstrap\" id=\"bootstrap-input\" />\r\n      </FormControl>\r\n      <RedditTextField\r\n        label=\"Reddit\"\r\n        className={classes.margin}\r\n        defaultValue=\"react-reddit\"\r\n        variant=\"filled\"\r\n        id=\"reddit-input\"\r\n      />\r\n      <InputBase className={classes.margin} defaultValue=\"Naked input\" inputProps={{ 'aria-label': 'naked' }} />\r\n      <ValidationTextField\r\n        className={classes.margin}\r\n        label=\"CSS validation style\"\r\n        required\r\n        variant=\"outlined\"\r\n        defaultValue=\"Success\"\r\n        id=\"validation-outlined-input\"\r\n      />\r\n    </form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    backgroundColor: theme.palette.background.default,\r\n    width: 400,\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n}));\r\n\r\nexport default function CustomizedInputBase() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper component=\"form\" className={classes.root}>\r\n      <IconButton className={classes.iconButton} aria-label=\"menu\">\r\n        <MenuIcon />\r\n      </IconButton>\r\n      <InputBase\r\n        className={classes.input}\r\n        placeholder=\"Search Google Maps\"\r\n        inputProps={{ 'aria-label': 'search google maps' }}\r\n      />\r\n      <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n        <SearchIcon />\r\n      </IconButton>\r\n      <Divider className={classes.divider} orientation=\"vertical\" />\r\n      <IconButton color=\"primary\" className={classes.iconButton} aria-label=\"directions\">\r\n        <DirectionsIcon />\r\n      </IconButton>\r\n    </Paper>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MaskedInput from 'react-text-mask';\r\nimport NumberFormat from 'react-number-format';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction TextMaskCustom(props) {\r\n  const { inputRef, ...other } = props;\r\n\r\n  return (\r\n    <MaskedInput\r\n      {...other}\r\n      ref={ref => {\r\n        inputRef(ref ? ref.inputElement : null);\r\n      }}\r\n      mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\r\n      placeholderChar={'\\u2000'}\r\n      showMask\r\n    />\r\n  );\r\n}\r\n\r\nTextMaskCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction NumberFormatCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={values => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      thousandSeparator\r\n      isNumericString\r\n      prefix=\"$\"\r\n    />\r\n  );\r\n}\r\n\r\nNumberFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function FormattedInputs() {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    textmask: '(1  )    -    ',\r\n    numberformat: '1320',\r\n  });\r\n\r\n  const handleChange = event => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormControl>\r\n        <InputLabel htmlFor=\"formatted-text-mask-input\">react-text-mask</InputLabel>\r\n        <Input\r\n          value={values.textmask}\r\n          onChange={handleChange}\r\n          name=\"textmask\"\r\n          id=\"formatted-text-mask-input\"\r\n          inputComponent={TextMaskCustom}\r\n        />\r\n      </FormControl>\r\n      <TextField\r\n        label=\"react-number-format\"\r\n        value={values.numberformat}\r\n        onChange={handleChange}\r\n        name=\"numberformat\"\r\n        id=\"formatted-numberformat-input\"\r\n        InputProps={{\r\n          inputComponent: NumberFormatCustom,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst currencies = [\r\n  {\r\n    value: 'USD',\r\n    label: '$',\r\n  },\r\n  {\r\n    value: 'EUR',\r\n    label: '€',\r\n  },\r\n  {\r\n    value: 'BTC',\r\n    label: '฿',\r\n  },\r\n  {\r\n    value: 'JPY',\r\n    label: '¥',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function MultilineTextFields() {\r\n  const classes = useStyles();\r\n  const [currency, setCurrency] = React.useState('EUR');\r\n\r\n  const handleChange = event => {\r\n    setCurrency(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n      <div>\r\n        <TextField\r\n          id=\"standard-select-currency\"\r\n          select\r\n          label=\"Select\"\r\n          value={currency}\r\n          onChange={handleChange}\r\n          helperText=\"Please select your currency\">\r\n          {currencies.map(option => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          id=\"standard-select-currency-native\"\r\n          select\r\n          label=\"Native select\"\r\n          value={currency}\r\n          onChange={handleChange}\r\n          SelectProps={{\r\n            native: true,\r\n          }}\r\n          helperText=\"Please select your currency\">\r\n          {currencies.map(option => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.label}\r\n            </option>\r\n          ))}\r\n        </TextField>\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          id=\"filled-select-currency\"\r\n          select\r\n          label=\"Select\"\r\n          value={currency}\r\n          onChange={handleChange}\r\n          helperText=\"Please select your currency\"\r\n          variant=\"filled\">\r\n          {currencies.map(option => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          id=\"filled-select-currency-native\"\r\n          select\r\n          label=\"Native select\"\r\n          value={currency}\r\n          onChange={handleChange}\r\n          SelectProps={{\r\n            native: true,\r\n          }}\r\n          helperText=\"Please select your currency\"\r\n          variant=\"filled\">\r\n          {currencies.map(option => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.label}\r\n            </option>\r\n          ))}\r\n        </TextField>\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          id=\"outlined-select-currency\"\r\n          select\r\n          label=\"Select\"\r\n          value={currency}\r\n          onChange={handleChange}\r\n          helperText=\"Please select your currency\"\r\n          variant=\"outlined\">\r\n          {currencies.map(option => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          id=\"outlined-select-currency-native\"\r\n          select\r\n          label=\"Native select\"\r\n          value={currency}\r\n          onChange={handleChange}\r\n          SelectProps={{\r\n            native: true,\r\n          }}\r\n          helperText=\"Please select your currency\"\r\n          variant=\"outlined\">\r\n          {currencies.map(option => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.label}\r\n            </option>\r\n          ))}\r\n        </TextField>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { MuiComponentDemo } from '../../../../@jumbo/components/PageComponents';\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CodeViewerCard from '../../../../@jumbo/components/Common/CodeViewerCard';\r\nimport BasicTextFields from './demos/BasicTextFields';\r\nimport FormPropsTextFields from './demos/FormPropsTextFields';\r\nimport ValidationTextFields from './demos/ValidationTextFields';\r\nimport MultilineTextFields from './demos/MultilineTextFields';\r\nimport InputWithIcon from './demos/InputWithIcon';\r\nimport InputAdornments from './demos/InputAdornments';\r\nimport TextFieldSizes from './demos/TextFieldSizes';\r\nimport LayoutTextFields from './demos/LayoutTextFields';\r\nimport StateTextFields from './demos/StateTextFields';\r\nimport ComposedTextField from './demos/ComposedTextField';\r\nimport Inputs from './demos/Inputs';\r\nimport ColorTextFields from './demos/ColorTextFields';\r\nimport CustomizedInputs from './demos/CustomizedInputs';\r\nimport CustomizedInputBase from './demos/CustomizedInputBase';\r\nimport FormattedInputs from './demos/FormattedInputs';\r\nimport SelectTextFields from './demos/SelectTextFields';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  section: {\r\n    '&:not(:last-child)': {\r\n      marginBottom: theme.typography.pxToRem(32),\r\n    },\r\n  },\r\n  sectionHeading: {\r\n    marginBottom: theme.typography.pxToRem(16),\r\n  },\r\n}));\r\n\r\nconst requireRaw = require.context(\r\n  '!raw-loader!../../../../@fake-db/mui-components/text-fields',\r\n  false,\r\n  /\\.(txt|js|md|tsx)$/,\r\n);\r\n\r\nconst demos = [\r\n  {\r\n    label: 'Basic TextFields',\r\n    link: 'basic-text-fields',\r\n    component: <BasicTextFields />,\r\n    filename: './BasicTextFields.txt',\r\n  },\r\n  {\r\n    label: 'Form props',\r\n    link: 'form-props',\r\n    component: <FormPropsTextFields />,\r\n    filename: './FormPropsTextFields.txt',\r\n  },\r\n  {\r\n    label: 'Validation',\r\n    link: 'validation',\r\n    component: <ValidationTextFields />,\r\n    filename: './ValidationTextFields.txt',\r\n  },\r\n  {\r\n    label: 'Multiline',\r\n    link: 'multiline',\r\n    component: <MultilineTextFields />,\r\n    filename: './MultilineTextFields.txt',\r\n  },\r\n  {\r\n    label: 'Select',\r\n    link: 'select',\r\n    component: <SelectTextFields />,\r\n    filename: './SelectTextFields.txt',\r\n  },\r\n  {\r\n    label: 'Icons',\r\n    link: 'icons',\r\n    component: <InputWithIcon />,\r\n    filename: './InputWithIcon.txt',\r\n  },\r\n  {\r\n    label: 'Input Adornments',\r\n    link: 'input-adornments',\r\n    component: <InputAdornments />,\r\n    filename: './InputWithIcon.txt',\r\n  },\r\n  {\r\n    label: 'Sizes',\r\n    link: 'sizes',\r\n    component: <TextFieldSizes />,\r\n    filename: './TextFieldSizes.txt',\r\n  },\r\n  {\r\n    label: 'Layout',\r\n    link: 'Layout',\r\n    component: <LayoutTextFields />,\r\n    filename: './LayoutTextFields.txt',\r\n  },\r\n  {\r\n    label: 'Uncontrolled vs Controlled',\r\n    link: 'uncontrolled-vs-controlled',\r\n    component: <StateTextFields />,\r\n    filename: './StateTextFields.txt',\r\n  },\r\n  {\r\n    label: 'Components',\r\n    link: 'components',\r\n    component: <ComposedTextField />,\r\n    filename: './ComposedTextField.txt',\r\n  },\r\n  {\r\n    label: 'Inputs',\r\n    link: 'inputs',\r\n    component: <Inputs />,\r\n    filename: './Inputs.txt',\r\n  },\r\n  {\r\n    label: 'Color',\r\n    link: 'color',\r\n    component: <ColorTextFields />,\r\n    filename: './ColorTextFields.txt',\r\n  },\r\n  {\r\n    label: 'Customized inputs',\r\n    link: 'customized-inputs',\r\n    component: <CustomizedInputs />,\r\n    filename: './CustomizedInputs.txt',\r\n  },\r\n  {\r\n    label: 'Customized input base',\r\n    link: 'customized-input-base',\r\n    component: <CustomizedInputBase />,\r\n    filename: './CustomizedInputBase.txt',\r\n  },\r\n  {\r\n    label: 'Integration with 3rd party input libraries',\r\n    link: 'integration-with-3rd-party-input-libraries',\r\n    component: <FormattedInputs />,\r\n    filename: './FormattedInputs.txt',\r\n  },\r\n];\r\n\r\nexport default function TextFields() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <MuiComponentDemo pageTitle=\"Text Fields\" menus={demos}>\r\n      {demos.map((menu, index) => (\r\n        <Box key={index} id={menu.link} className={classes.section}>\r\n          <Typography component=\"h3\" variant=\"inherit\" className={classes.sectionHeading}>\r\n            {menu.label}\r\n          </Typography>\r\n          <CodeViewerCard code={requireRaw(menu.filename).default} language=\"jsx\">\r\n            {menu.component}\r\n          </CodeViewerCard>\r\n        </Box>\r\n      ))}\r\n    </MuiComponentDemo>\r\n  );\r\n}\r\n"],"sourceRoot":""}