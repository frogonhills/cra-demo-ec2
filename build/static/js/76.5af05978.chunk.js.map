{"version":3,"sources":["@jumbo/components/PageComponents/layouts/PageContainer.js","@jumbo/components/PageComponents/PageHeader.js","@jumbo/components/PageComponents/PageBreadcrumbs/index.js","@jumbo/components/PageComponents/layouts/CorematComponentDemo.js","@jumbo/components/PageComponents/layouts/MuiComponentDemo.js","@jumbo/components/PageComponents/layouts/ComponentsDemo.js","webpack:///./src/@fake-db/extensions/sweet-alert sync nonrecursive ./node_modules/raw-loader/dist/cjs.js \\.(txt|js|md|tsx)$?c863","@fake-db/extensions/sweet-alert/AdvancedAlert.txt","@fake-db/extensions/sweet-alert/AlertsType.txt","@fake-db/extensions/sweet-alert/AutoCloseAlert.txt","@fake-db/extensions/sweet-alert/BasicAlerts.txt","@fake-db/extensions/sweet-alert/CustomHtmlMessage.txt","@fake-db/extensions/sweet-alert/CustomPosition.txt","@fake-db/extensions/sweet-alert/ErrorAlert.txt","@fake-db/extensions/sweet-alert/ImageWithMessage.txt","@fake-db/extensions/sweet-alert/SuccessAlert.txt","@fake-db/extensions/sweet-alert/TitleWithText.txt","@fake-db/extensions/sweet-alert/ToastAlerts.txt","routes/Extensions/SweetAlerts/demo/BasicAlerts.js","routes/Extensions/SweetAlerts/demo/ToastAlerts.js","routes/Extensions/SweetAlerts/demo/AlertsType.js","routes/Extensions/SweetAlerts/demo/TitleWithText.js","routes/Extensions/SweetAlerts/demo/SuccessAlert.js","routes/Extensions/SweetAlerts/demo/ErrorAlert.js","routes/Extensions/SweetAlerts/demo/ImageWithMessage.js","routes/Extensions/SweetAlerts/demo/CustomHtmlMessage.js","routes/Extensions/SweetAlerts/demo/CustomPosition.js","routes/Extensions/SweetAlerts/demo/AutoCloseAlert.js","routes/Extensions/SweetAlerts/demo/AdvancedAlert.js","routes/Extensions/SweetAlerts/index.js"],"names":["useStyles","makeStyles","pageFull","width","PageContainer","heading","breadcrumbs","children","className","restProps","classes","in","direction","mountOnEnter","unmountOnExit","clsx","breadcrumbComponent","items","theme","pageHeaderRoot","display","flexDirection","breakpoints","up","alignItems","titleRoot","down","marginBottom","PageHeader","rest","Box","mb","xs","md","lg","Typography","component","variant","ml","sm","textSm","fontSize","linkBlock","color","PageBreadcrumbs","Breadcrumbs","aria-label","map","item","index","isActive","key","label","to","link","CorematComponentDemo","SourceCodeComponent","SettingsComponent","GridContainer","Grid","CmtCard","MuiComponentDemo","pageTitle","menus","ComponentsDemo","root","flexWrap","contentArea","paddingRight","typography","pxToRem","contentSidebar","height","position","top","overflowY","flexShrink","xsDown","menu","dense","button","href","primary","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","MySwal","withReactContent","Swal","BasicAlerts","Button","onClick","fire","spacing","marginRight","ToastAlerts","sweetAlerts","mixin","toast","showConfirmButton","timer","timerProgressBar","onOpen","addEventListener","stopTimer","resumeTimer","icon","title","AlertsType","text","TitleWithText","SuccessAlert","ErrorAlert","footer","ImageWithMessage","imageUrl","imageWidth","imageHeight","imageAlt","CustomHtmlMessage","html","showCloseButton","showCancelButton","focusConfirm","confirmButtonText","confirmButtonAriaLabel","cancelButtonText","cancelButtonAriaLabel","CustomPosition","AutoCloseAlert","timerInterval","onBeforeOpen","showLoading","setInterval","content","getContent","b","querySelector","textContent","getTimerLeft","onClose","clearInterval","then","result","dismiss","DismissReason","console","log","AdvancedAlert","reverseButtons","value","cancel","section","sectionHeading","requireRaw","require","demos","filename","SweetAlerts","CodeViewerCard","default","language"],"mappings":"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","file":"static/js/76.5af05978.chunk.js","sourcesContent":["import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { PageBreadcrumbs, PageHeader } from '../index';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  pageFull: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst PageContainer = ({ heading, breadcrumbs, children, className, restProps }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Slide in={true} direction=\"up\" mountOnEnter unmountOnExit>\r\n      <Box className={clsx(classes.pageFull, className)} {...restProps}>\r\n        {(heading || breadcrumbs) && (\r\n          <PageHeader heading={heading} breadcrumbComponent={breadcrumbs && <PageBreadcrumbs items={breadcrumbs} />} />\r\n        )}\r\n        {children}\r\n      </Box>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default PageContainer;\r\n","import React from 'react';\r\nimport { Box, makeStyles, Typography } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageHeaderRoot: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.up('sm')]: {\r\n      alignItems: 'center',\r\n      flexDirection: 'row',\r\n    },\r\n  },\r\n  titleRoot: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginBottom: 10,\r\n    },\r\n  },\r\n}));\r\n\r\nconst PageHeader = ({ heading, breadcrumbComponent, children, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={clsx(classes.pageHeaderRoot, 'page-header')} mb={{ xs: 5, md: 6, lg: 8 }} {...rest}>\r\n      <Typography component=\"div\" variant=\"h1\" className={clsx(classes.titleRoot, 'title')}>\r\n        {heading}\r\n      </Typography>\r\n      <Box ml={{ sm: 'auto' }}>{breadcrumbComponent}</Box>\r\n\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import React from 'react';\r\nimport { Breadcrumbs, makeStyles } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { NavLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  textSm: {\r\n    fontSize: 12,\r\n  },\r\n  linkBlock: {\r\n    display: 'block',\r\n    color: 'inherit',\r\n  },\r\n}));\r\n\r\nconst PageBreadcrumbs = ({ items, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Breadcrumbs className=\"bread-crumbs\" aria-label=\"breadcrumb {...rest}\">\r\n      {items.map((item, index) =>\r\n        item.isActive ? (\r\n          <Typography key={index} className={classes.textSm} color=\"textPrimary\">\r\n            {item.label}\r\n          </Typography>\r\n        ) : (\r\n          <NavLink key={index} className={clsx(classes.textSm, classes.linkBlock)} color=\"inherit\" to={item.link || '/'}>\r\n            {item.label}\r\n          </NavLink>\r\n        ),\r\n      )}\r\n    </Breadcrumbs>\r\n  );\r\n};\r\n\r\nexport default PageBreadcrumbs;\r\n","import React from 'react';\r\nimport { Box, Grid } from '@material-ui/core';\r\nimport CmtCard from '../../../../@coremat/CmtCard';\r\nimport { PageHeader } from '../index';\r\nimport GridContainer from '../../GridContainer';\r\nimport PageContainer from './PageContainer';\r\n\r\nconst CorematComponentDemo = ({ SourceCodeComponent, SettingsComponent, children }) => {\r\n  return (\r\n    <PageContainer>\r\n      <GridContainer>\r\n        <Grid item xs={12} md={7}>\r\n          <PageHeader heading=\"Preview\" />\r\n          <Box mb={8}>{children}</Box>\r\n          <CmtCard>{SourceCodeComponent}</CmtCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={5}>\r\n          {SettingsComponent}\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default CorematComponentDemo;\r\n","import React from 'react';\r\nimport ComponentsDemo from './ComponentsDemo';\r\n\r\nconst MuiComponentDemo = ({ pageTitle, menus, children }) => {\r\n  const breadcrumbs = [\r\n    { label: 'Home', link: '/' },\r\n    { label: 'Material UI Components', link: '/components/mui' },\r\n    { label: pageTitle, isActive: true },\r\n  ];\r\n  return (\r\n    <ComponentsDemo pageTitle={pageTitle} breadcrumbs={breadcrumbs} menus={menus}>\r\n      {children}\r\n    </ComponentsDemo>\r\n  );\r\n};\r\nexport default MuiComponentDemo;\r\n","import React from 'react';\r\nimport { Box, Hidden, List, ListItem, ListItemText, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PageContainer from './PageContainer';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  contentArea: {\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingRight: theme.typography.pxToRem(30),\r\n      width: `calc(100% - ${theme.typography.pxToRem(175)})`,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingRight: theme.typography.pxToRem(54),\r\n    },\r\n  },\r\n  contentSidebar: {\r\n    width: theme.typography.pxToRem(175),\r\n    height: `calc(100vh - ${theme.typography.pxToRem(102)})`,\r\n    position: 'sticky',\r\n    top: 30,\r\n    overflowY: 'auto',\r\n    flexShrink: 0,\r\n  },\r\n}));\r\n\r\nconst ComponentsDemo = ({ pageTitle, menus, breadcrumbs, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <PageContainer heading={pageTitle} breadcrumbs={breadcrumbs}>\r\n      <Box className={classes.root}>\r\n        <Box className={classes.contentArea}>{children}</Box>\r\n        <Hidden xsDown>\r\n          <Box className={classes.contentSidebar}>\r\n            <Typography component=\"h4\" variant=\"h4\">\r\n              Contents\r\n            </Typography>\r\n            <List>\r\n              {menus.map((menu, index) => (\r\n                <ListItem key={index} dense button component=\"a\" href={`#${menu.link}`}>\r\n                  <ListItemText primary={menu.label} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Box>\r\n        </Hidden>\r\n      </Box>\r\n    </PageContainer>\r\n  );\r\n};\r\nexport default ComponentsDemo;\r\n","var map = {\n\t\"./AdvancedAlert.txt\": 3187,\n\t\"./AlertsType.txt\": 3188,\n\t\"./AutoCloseAlert.txt\": 3189,\n\t\"./BasicAlerts.txt\": 3190,\n\t\"./CustomHtmlMessage.txt\": 3191,\n\t\"./CustomPosition.txt\": 3192,\n\t\"./ErrorAlert.txt\": 3193,\n\t\"./ImageWithMessage.txt\": 3194,\n\t\"./SuccessAlert.txt\": 3195,\n\t\"./TitleWithText.txt\": 3196,\n\t\"./ToastAlerts.txt\": 3197\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 3186;","export default \"import React from 'react';\\r\\nimport Swal from 'sweetalert2';\\r\\nimport withReactContent from 'sweetalert2-react-content';\\r\\nimport { Button } from '@material-ui/core';\\r\\n\\r\\nconst MySwal = withReactContent(Swal);\\r\\n\\r\\nconst AdvancedAlert = () => {\\r\\n  const sweetAlerts = () => {\\r\\n    MySwal.fire({\\r\\n      title: 'Are you sure?',\\r\\n      text: \\\"You won't be able to revert this!\\\",\\r\\n      icon: 'warning',\\r\\n      showCancelButton: true,\\r\\n      confirmButtonText: 'Yes, delete it!',\\r\\n      cancelButtonText: 'No, cancel!',\\r\\n      reverseButtons: true,\\r\\n    }).then(result => {\\r\\n      if (result.value) {\\r\\n        MySwal.fire('Deleted!', 'Your file has been deleted.', 'success');\\r\\n      } else if (\\r\\n        /* Read more about handling dismissals below */\\r\\n        result.dismiss === Swal.DismissReason.cancel\\r\\n      ) {\\r\\n        MySwal.fire('Cancelled', 'Your imaginary file is safe :)', 'error');\\r\\n      }\\r\\n    });\\r\\n  };\\r\\n  return (\\r\\n    <Button variant=\\\"outlined\\\" color=\\\"primary\\\" onClick={sweetAlerts}>\\r\\n      Click me\\r\\n    </Button>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default AdvancedAlert;\\r\\n\";","export default \"import React from 'react';\\r\\nimport Swal from 'sweetalert2';\\r\\nimport withReactContent from 'sweetalert2-react-content';\\r\\nimport { Box, Button } from '@material-ui/core';\\r\\nimport { makeStyles } from '@material-ui/styles';\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  root: {\\r\\n    '& > *': {\\r\\n      marginBottom: theme.spacing(3),\\r\\n      '&:not(:last-child)': {\\r\\n        marginRight: theme.spacing(3),\\r\\n      },\\r\\n    },\\r\\n  },\\r\\n}));\\r\\n\\r\\nconst MySwal = withReactContent(Swal);\\r\\n\\r\\nconst AlertsType = () => {\\r\\n  const classes = useStyles();\\r\\n  const sweetAlerts = variant => {\\r\\n    MySwal.fire({\\r\\n      icon: variant,\\r\\n      title: variant,\\r\\n      text: 'You clicked the button!',\\r\\n    });\\r\\n  };\\r\\n  return (\\r\\n    <Box className={classes.root}>\\r\\n      <Button variant=\\\"outlined\\\" onClick={() => sweetAlerts('success')}>\\r\\n        Success\\r\\n      </Button>\\r\\n      <Button variant=\\\"outlined\\\" onClick={() => sweetAlerts('error')}>\\r\\n        Error\\r\\n      </Button>\\r\\n      <Button variant=\\\"outlined\\\" onClick={() => sweetAlerts('warning')}>\\r\\n        Warning\\r\\n      </Button>\\r\\n      <Button variant=\\\"outlined\\\" onClick={() => sweetAlerts('info')}>\\r\\n        Information\\r\\n      </Button>\\r\\n      <Button variant=\\\"outlined\\\" onClick={() => sweetAlerts('question')}>\\r\\n        Question\\r\\n      </Button>\\r\\n    </Box>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default AlertsType;\\r\\n\";","export default \"import React from 'react';\\r\\nimport Swal from 'sweetalert2';\\r\\nimport withReactContent from 'sweetalert2-react-content';\\r\\nimport { Button } from '@material-ui/core';\\r\\n\\r\\nconst MySwal = withReactContent(Swal);\\r\\n\\r\\nconst AutoCloseAlert = () => {\\r\\n  const sweetAlerts = () => {\\r\\n    let timerInterval;\\r\\n    MySwal.fire({\\r\\n      title: 'Auto close alert!',\\r\\n      html: 'I will close in <b></b> milliseconds.',\\r\\n      timer: 2000,\\r\\n      timerProgressBar: true,\\r\\n      onBeforeOpen: () => {\\r\\n        Swal.showLoading();\\r\\n        timerInterval = setInterval(() => {\\r\\n          const content = Swal.getContent();\\r\\n          if (content) {\\r\\n            const b = content.querySelector('b');\\r\\n            if (b) {\\r\\n              b.textContent = Swal.getTimerLeft();\\r\\n            }\\r\\n          }\\r\\n        }, 100);\\r\\n      },\\r\\n      onClose: () => {\\r\\n        clearInterval(timerInterval);\\r\\n      },\\r\\n    }).then(result => {\\r\\n      /* Read more about handling dismissals below */\\r\\n      if (result.dismiss === Swal.DismissReason.timer) {\\r\\n        console.log('I was closed by the timer');\\r\\n      }\\r\\n    });\\r\\n  };\\r\\n  return (\\r\\n    <Button variant=\\\"outlined\\\" color=\\\"primary\\\" onClick={sweetAlerts}>\\r\\n      Click me\\r\\n    </Button>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default AutoCloseAlert;\\r\\n\";","export default \"import React from 'react';\\r\\nimport Swal from 'sweetalert2';\\r\\nimport withReactContent from 'sweetalert2-react-content';\\r\\nimport { Button } from '@material-ui/core';\\r\\n\\r\\nconst MySwal = withReactContent(Swal);\\r\\n\\r\\nconst BasicAlerts = () => {\\r\\n  const sweetAlerts = () => {\\r\\n    MySwal.fire('You clicked the button!');\\r\\n  };\\r\\n  return (\\r\\n    <Button variant=\\\"outlined\\\" color=\\\"primary\\\" onClick={sweetAlerts}>\\r\\n      Click me\\r\\n    </Button>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default BasicAlerts;\\r\\n\";","export default \"import React from 'react';\\r\\nimport Swal from 'sweetalert2';\\r\\nimport withReactContent from 'sweetalert2-react-content';\\r\\nimport { Button } from '@material-ui/core';\\r\\n\\r\\nconst MySwal = withReactContent(Swal);\\r\\n\\r\\nconst CustomHtmlMessage = () => {\\r\\n  const sweetAlerts = () => {\\r\\n    MySwal.fire({\\r\\n      title: '<strong>HTML <u>example</u></strong>',\\r\\n      icon: 'info',\\r\\n      html: 'You can use <b>bold text</b>, ' + '<a href=\\\"//sweetalert2.github.io\\\">links</a> ' + 'and other HTML tags',\\r\\n      showCloseButton: true,\\r\\n      showCancelButton: true,\\r\\n      focusConfirm: false,\\r\\n      confirmButtonText: 'Great!',\\r\\n      confirmButtonAriaLabel: 'great!',\\r\\n      cancelButtonText: 'Cancel',\\r\\n      cancelButtonAriaLabel: 'cancel',\\r\\n    });\\r\\n  };\\r\\n  return (\\r\\n    <Button variant=\\\"outlined\\\" color=\\\"primary\\\" onClick={sweetAlerts}>\\r\\n      Click me\\r\\n    </Button>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default CustomHtmlMessage;\\r\\n\";","export default \"import React from 'react';\\r\\nimport Swal from 'sweetalert2';\\r\\nimport withReactContent from 'sweetalert2-react-content';\\r\\nimport { Button } from '@material-ui/core';\\r\\n\\r\\nconst MySwal = withReactContent(Swal);\\r\\n\\r\\nconst CustomPosition = () => {\\r\\n  const sweetAlerts = () => {\\r\\n    MySwal.fire({\\r\\n      position: 'top-end',\\r\\n      icon: 'success',\\r\\n      title: 'Your work has been saved',\\r\\n      timer: 1500,\\r\\n    });\\r\\n  };\\r\\n  return (\\r\\n    <Button variant=\\\"outlined\\\" color=\\\"primary\\\" onClick={sweetAlerts}>\\r\\n      Click me\\r\\n    </Button>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default CustomPosition;\\r\\n\";","export default \"import React from 'react';\\r\\nimport Swal from 'sweetalert2';\\r\\nimport withReactContent from 'sweetalert2-react-content';\\r\\nimport { Button } from '@material-ui/core';\\r\\n\\r\\nconst MySwal = withReactContent(Swal);\\r\\n\\r\\nconst ErrorAlert = () => {\\r\\n  const sweetAlerts = () => {\\r\\n    MySwal.fire({\\r\\n      icon: 'error',\\r\\n      title: 'Oops...',\\r\\n      text: 'Something went wrong!',\\r\\n      footer: '<a href>Why do I have this issue?</a>',\\r\\n    });\\r\\n  };\\r\\n  return (\\r\\n    <Button variant=\\\"outlined\\\" color=\\\"primary\\\" onClick={sweetAlerts}>\\r\\n      Click me\\r\\n    </Button>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default ErrorAlert;\\r\\n\";","export default \"import React from 'react';\\r\\nimport Swal from 'sweetalert2';\\r\\nimport withReactContent from 'sweetalert2-react-content';\\r\\nimport { Button } from '@material-ui/core';\\r\\n\\r\\nconst MySwal = withReactContent(Swal);\\r\\n\\r\\nconst ImageWithMessage = () => {\\r\\n  const sweetAlerts = () => {\\r\\n    MySwal.fire({\\r\\n      title: 'Sweet!',\\r\\n      text: 'Modal with a custom image.',\\r\\n      imageUrl: require('../../../../assets/images/dashboard/crypto2.jpg',\\r\\n      imageWidth: 600,\\r\\n      imageHeight: 400,\\r\\n      imageAlt: 'Custom image',\\r\\n    });\\r\\n  };\\r\\n  return (\\r\\n    <Button variant=\\\"outlined\\\" color=\\\"primary\\\" onClick={sweetAlerts}>\\r\\n      Click me\\r\\n    </Button>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default ImageWithMessage;\\r\\n\";","export default \"import React from 'react';\\r\\nimport Swal from 'sweetalert2';\\r\\nimport withReactContent from 'sweetalert2-react-content';\\r\\nimport { Button } from '@material-ui/core';\\r\\n\\r\\nconst MySwal = withReactContent(Swal);\\r\\n\\r\\nconst SuccessAlert = () => {\\r\\n  const sweetAlerts = () => {\\r\\n    MySwal.fire({\\r\\n      icon: 'success',\\r\\n      title: 'Success',\\r\\n      text: 'Contrary to popular belief, Lorem Ipsum is not simply random text.',\\r\\n    });\\r\\n  };\\r\\n  return (\\r\\n    <Button variant=\\\"outlined\\\" color=\\\"primary\\\" onClick={sweetAlerts}>\\r\\n      Click me\\r\\n    </Button>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default SuccessAlert;\\r\\n\";","export default \"import React from 'react';\\r\\nimport Swal from 'sweetalert2';\\r\\nimport withReactContent from 'sweetalert2-react-content';\\r\\nimport { Button } from '@material-ui/core';\\r\\n\\r\\nconst MySwal = withReactContent(Swal);\\r\\n\\r\\nconst TitleWithText = () => {\\r\\n  const sweetAlerts = () => {\\r\\n    MySwal.fire({\\r\\n      title: 'Good job!',\\r\\n      text: 'Contrary to popular belief, Lorem Ipsum is not simply random text.',\\r\\n    });\\r\\n  };\\r\\n  return (\\r\\n    <Button variant=\\\"outlined\\\" color=\\\"primary\\\" onClick={sweetAlerts}>\\r\\n      Click me\\r\\n    </Button>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default TitleWithText;\\r\\n\";","export default \"import React from 'react';\\r\\nimport Swal from 'sweetalert2';\\r\\nimport withReactContent from 'sweetalert2-react-content';\\r\\nimport { Box, Button } from '@material-ui/core';\\r\\nimport { makeStyles } from '@material-ui/styles';\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  root: {\\r\\n    '& > *': {\\r\\n      marginBottom: theme.spacing(3),\\r\\n      '&:not(:last-child)': {\\r\\n        marginRight: theme.spacing(3),\\r\\n      },\\r\\n    },\\r\\n  },\\r\\n}));\\r\\n\\r\\nconst MySwal = withReactContent(Swal);\\r\\n\\r\\nconst ToastAlerts = () => {\\r\\n  const classes = useStyles();\\r\\n  const sweetAlerts = variant => {\\r\\n    const Toast = MySwal.mixin({\\r\\n      toast: true,\\r\\n      position: 'top-end',\\r\\n      showConfirmButton: false,\\r\\n      timer: 3000,\\r\\n      timerProgressBar: true,\\r\\n      onOpen: toast => {\\r\\n        toast.addEventListener('mouseenter', Swal.stopTimer);\\r\\n        toast.addEventListener('mouseleave', Swal.resumeTimer);\\r\\n      },\\r\\n    });\\r\\n\\r\\n    Toast.fire({\\r\\n      icon: variant,\\r\\n      title: 'You clicked the button!',\\r\\n    });\\r\\n  };\\r\\n  return (\\r\\n    <Box className={classes.root}>\\r\\n      <Button variant=\\\"outlined\\\" onClick={() => sweetAlerts('success')}>\\r\\n        Success\\r\\n      </Button>\\r\\n      <Button variant=\\\"outlined\\\" onClick={() => sweetAlerts('error')}>\\r\\n        Error\\r\\n      </Button>\\r\\n      <Button variant=\\\"outlined\\\" onClick={() => sweetAlerts('warning')}>\\r\\n        Warning\\r\\n      </Button>\\r\\n      <Button variant=\\\"outlined\\\" onClick={() => sweetAlerts('info')}>\\r\\n        Information\\r\\n      </Button>\\r\\n      <Button variant=\\\"outlined\\\" onClick={() => sweetAlerts('question')}>\\r\\n        Question\\r\\n      </Button>\\r\\n    </Box>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default ToastAlerts;\\r\\n\";","import React from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst BasicAlerts = () => {\r\n  const sweetAlerts = () => {\r\n    MySwal.fire('You clicked the button!');\r\n  };\r\n  return (\r\n    <Button variant=\"outlined\" color=\"primary\" onClick={sweetAlerts}>\r\n      Click me\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default BasicAlerts;\r\n","import React from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { Box, Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& > *': {\r\n      marginBottom: theme.spacing(3),\r\n      '&:not(:last-child)': {\r\n        marginRight: theme.spacing(3),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst ToastAlerts = () => {\r\n  const classes = useStyles();\r\n  const sweetAlerts = variant => {\r\n    const Toast = MySwal.mixin({\r\n      toast: true,\r\n      position: 'top-end',\r\n      showConfirmButton: false,\r\n      timer: 3000,\r\n      timerProgressBar: true,\r\n      onOpen: toast => {\r\n        toast.addEventListener('mouseenter', Swal.stopTimer);\r\n        toast.addEventListener('mouseleave', Swal.resumeTimer);\r\n      },\r\n    });\r\n\r\n    Toast.fire({\r\n      icon: variant,\r\n      title: 'You clicked the button!',\r\n    });\r\n  };\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Button variant=\"outlined\" onClick={() => sweetAlerts('success')}>\r\n        Success\r\n      </Button>\r\n      <Button variant=\"outlined\" onClick={() => sweetAlerts('error')}>\r\n        Error\r\n      </Button>\r\n      <Button variant=\"outlined\" onClick={() => sweetAlerts('warning')}>\r\n        Warning\r\n      </Button>\r\n      <Button variant=\"outlined\" onClick={() => sweetAlerts('info')}>\r\n        Information\r\n      </Button>\r\n      <Button variant=\"outlined\" onClick={() => sweetAlerts('question')}>\r\n        Question\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ToastAlerts;\r\n","import React from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { Box, Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& > *': {\r\n      marginBottom: theme.spacing(3),\r\n      '&:not(:last-child)': {\r\n        marginRight: theme.spacing(3),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst AlertsType = () => {\r\n  const classes = useStyles();\r\n  const sweetAlerts = variant => {\r\n    MySwal.fire({\r\n      icon: variant,\r\n      title: variant,\r\n      text: 'You clicked the button!',\r\n    });\r\n  };\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Button variant=\"outlined\" onClick={() => sweetAlerts('success')}>\r\n        Success\r\n      </Button>\r\n      <Button variant=\"outlined\" onClick={() => sweetAlerts('error')}>\r\n        Error\r\n      </Button>\r\n      <Button variant=\"outlined\" onClick={() => sweetAlerts('warning')}>\r\n        Warning\r\n      </Button>\r\n      <Button variant=\"outlined\" onClick={() => sweetAlerts('info')}>\r\n        Information\r\n      </Button>\r\n      <Button variant=\"outlined\" onClick={() => sweetAlerts('question')}>\r\n        Question\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AlertsType;\r\n","import React from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst TitleWithText = () => {\r\n  const sweetAlerts = () => {\r\n    MySwal.fire({\r\n      title: 'Good job!',\r\n      text: 'Contrary to popular belief, Lorem Ipsum is not simply random text.',\r\n    });\r\n  };\r\n  return (\r\n    <Button variant=\"outlined\" color=\"primary\" onClick={sweetAlerts}>\r\n      Click me\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default TitleWithText;\r\n","import React from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst SuccessAlert = () => {\r\n  const sweetAlerts = () => {\r\n    MySwal.fire({\r\n      icon: 'success',\r\n      title: 'Success',\r\n      text: 'Contrary to popular belief, Lorem Ipsum is not simply random text.',\r\n    });\r\n  };\r\n  return (\r\n    <Button variant=\"outlined\" color=\"primary\" onClick={sweetAlerts}>\r\n      Click me\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default SuccessAlert;\r\n","import React from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst ErrorAlert = () => {\r\n  const sweetAlerts = () => {\r\n    MySwal.fire({\r\n      icon: 'error',\r\n      title: 'Oops...',\r\n      text: 'Something went wrong!',\r\n      footer: '<a href>Why do I have this issue?</a>',\r\n    });\r\n  };\r\n  return (\r\n    <Button variant=\"outlined\" color=\"primary\" onClick={sweetAlerts}>\r\n      Click me\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ErrorAlert;\r\n","import React from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst ImageWithMessage = () => {\r\n  const sweetAlerts = () => {\r\n    MySwal.fire({\r\n      title: 'Sweet!',\r\n      text: 'Modal with a custom image.',\r\n      imageUrl: '/images/dashboard/crypto/crypto2.jpg',\r\n      imageWidth: 600,\r\n      imageHeight: 400,\r\n      imageAlt: 'Custom image',\r\n    });\r\n  };\r\n  return (\r\n    <Button variant=\"outlined\" color=\"primary\" onClick={sweetAlerts}>\r\n      Click me\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ImageWithMessage;\r\n","import React from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst CustomHtmlMessage = () => {\r\n  const sweetAlerts = () => {\r\n    MySwal.fire({\r\n      title: '<strong>HTML <u>example</u></strong>',\r\n      icon: 'info',\r\n      html: 'You can use <b>bold text</b>, <a href=\"//sweetalert2.github.io\">links</a> and other HTML tags',\r\n      showCloseButton: true,\r\n      showCancelButton: true,\r\n      focusConfirm: false,\r\n      confirmButtonText: 'Great!',\r\n      confirmButtonAriaLabel: 'great!',\r\n      cancelButtonText: 'Cancel',\r\n      cancelButtonAriaLabel: 'cancel',\r\n    });\r\n  };\r\n  return (\r\n    <Button variant=\"outlined\" color=\"primary\" onClick={sweetAlerts}>\r\n      Click me\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default CustomHtmlMessage;\r\n","import React from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst CustomPosition = () => {\r\n  const sweetAlerts = () => {\r\n    MySwal.fire({\r\n      position: 'top-end',\r\n      icon: 'success',\r\n      title: 'Your work has been saved',\r\n      timer: 1500,\r\n    });\r\n  };\r\n  return (\r\n    <Button variant=\"outlined\" color=\"primary\" onClick={sweetAlerts}>\r\n      Click me\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default CustomPosition;\r\n","import React from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst AutoCloseAlert = () => {\r\n  const sweetAlerts = () => {\r\n    let timerInterval;\r\n    MySwal.fire({\r\n      title: 'Auto close alert!',\r\n      html: 'I will close in <b>&nbsp;</b> milliseconds.',\r\n      timer: 2000,\r\n      timerProgressBar: true,\r\n      onBeforeOpen: () => {\r\n        Swal.showLoading();\r\n        timerInterval = setInterval(() => {\r\n          const content = Swal.getContent();\r\n          if (content) {\r\n            const b = content.querySelector('b');\r\n            if (b) {\r\n              b.textContent = Swal.getTimerLeft();\r\n            }\r\n          }\r\n        }, 100);\r\n      },\r\n      onClose: () => {\r\n        clearInterval(timerInterval);\r\n      },\r\n    }).then(result => {\r\n      /* Read more about handling dismissals below */\r\n      if (result.dismiss === Swal.DismissReason.timer) {\r\n        console.log('I was closed by the timer');\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <Button variant=\"outlined\" color=\"primary\" onClick={sweetAlerts}>\r\n      Click me\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default AutoCloseAlert;\r\n","import React from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst AdvancedAlert = () => {\r\n  const sweetAlerts = () => {\r\n    MySwal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, delete it!',\r\n      cancelButtonText: 'No, cancel!',\r\n      reverseButtons: true,\r\n    }).then(result => {\r\n      if (result.value) {\r\n        MySwal.fire('Deleted!', 'Your file has been deleted.', 'success');\r\n      } else if (\r\n        /* Read more about handling dismissals below */\r\n        result.dismiss === Swal.DismissReason.cancel\r\n      ) {\r\n        MySwal.fire('Cancelled', 'Your imaginary file is safe :)', 'error');\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <Button variant=\"outlined\" color=\"primary\" onClick={sweetAlerts}>\r\n      Click me\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default AdvancedAlert;\r\n","import React from 'react';\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CodeViewerCard from '../../../@jumbo/components/Common/CodeViewerCard';\r\nimport BasicAlerts from './demo/BasicAlerts';\r\nimport ToastAlerts from './demo/ToastAlerts';\r\nimport AlertsType from './demo/AlertsType';\r\nimport TitleWithText from './demo/TitleWithText';\r\nimport SuccessAlert from './demo/SuccessAlert';\r\nimport ErrorAlert from './demo/ErrorAlert';\r\nimport ImageWithMessage from './demo/ImageWithMessage';\r\nimport CustomHtmlMessage from './demo/CustomHtmlMessage';\r\nimport CustomPosition from './demo/CustomPosition';\r\nimport AutoCloseAlert from './demo/AutoCloseAlert';\r\nimport AdvancedAlert from './demo/AdvancedAlert';\r\nimport ComponentsDemo from '../../../@jumbo/components/PageComponents/layouts/ComponentsDemo';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  section: {\r\n    '&:not(:last-child)': {\r\n      marginBottom: theme.typography.pxToRem(32),\r\n    },\r\n  },\r\n  sectionHeading: {\r\n    marginBottom: theme.typography.pxToRem(16),\r\n  },\r\n}));\r\n\r\nconst requireRaw = require.context('!raw-loader!../../../@fake-db/extensions/sweet-alert', false, /\\.(txt|js|md|tsx)$/);\r\n\r\nconst demos = [\r\n  {\r\n    label: 'Basic',\r\n    link: 'basic',\r\n    component: <BasicAlerts />,\r\n    filename: './BasicAlerts.txt',\r\n  },\r\n  {\r\n    label: 'Title with text',\r\n    link: 'title-with-text',\r\n    component: <TitleWithText />,\r\n    filename: './TitleWithText.txt',\r\n  },\r\n  {\r\n    label: 'Show success message',\r\n    link: 'show-success-message',\r\n    component: <SuccessAlert />,\r\n    filename: './SuccessAlert.txt',\r\n  },\r\n  {\r\n    label: 'Show error message and footer',\r\n    link: 'show-error-message-and-footer',\r\n    component: <ErrorAlert />,\r\n    filename: './ErrorAlert.txt',\r\n  },\r\n  {\r\n    label: 'Image with message',\r\n    link: 'image-with-message',\r\n    component: <ImageWithMessage />,\r\n    filename: './ImageWithMessage.txt',\r\n  },\r\n  {\r\n    label: 'Custom HTML message',\r\n    link: 'custom-html-message',\r\n    component: <CustomHtmlMessage />,\r\n    filename: './CustomHtmlMessage.txt',\r\n  },\r\n  {\r\n    label: 'Custom Position',\r\n    link: 'custom-position',\r\n    component: <CustomPosition />,\r\n    filename: './CustomPosition.txt',\r\n  },\r\n  {\r\n    label: 'Auto close timer',\r\n    link: 'auto-close-timer',\r\n    component: <AutoCloseAlert />,\r\n    filename: './AutoCloseAlert.txt',\r\n  },\r\n  {\r\n    label: 'Advanced Alert',\r\n    link: 'advanced-alert',\r\n    component: <AdvancedAlert />,\r\n    filename: './AdvancedAlert.txt',\r\n  },\r\n  {\r\n    label: 'Toast Alerts',\r\n    link: 'toast-alerts',\r\n    component: <ToastAlerts />,\r\n    filename: './ToastAlerts.txt',\r\n  },\r\n  {\r\n    label: 'Alerts Type',\r\n    link: 'alerts-type',\r\n    component: <AlertsType />,\r\n    filename: './AlertsType.txt',\r\n  },\r\n];\r\n\r\nconst breadcrumbs = [\r\n  { label: 'Home', link: '/' },\r\n  { label: 'Extensions', link: '/extensions' },\r\n  { label: 'SweetAlerts', isActive: true },\r\n];\r\n\r\nconst SweetAlerts = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <ComponentsDemo pageTitle=\"SweetAlerts\" menus={demos} breadcrumbs={breadcrumbs}>\r\n      {demos.map((menu, index) => (\r\n        <Box key={index} id={menu.link} className={classes.section}>\r\n          <Typography component=\"h3\" variant=\"inherit\" className={classes.sectionHeading}>\r\n            {menu.label}\r\n          </Typography>\r\n          <CodeViewerCard code={requireRaw(menu.filename).default} language=\"jsx\">\r\n            {menu.component}\r\n          </CodeViewerCard>\r\n        </Box>\r\n      ))}\r\n    </ComponentsDemo>\r\n  );\r\n};\r\n\r\nexport default SweetAlerts;\r\n"],"sourceRoot":""}