{"version":3,"sources":["@jumbo/components/PageComponents/layouts/PageContainer.js","@jumbo/components/PageComponents/PageHeader.js","@jumbo/components/PageComponents/PageBreadcrumbs/index.js","@jumbo/components/PageComponents/layouts/CorematComponentDemo.js","@jumbo/components/PageComponents/layouts/MuiComponentDemo.js","@jumbo/components/PageComponents/layouts/ComponentsDemo.js","routes/Components/CorematComponents/GridViewDemo/DemoSettings.js","@coremat/CmtGridView/GridEmptyResult.js","@coremat/CmtGridView/CmtGridPagination.js","routes/Components/CorematComponents/GridViewDemo/GridView.js","routes/Components/CorematComponents/GridViewDemo/GridContextProvider.js","routes/Components/CorematComponents/GridViewDemo/DemoSourceCode.js","routes/Components/CorematComponents/GridViewDemo/index.js"],"names":["useStyles","makeStyles","pageFull","width","PageContainer","heading","breadcrumbs","children","className","restProps","classes","in","direction","mountOnEnter","unmountOnExit","clsx","breadcrumbComponent","items","theme","pageHeaderRoot","display","flexDirection","breakpoints","up","alignItems","titleRoot","down","marginBottom","PageHeader","rest","Box","mb","xs","md","lg","Typography","component","variant","ml","sm","textSm","fontSize","linkBlock","color","PageBreadcrumbs","Breadcrumbs","aria-label","map","item","index","isActive","key","label","to","link","CorematComponentDemo","SourceCodeComponent","SettingsComponent","GridContainer","Grid","CmtCard","MuiComponentDemo","pageTitle","menus","ComponentsDemo","root","flexWrap","contentArea","paddingRight","typography","pxToRem","contentSidebar","height","position","top","overflowY","flexShrink","xsDown","menu","dense","button","href","primary","DemoSettings","useContext","CorematContext","column","setColumns","responsive","setResponsiveStatus","resultEmpty","setResultEmpty","initLoader","setInitLoader","showFooter","setFooterVisibility","paginationType","setPaginationType","setPosition","loadMore","setLoadMore","useEffect","title","AppSwitch","name","checked","onChange","event","target","option","AppRadioButton","value","emptyListContainer","minHeight","padding","justifyContent","backgroundColor","palette","background","paper","border","alpha","common","black","borderRadius","textAlign","flexRow","GridEmptyResult","loader","placeholder","loading","actionTitle","content","onClick","Fragment","CircularProgress","size","Button","style","marginTop","minWidth","prototype","PropTypes","bool","string","func","oneOfType","element","defaultProps","navPagination","CmtGridPagination","data","paginationProps","onPageChange","pageItemCounts","page","count","updatedData","slice","ListFooterComponent","Pagination","itemRoot","cursor","marginRight","badgePrice","main","typoList","GridView","productsList","coremat","getData","renderRow","CmtMediaObject","avatar","logo","titleProps","actionsComponent","price","sold","handleEndReached","getColumnsSizes","xl","maxHeight","itemPadding","onEndReached","ListEmptyComponent","CmtGridView","footerProps","footerText","GridContextProvider","useState","Provider","DemoSourceCode","getColumnsSizesCode","getListSourceCode","sourceCode","CmtGridViewDemo"],"mappings":"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","file":"static/js/166.bc02f526.chunk.js","sourcesContent":["import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { PageBreadcrumbs, PageHeader } from '../index';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  pageFull: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst PageContainer = ({ heading, breadcrumbs, children, className, restProps }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Slide in={true} direction=\"up\" mountOnEnter unmountOnExit>\r\n      <Box className={clsx(classes.pageFull, className)} {...restProps}>\r\n        {(heading || breadcrumbs) && (\r\n          <PageHeader heading={heading} breadcrumbComponent={breadcrumbs && <PageBreadcrumbs items={breadcrumbs} />} />\r\n        )}\r\n        {children}\r\n      </Box>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default PageContainer;\r\n","import React from 'react';\r\nimport { Box, makeStyles, Typography } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageHeaderRoot: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.up('sm')]: {\r\n      alignItems: 'center',\r\n      flexDirection: 'row',\r\n    },\r\n  },\r\n  titleRoot: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginBottom: 10,\r\n    },\r\n  },\r\n}));\r\n\r\nconst PageHeader = ({ heading, breadcrumbComponent, children, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={clsx(classes.pageHeaderRoot, 'page-header')} mb={{ xs: 5, md: 6, lg: 8 }} {...rest}>\r\n      <Typography component=\"div\" variant=\"h1\" className={clsx(classes.titleRoot, 'title')}>\r\n        {heading}\r\n      </Typography>\r\n      <Box ml={{ sm: 'auto' }}>{breadcrumbComponent}</Box>\r\n\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import React from 'react';\r\nimport { Breadcrumbs, makeStyles } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { NavLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  textSm: {\r\n    fontSize: 12,\r\n  },\r\n  linkBlock: {\r\n    display: 'block',\r\n    color: 'inherit',\r\n  },\r\n}));\r\n\r\nconst PageBreadcrumbs = ({ items, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Breadcrumbs className=\"bread-crumbs\" aria-label=\"breadcrumb {...rest}\">\r\n      {items.map((item, index) =>\r\n        item.isActive ? (\r\n          <Typography key={index} className={classes.textSm} color=\"textPrimary\">\r\n            {item.label}\r\n          </Typography>\r\n        ) : (\r\n          <NavLink key={index} className={clsx(classes.textSm, classes.linkBlock)} color=\"inherit\" to={item.link || '/'}>\r\n            {item.label}\r\n          </NavLink>\r\n        ),\r\n      )}\r\n    </Breadcrumbs>\r\n  );\r\n};\r\n\r\nexport default PageBreadcrumbs;\r\n","import React from 'react';\r\nimport { Box, Grid } from '@material-ui/core';\r\nimport CmtCard from '../../../../@coremat/CmtCard';\r\nimport { PageHeader } from '../index';\r\nimport GridContainer from '../../GridContainer';\r\nimport PageContainer from './PageContainer';\r\n\r\nconst CorematComponentDemo = ({ SourceCodeComponent, SettingsComponent, children }) => {\r\n  return (\r\n    <PageContainer>\r\n      <GridContainer>\r\n        <Grid item xs={12} md={7}>\r\n          <PageHeader heading=\"Preview\" />\r\n          <Box mb={8}>{children}</Box>\r\n          <CmtCard>{SourceCodeComponent}</CmtCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={5}>\r\n          {SettingsComponent}\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default CorematComponentDemo;\r\n","import React from 'react';\r\nimport ComponentsDemo from './ComponentsDemo';\r\n\r\nconst MuiComponentDemo = ({ pageTitle, menus, children }) => {\r\n  const breadcrumbs = [\r\n    { label: 'Home', link: '/' },\r\n    { label: 'Material UI Components', link: '/components/mui' },\r\n    { label: pageTitle, isActive: true },\r\n  ];\r\n  return (\r\n    <ComponentsDemo pageTitle={pageTitle} breadcrumbs={breadcrumbs} menus={menus}>\r\n      {children}\r\n    </ComponentsDemo>\r\n  );\r\n};\r\nexport default MuiComponentDemo;\r\n","import React from 'react';\r\nimport { Box, Hidden, List, ListItem, ListItemText, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PageContainer from './PageContainer';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  contentArea: {\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingRight: theme.typography.pxToRem(30),\r\n      width: `calc(100% - ${theme.typography.pxToRem(175)})`,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingRight: theme.typography.pxToRem(54),\r\n    },\r\n  },\r\n  contentSidebar: {\r\n    width: theme.typography.pxToRem(175),\r\n    height: `calc(100vh - ${theme.typography.pxToRem(102)})`,\r\n    position: 'sticky',\r\n    top: 30,\r\n    overflowY: 'auto',\r\n    flexShrink: 0,\r\n  },\r\n}));\r\n\r\nconst ComponentsDemo = ({ pageTitle, menus, breadcrumbs, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <PageContainer heading={pageTitle} breadcrumbs={breadcrumbs}>\r\n      <Box className={classes.root}>\r\n        <Box className={classes.contentArea}>{children}</Box>\r\n        <Hidden xsDown>\r\n          <Box className={classes.contentSidebar}>\r\n            <Typography component=\"h4\" variant=\"h4\">\r\n              Contents\r\n            </Typography>\r\n            <List>\r\n              {menus.map((menu, index) => (\r\n                <ListItem key={index} dense button component=\"a\" href={`#${menu.link}`}>\r\n                  <ListItemText primary={menu.label} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Box>\r\n        </Hidden>\r\n      </Box>\r\n    </PageContainer>\r\n  );\r\n};\r\nexport default ComponentsDemo;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport CorematContext from '../../../../@jumbo/components/contextProvider/CorematContext';\r\nimport { SectionLegend, SettingsComponent } from '../../../../@jumbo/components/CorematDemosComponents';\r\nimport AppRadioButton from '../../../../@jumbo/components/Common/formElements/AppRadioButton';\r\nimport AppSwitch from '../../../../@jumbo/components/Common/formElements/AppSwitch';\r\n\r\nconst DemoSettings = () => {\r\n  const {\r\n    column,\r\n    setColumns,\r\n    responsive,\r\n    setResponsiveStatus,\r\n    resultEmpty,\r\n    setResultEmpty,\r\n    initLoader,\r\n    setInitLoader,\r\n    showFooter,\r\n    setFooterVisibility,\r\n    paginationType,\r\n    setPaginationType,\r\n    position,\r\n    setPosition,\r\n    loadMore,\r\n    setLoadMore,\r\n  } = useContext(CorematContext);\r\n\r\n  const columnSizes = [2, 3, 4];\r\n\r\n  const paginationTypes = [\r\n    { label: 'Load More', value: 'load-more' },\r\n    { label: 'Pagination', value: 'pagination' },\r\n  ];\r\n\r\n  const positions = [\r\n    { label: 'Left', value: 'left' },\r\n    { label: 'Center', value: 'center' },\r\n    { label: 'Right', value: 'right' },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (initLoader) {\r\n      setResultEmpty(true);\r\n    }\r\n  }, [initLoader, setResultEmpty]);\r\n\r\n  useEffect(() => {\r\n    if (!resultEmpty) {\r\n      setInitLoader(false);\r\n    }\r\n  }, [resultEmpty, setInitLoader]);\r\n\r\n  return (\r\n    <SettingsComponent title=\"Cmt Grid View\">\r\n      <SectionLegend title=\"Basic Settings\">\r\n        <AppSwitch\r\n          name=\"responsive\"\r\n          label=\"Responsive Grid\"\r\n          checked={responsive}\r\n          onChange={event => setResponsiveStatus(event.target.checked)}\r\n        />\r\n      </SectionLegend>\r\n\r\n      {!responsive && (\r\n        <SectionLegend title=\"Choose column size\">\r\n          {columnSizes.map((option, index) => (\r\n            <AppRadioButton\r\n              key={index}\r\n              name=\"column\"\r\n              label={option}\r\n              value={option}\r\n              checked={column === option}\r\n              onChange={() => setColumns(option)}\r\n            />\r\n          ))}\r\n        </SectionLegend>\r\n      )}\r\n\r\n      <SectionLegend>\r\n        <AppSwitch\r\n          name=\"show-initial-loader\"\r\n          label=\"Show Initial Loader\"\r\n          checked={initLoader}\r\n          onChange={event => setInitLoader(event.target.checked)}\r\n        />\r\n      </SectionLegend>\r\n\r\n      <SectionLegend>\r\n        <AppSwitch\r\n          name=\"result-empty\"\r\n          label=\"Make Result Empty\"\r\n          checked={resultEmpty}\r\n          onChange={event => setResultEmpty(event.target.checked)}\r\n        />\r\n      </SectionLegend>\r\n\r\n      <SectionLegend>\r\n        <AppSwitch\r\n          name=\"show-footer\"\r\n          label=\"Show Footer\"\r\n          checked={showFooter}\r\n          onChange={event => setFooterVisibility(event.target.checked)}\r\n        />\r\n      </SectionLegend>\r\n\r\n      {showFooter && (\r\n        <SectionLegend title=\"Show Loading more content\">\r\n          {paginationTypes.map((item, index) => (\r\n            <AppRadioButton\r\n              key={index}\r\n              name=\"pagination-type\"\r\n              label={item.label}\r\n              value={item.value}\r\n              checked={paginationType === item.value}\r\n              onChange={() => setPaginationType(item.value)}\r\n            />\r\n          ))}\r\n        </SectionLegend>\r\n      )}\r\n\r\n      {showFooter && paginationType === 'pagination' && (\r\n        <SectionLegend title=\"Pagination Position\">\r\n          {positions.map((item, index) => (\r\n            <AppRadioButton\r\n              key={index}\r\n              name=\"show-border\"\r\n              label={item.label}\r\n              value={item.value}\r\n              checked={position === item.value}\r\n              onChange={() => setPosition(item.value)}\r\n            />\r\n          ))}\r\n        </SectionLegend>\r\n      )}\r\n\r\n      {showFooter && paginationType === 'load-more' && (\r\n        <SectionLegend>\r\n          <AppSwitch\r\n            name=\"show-load-more-content\"\r\n            label=\"Show Loading more content\"\r\n            checked={loadMore}\r\n            onChange={event => setLoadMore(event.target.checked)}\r\n          />\r\n        </SectionLegend>\r\n      )}\r\n    </SettingsComponent>\r\n  );\r\n};\r\n\r\nexport default DemoSettings;\r\n","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Box, Button, CircularProgress } from '@material-ui/core';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  emptyListContainer: {\r\n    flexDirection: 'column',\r\n    minHeight: 250,\r\n    height: '100%',\r\n    display: 'flex',\r\n    padding: 20,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: `1px solid ${alpha(theme.palette.common.black, 0.12)}`,\r\n    borderRadius: 4,\r\n    textAlign: 'center',\r\n  },\r\n  flexRow: {\r\n    flexDirection: 'row',\r\n  },\r\n}));\r\n\r\nconst GridEmptyResult = ({ loader, placeholder, loading, title, actionTitle, content, onClick, children }) => {\r\n  const classes = useStyles();\r\n  if (loading || loader) {\r\n    return (\r\n      <React.Fragment>\r\n        {placeholder ? (\r\n          placeholder\r\n        ) : (\r\n          <div className={clsx(classes.emptyListContainer, classes.flexRow, 'CmtGridList-EmptyResult')}>\r\n            <CircularProgress size={16} />\r\n            <span className=\"ml-2\">Loading...</span>\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className={clsx(classes.emptyListContainer, 'CmtGridList-EmptyResult')}>\r\n        {children ? (\r\n          children\r\n        ) : (\r\n          <React.Fragment>\r\n            {title && (\r\n              <Box component=\"h4\" fontSize={28} color=\"text.primary\" mb={3}>\r\n                {title}\r\n              </Box>\r\n            )}\r\n            <Box fontSize={18} component=\"p\" color=\"text.secondary\">\r\n              {content}\r\n            </Box>\r\n\r\n            {actionTitle && (\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                style={{ marginTop: 30, height: 45, minWidth: 150 }}\r\n                onClick={onClick}>\r\n                {actionTitle}\r\n              </Button>\r\n            )}\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nGridEmptyResult.prototype = {\r\n  loader: PropTypes.bool,\r\n  loading: PropTypes.bool,\r\n  placeholder: PropTypes.string,\r\n  title: PropTypes.string,\r\n  actionTitle: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n};\r\n\r\nGridEmptyResult.defaultProps = {\r\n  loader: false,\r\n  loading: false,\r\n  placeholder: '',\r\n  title: '',\r\n  actionTitle: '',\r\n  content: '',\r\n};\r\n\r\nexport default GridEmptyResult;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nimport GridView from './GridView';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  navPagination: {\r\n    display: 'flex',\r\n    padding: 10,\r\n    '&.left': {\r\n      justifyContent: 'flex-start',\r\n    },\r\n    '&.right': {\r\n      justifyContent: 'flex-end',\r\n    },\r\n    '&.center': {\r\n      justifyContent: 'center',\r\n    },\r\n  },\r\n}));\r\n\r\nconst CmtGridPagination = ({ data, position, paginationProps, onPageChange, pageItemCounts, ...rest }) => {\r\n  const classes = useStyles();\r\n  const { page, count } = paginationProps || {};\r\n  let updatedData = data;\r\n  if (count > 0) {\r\n    updatedData = data.slice((page - 1) * pageItemCounts, page * pageItemCounts);\r\n  }\r\n  return (\r\n    <GridView\r\n      {...rest}\r\n      data={updatedData}\r\n      ListFooterComponent={\r\n        count > 0 ? (\r\n          <Pagination className={clsx(classes.navPagination, position)} count={count} page={page} onChange={onPageChange} />\r\n        ) : null\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default CmtGridPagination;\r\nCmtGridPagination.propTypes = {\r\n  paginationProps: PropTypes.object,\r\n  // @pageItemCounts display item at a time in list\r\n  pageItemCounts: PropTypes.number,\r\n  position: PropTypes.oneOf(['left', 'center', 'right']),\r\n  ListEmptyComponent: PropTypes.element,\r\n  ListFooterComponent: PropTypes.element,\r\n  data: PropTypes.array.isRequired,\r\n  onEndReached: PropTypes.func.isRequired,\r\n  onPageChange: PropTypes.func,\r\n};\r\n\r\nCmtGridPagination.defaultProps = {\r\n  paginationProps: {\r\n    // @page is current active page in pagination\r\n    page: 1,\r\n    // @page total count of pages shown in pagination\r\n    count: 5,\r\n  },\r\n  pageItemCounts: 10,\r\n  position: 'right',\r\n  data: [],\r\n};\r\n","import React, { useContext } from 'react';\r\nimport CorematContext from '../../../../@jumbo/components/contextProvider/CorematContext';\r\nimport { coremat } from '../../../../@fake-db';\r\nimport CmtMediaObject from '../../../../@coremat/CmtMediaObject';\r\nimport CmtGridView from '../../../../@coremat/CmtGridView';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport GridEmptyResult from '../../../../@coremat/CmtGridView/GridEmptyResult';\r\nimport CmtGridPagination from '../../../../@coremat/CmtGridView/CmtGridPagination';\r\nimport Box from '@material-ui/core/Box';\r\nimport { Typography } from '@material-ui/core';\r\nimport { alpha } from '@material-ui/core/styles';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { JumboCard } from '../../../../@jumbo/components/Common';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  itemRoot: {\r\n    padding: 1,\r\n    '& .Cmt-avatar': {\r\n      height: 34,\r\n      width: 34,\r\n      cursor: 'pointer',\r\n    },\r\n    '& .Cmt-media-header': {\r\n      marginBottom: 8,\r\n    },\r\n    '& .Cmt-media-image': {\r\n      marginRight: 4,\r\n      marginTop: 0,\r\n    },\r\n    '& .titleRoot': {\r\n      fontSize: 16,\r\n    },\r\n  },\r\n  badgePrice: {\r\n    cursor: 'pointer',\r\n    fontSize: 14,\r\n    backgroundColor: alpha(theme.palette.primary.main, 0.1),\r\n    color: theme.palette.primary.main,\r\n    padding: '4px 10px',\r\n    borderRadius: 4,\r\n    display: 'block',\r\n  },\r\n  typoList: {\r\n    marginRight: 15,\r\n  },\r\n}));\r\n\r\nconst GridView = () => {\r\n  const classes = useStyles();\r\n  const { column, responsive, resultEmpty, initLoader, showFooter, paginationType, position, loadMore } = useContext(\r\n    CorematContext,\r\n  );\r\n  const { productsList } = coremat;\r\n\r\n  const getData = () => {\r\n    if (resultEmpty) return [];\r\n    return productsList;\r\n  };\r\n\r\n  const renderRow = (item, index) => {\r\n    return (\r\n      <Box key={index} className={classes.itemRoot}>\r\n        <JumboCard>\r\n          <CmtMediaObject\r\n            avatar={item.logo}\r\n            title={item.name}\r\n            titleProps={{ className: 'pointer titleRoot' }}\r\n            actionsComponent={\r\n              <Box className={classes.badgePrice} component=\"span\">\r\n                {item.price}\r\n              </Box>\r\n            }>\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n              <Typography className={classes.typoList} variant=\"body2\">\r\n                {item.sold}\r\n                <Box ml={1} component=\"span\" color=\"text.secondary\">\r\n                  Sold\r\n                </Box>\r\n              </Typography>\r\n            </Box>\r\n          </CmtMediaObject>\r\n        </JumboCard>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const handleEndReached = () => {\r\n    //todo handle end of the items\r\n  };\r\n\r\n  const getColumnsSizes = () => {\r\n    if (responsive) {\r\n      return {\r\n        responsive: {\r\n          xs: 1,\r\n          sm: 2,\r\n          md: 2,\r\n          lg: 2,\r\n          xl: 3,\r\n        },\r\n      };\r\n    }\r\n\r\n    return { column };\r\n  };\r\n\r\n  return (\r\n    <PerfectScrollbar style={{ maxHeight: 350 }}>\r\n      {paginationType === 'pagination' ? (\r\n        <CmtGridPagination\r\n          paginationProps={{ page: 1, count: 5 }}\r\n          position={position}\r\n          data={getData()}\r\n          renderRow={renderRow}\r\n          itemPadding={10}\r\n          {...getColumnsSizes()}\r\n          onEndReached={handleEndReached}\r\n          ListEmptyComponent={\r\n            <GridEmptyResult\r\n              loader={initLoader}\r\n              title=\"No Data Found\"\r\n              content=\"Empty result description\"\r\n              actionTitle=\"Add Content\"\r\n            />\r\n          }\r\n        />\r\n      ) : (\r\n        <CmtGridView\r\n          data={getData()}\r\n          renderRow={renderRow}\r\n          itemPadding={10}\r\n          {...getColumnsSizes()}\r\n          onEndReached={handleEndReached}\r\n          ListEmptyComponent={\r\n            <GridEmptyResult\r\n              loader={initLoader}\r\n              title=\"No Data Found\"\r\n              content=\"Empty result description\"\r\n              actionTitle=\"Add Content\"\r\n            />\r\n          }\r\n          footerProps={\r\n            showFooter\r\n              ? {\r\n                  loading: loadMore,\r\n                  footerText: 'No more content',\r\n                }\r\n              : null\r\n          }\r\n        />\r\n      )}\r\n    </PerfectScrollbar>\r\n  );\r\n};\r\n\r\nexport default GridView;\r\n","import React, { useState } from 'react';\r\nimport CorematContext from '../../../../@jumbo/components/contextProvider/CorematContext';\r\n\r\nconst GridContextProvider = ({ children }) => {\r\n  const [resultEmpty, setResultEmpty] = useState(false);\r\n  const [initLoader, setInitLoader] = useState(false);\r\n  const [showFooter, setFooterVisibility] = useState(false);\r\n  const [paginationType, setPaginationType] = useState('load-more');\r\n  const [position, setPosition] = useState('center');\r\n  const [loadMore, setLoadMore] = useState(false);\r\n  const [column, setColumns] = useState(3);\r\n  const [responsive, setResponsiveStatus] = useState(false);\r\n\r\n  return (\r\n    <CorematContext.Provider\r\n      value={{\r\n        resultEmpty,\r\n        setResultEmpty,\r\n        initLoader,\r\n        setInitLoader,\r\n        showFooter,\r\n        setFooterVisibility,\r\n        paginationType,\r\n        setPaginationType,\r\n        position,\r\n        setPosition,\r\n        loadMore,\r\n        setLoadMore,\r\n        column,\r\n        setColumns,\r\n        responsive,\r\n        setResponsiveStatus,\r\n      }}>\r\n      {children}\r\n    </CorematContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GridContextProvider;\r\n","import React, { useContext } from 'react';\r\nimport CorematContext from '../../../../@jumbo/components/contextProvider/CorematContext';\r\nimport { SourceCodeComponent } from '../../../../@jumbo/components/CorematDemosComponents';\r\n\r\nconst DemoSourceCode = () => {\r\n  const { column, responsive, resultEmpty, initLoader, showFooter, paginationType, position, loadMore } = useContext(\r\n    CorematContext,\r\n  );\r\n\r\n  const getData = () => {\r\n    if (resultEmpty) {\r\n      return '[]';\r\n    }\r\n\r\n    return 'data';\r\n  };\r\n\r\n  const getColumnsSizesCode = () => {\r\n    if (responsive) {\r\n      return `\r\n  responsive={{\r\n    xs: 1,\r\n    sm: 2,\r\n    md: 2,\r\n    lg: 2,\r\n    xl: 3,\r\n  }}`;\r\n    }\r\n\r\n    return `\r\n  column={${column}}`;\r\n  };\r\n\r\n  const getFooterCode = () => {\r\n    if (showFooter) {\r\n      return `\r\n  footerProps={\r\n    {\r\n      loading: ${loadMore},\r\n      footerText: 'No more content',\r\n    }\r\n  }`;\r\n    }\r\n\r\n    return '';\r\n  };\r\n\r\n  const getPaginationSourceCode = () => {\r\n    return (\r\n      `\r\n<CmtGridPagination\r\n  paginationProps={{ page: 1, count: 5 }}\r\n  position=\"${position}\"\r\n  data={` +\r\n      getData() +\r\n      `}\r\n  renderRow={renderRow}\r\n  itemPadding={10} ` +\r\n      getColumnsSizesCode() +\r\n      `\r\n  onEndReached={() => console.log('You have reached end of list')}\r\n  ListEmptyComponent={\r\n    <GridEmptyResult\r\n      loader={${initLoader}}\r\n      title=\"No Data Found\"\r\n      content=\"Empty result description\"\r\n      actionTitle=\"Add Content\"\r\n    />\r\n  }\r\n/>\r\n`\r\n    );\r\n  };\r\n\r\n  const getListSourceCode = () => {\r\n    return (\r\n      `\r\n<CmtGridView\r\n  data={` +\r\n      getData() +\r\n      `}\r\n  renderRow={renderRow}\r\n  itemPadding={10} ` +\r\n      getColumnsSizesCode() +\r\n      `\r\n  onEndReached={() => console.log('You have reached end of list')}\r\n  ListEmptyComponent={\r\n    <GridEmptyResult\r\n      loader={${initLoader}}\r\n      title=\"No Data Found\"\r\n      content=\"Empty result description\"\r\n      actionTitle=\"Add Content\"\r\n    />\r\n  }` +\r\n      getFooterCode() +\r\n      `\r\n/>\r\n`\r\n    );\r\n  };\r\n\r\n  const getSourceCode = () => {\r\n    return (\r\n      (paginationType === 'pagination' ? getPaginationSourceCode() : getListSourceCode()) +\r\n      `\r\nconst theme = useTheme();\r\n\r\nconst renderRow = (item, index) => {\r\n  return (\r\n    <Box key={index} className={classes.itemRoot}>\r\n      <JumboCard>\r\n          <CmtMediaObject\r\n            avatar={item.logo}\r\n            title={item.name}\r\n            titleProps={{ className: 'pointer titleRoot' }}\r\n            actionsComponent={\r\n              <Box className={classes.badgePrice} component=\"span\">\r\n                {item.price}\r\n              </Box>\r\n            }>\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n              <Typography className={classes.typoList} variant=\"body2\">\r\n                {item.sold}\r\n                <Box ml={1} component=\"span\" color=\"text.secondary\">\r\n                  Sold\r\n                </Box>\r\n              </Typography>\r\n            </Box>\r\n          </CmtMediaObject>\r\n        </JumboCard>\r\n    </Box>\r\n  );\r\n};\r\n`\r\n    );\r\n  };\r\n\r\n  return <SourceCodeComponent sourceCode={getSourceCode()} />;\r\n};\r\n\r\nexport default DemoSourceCode;\r\n","import React from 'react';\r\nimport { CorematComponentDemo } from '../../../../@jumbo/components/PageComponents';\r\nimport DemoSettings from './DemoSettings';\r\nimport GridView from './GridView';\r\nimport GridContextProvider from './GridContextProvider';\r\nimport DemoSourceCode from './DemoSourceCode';\r\n\r\nconst CmtGridViewDemo = () => {\r\n  return (\r\n    <GridContextProvider>\r\n      <CorematComponentDemo SourceCodeComponent={<DemoSourceCode />} SettingsComponent={<DemoSettings />}>\r\n        <GridView />\r\n      </CorematComponentDemo>\r\n    </GridContextProvider>\r\n  );\r\n};\r\n\r\nexport default CmtGridViewDemo;\r\n"],"sourceRoot":""}